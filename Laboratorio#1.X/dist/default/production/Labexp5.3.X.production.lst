

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 17 19:46:39 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Version 2.40
    79                           ; Generated 08/12/2021 GMT
    80                           ; 
    81                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F57Q43 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113   000000                     
   114                           	psect	idataBANK5
   115   014A06                     __pidataBANK5:
   116                           	callstack 0
   117                           
   118                           ;initializer for _opSel
   119   014A06  0001               	dw	1
   120                           
   121                           ;initializer for _auxStr
   122   014A08  20                 	db	32
   123   014A09  00                 	db	0
   124   014A0A  00                 	db	0
   125   014A0B  00                 	db	0
   126   014A0C  00                 	db	0
   127   014A0D  00                 	db	0
   128   014A0E  00                 	db	0
   129   014A0F  00                 	db	0
   130   014A10  00                 	db	0
   131   014A11  00                 	db	0
   132   014A12  00                 	db	0
   133   014A13  00                 	db	0
   134   014A14  00                 	db	0
   135   014A15  00                 	db	0
   136   014A16  00                 	db	0
   137   014A17  00                 	db	0
   138   014A18  00                 	db	0
   139   014A19  00                 	db	0
   140   014A1A  00                 	db	0
   141   014A1B  00                 	db	0
   142                           
   143                           ;initializer for _fig2
   144   014A1C  04                 	db	4
   145   014A1D  04                 	db	4
   146   014A1E  0C                 	db	12
   147   014A1F  0F                 	db	15
   148   014A20  1E                 	db	30
   149   014A21  06                 	db	6
   150   014A22  04                 	db	4
   151   014A23  04                 	db	4
   152                           
   153                           ;initializer for _fig1
   154   014A24  04                 	db	4
   155   014A25  0E                 	db	14
   156   014A26  1F                 	db	31
   157   014A27  0E                 	db	14
   158   014A28  1F                 	db	31
   159   014A29  1B                 	db	27
   160   014A2A  1B                 	db	27
   161   014A2B  00                 	db	0
   162   000000                     _PORTDbits	set	1233
   163   000000                     _PORTEbits	set	1234
   164   000000                     _PORTFbits	set	1235
   165   000000                     _TRISEbits	set	1226
   166   000000                     _TRISFbits	set	1227
   167   000000                     _TRISDbits	set	1225
   168   000000                     _TRISCbits	set	1224
   169   000000                     _ANSELFbits	set	1064
   170   000000                     _TRISF	set	1227
   171   000000                     _PORTF	set	1235
   172   000000                     _OSCCON1bits	set	173
   173   000000                     _ANSELA	set	1024
   174   000000                     _ANSELBbits	set	1032
   175   000000                     _TRISBbits	set	1223
   176   000000                     _PORTCbits	set	1232
   177   000000                     _WPUBbits	set	1033
   178   000000                     _ANSELCbits	set	1040
   179   000000                     _ANSELDbits	set	1048
   180   000000                     _WPUDbits	set	1049
   181   000000                     _ANSELEbits	set	1056
   182   000000                     _ANSELF	set	1064
   183   000000                     _LATA	set	1214
   184   000000                     _TRISA	set	1222
   185   000000                     _PORTBbits	set	1231
   186   000000                     _OSCFRQbits	set	177
   187   000000                     _ADRESL	set	1002
   188   000000                     _ADRESH	set	1003
   189   000000                     _ADPCH	set	1004
   190   000000                     _ADCON0bits	set	1011
   191   000000                     _ADCON2bits	set	1013
   192   000000                     _ADREFbits	set	1016
   193                           
   194                           	psect	mediumconst
   195   00FEF6                     __pmediumconst:
   196                           	callstack 0
   197   00FEF6  00                 	db	0
   198   00FEF7                     STR_8:
   199                           
   200                           ; BSR set to: 3
   201   00FEF7  3C                 	db	60	;'<'
   202   00FEF8  2D                 	db	45
   203   00FEF9  20                 	db	32
   204   00FEFA  20                 	db	32
   205   00FEFB  20                 	db	32
   206   00FEFC  20                 	db	32
   207   00FEFD  33                 	db	51	;'3'
   208   00FEFE  2E                 	db	46
   209   00FEFF  53                 	db	83	;'S'
   210   00FF00  33                 	db	51	;'3'
   211   00FF01  20                 	db	32
   212   00FF02  20                 	db	32
   213   00FF03  20                 	db	32
   214   00FF04  20                 	db	32
   215   00FF05  20                 	db	32
   216   00FF06  20                 	db	32
   217   00FF07  00                 	db	0
   218   00FF08                     STR_10:
   219                           
   220                           ; BSR set to: 3
   221   00FF08  31                 	db	49	;'1'
   222   00FF09  2E                 	db	46
   223   00FF0A  4F                 	db	79	;'O'
   224   00FF0B  4E                 	db	78	;'N'
   225   00FF0C  20                 	db	32
   226   00FF0D  20                 	db	32
   227   00FF0E  32                 	db	50	;'2'
   228   00FF0F  2E                 	db	46
   229   00FF10  4F                 	db	79	;'O'
   230   00FF11  46                 	db	70	;'F'
   231   00FF12  46                 	db	70	;'F'
   232   00FF13  20                 	db	32
   233   00FF14  20                 	db	32
   234   00FF15  20                 	db	32
   235   00FF16  20                 	db	32
   236   00FF17  20                 	db	32
   237   00FF18  00                 	db	0
   238   00FF19                     STR_4:
   239                           
   240                           ; BSR set to: 3
   241   00FF19  3C                 	db	60	;'<'
   242   00FF1A  2D                 	db	45
   243   00FF1B  20                 	db	32
   244   00FF1C  33                 	db	51	;'3'
   245   00FF1D  2E                 	db	46
   246   00FF1E  4D                 	db	77	;'M'
   247   00FF1F  54                 	db	84	;'T'
   248   00FF20  20                 	db	32
   249   00FF21  20                 	db	32
   250   00FF22  34                 	db	52	;'4'
   251   00FF23  2E                 	db	46
   252   00FF24  53                 	db	83	;'S'
   253   00FF25  20                 	db	32
   254   00FF26  20                 	db	32
   255   00FF27  20                 	db	32
   256   00FF28  20                 	db	32
   257   00FF29  00                 	db	0
   258   00FF2A                     STR_12:
   259                           
   260                           ; BSR set to: 3
   261   00FF2A  20                 	db	32
   262   00FF2B  20                 	db	32
   263   00FF2C  20                 	db	32
   264   00FF2D  4D                 	db	77	;'M'
   265   00FF2E  45                 	db	69	;'E'
   266   00FF2F  4E                 	db	78	;'N'
   267   00FF30  55                 	db	85	;'U'
   268   00FF31  20                 	db	32
   269   00FF32  4D                 	db	77	;'M'
   270   00FF33  4F                 	db	79	;'O'
   271   00FF34  54                 	db	84	;'T'
   272   00FF35  4F                 	db	79	;'O'
   273   00FF36  52                 	db	82	;'R'
   274   00FF37  20                 	db	32
   275   00FF38  20                 	db	32
   276   00FF39  20                 	db	32
   277   00FF3A  00                 	db	0
   278   00FF3B                     STR_5:
   279                           
   280                           ; BSR set to: 3
   281   00FF3B  20                 	db	32
   282   00FF3C  4D                 	db	77	;'M'
   283   00FF3D  45                 	db	69	;'E'
   284   00FF3E  4E                 	db	78	;'N'
   285   00FF3F  55                 	db	85	;'U'
   286   00FF40  20                 	db	32
   287   00FF41  53                 	db	83	;'S'
   288   00FF42  45                 	db	69	;'E'
   289   00FF43  43                 	db	67	;'C'
   290   00FF44  55                 	db	85	;'U'
   291   00FF45  45                 	db	69	;'E'
   292   00FF46  4E                 	db	78	;'N'
   293   00FF47  43                 	db	67	;'C'
   294   00FF48  49                 	db	73	;'I'
   295   00FF49  41                 	db	65	;'A'
   296   00FF4A  20                 	db	32
   297   00FF4B  00                 	db	0
   298   00FF4C                     STR_13:
   299                           
   300                           ; BSR set to: 3
   301   00FF4C  31                 	db	49	;'1'
   302   00FF4D  2E                 	db	46
   303   00FF4E  44                 	db	68	;'D'
   304   00FF4F  20                 	db	32
   305   00FF50  20                 	db	32
   306   00FF51  32                 	db	50	;'2'
   307   00FF52  2E                 	db	46
   308   00FF53  49                 	db	73	;'I'
   309   00FF54  20                 	db	32
   310   00FF55  20                 	db	32
   311   00FF56  33                 	db	51	;'3'
   312   00FF57  2E                 	db	46
   313   00FF58  4F                 	db	79	;'O'
   314   00FF59  46                 	db	70	;'F'
   315   00FF5A  46                 	db	70	;'F'
   316   00FF5B  20                 	db	32
   317   00FF5C  00                 	db	0
   318   00FF5D                     STR_1:
   319                           
   320                           ; BSR set to: 3
   321   00FF5D  20                 	db	32
   322   00FF5E  4D                 	db	77	;'M'
   323   00FF5F  45                 	db	69	;'E'
   324   00FF60  4E                 	db	78	;'N'
   325   00FF61  55                 	db	85	;'U'
   326   00FF62  20                 	db	32
   327   00FF63  50                 	db	80	;'P'
   328   00FF64  52                 	db	82	;'R'
   329   00FF65  49                 	db	73	;'I'
   330   00FF66  4E                 	db	78	;'N'
   331   00FF67  43                 	db	67	;'C'
   332   00FF68  49                 	db	73	;'I'
   333   00FF69  50                 	db	80	;'P'
   334   00FF6A  41                 	db	65	;'A'
   335   00FF6B  4C                 	db	76	;'L'
   336   00FF6C  20                 	db	32
   337   00FF6D  00                 	db	0
   338   00FF6E                     STR_14:
   339                           
   340                           ; BSR set to: 3
   341   00FF6E  20                 	db	32
   342   00FF6F  20                 	db	32
   343   00FF70  4D                 	db	77	;'M'
   344   00FF71  45                 	db	69	;'E'
   345   00FF72  4E                 	db	78	;'N'
   346   00FF73  55                 	db	85	;'U'
   347   00FF74  20                 	db	32
   348   00FF75  53                 	db	83	;'S'
   349   00FF76  45                 	db	69	;'E'
   350   00FF77  4E                 	db	78	;'N'
   351   00FF78  53                 	db	83	;'S'
   352   00FF79  4F                 	db	79	;'O'
   353   00FF7A  52                 	db	82	;'R'
   354   00FF7B  45                 	db	69	;'E'
   355   00FF7C  53                 	db	83	;'S'
   356   00FF7D  20                 	db	32
   357   00FF7E  00                 	db	0
   358   00FF7F                     STR_6:
   359                           
   360                           ; BSR set to: 3
   361   00FF7F  31                 	db	49	;'1'
   362   00FF80  2E                 	db	46
   363   00FF81  53                 	db	83	;'S'
   364   00FF82  31                 	db	49	;'1'
   365   00FF83  20                 	db	32
   366   00FF84  20                 	db	32
   367   00FF85  32                 	db	50	;'2'
   368   00FF86  2E                 	db	46
   369   00FF87  53                 	db	83	;'S'
   370   00FF88  32                 	db	50	;'2'
   371   00FF89  20                 	db	32
   372   00FF8A  20                 	db	32
   373   00FF8B  20                 	db	32
   374   00FF8C  20                 	db	32
   375   00FF8D  2D                 	db	45
   376   00FF8E  3E                 	db	62	;'>'
   377   00FF8F  00                 	db	0
   378   00FF90                     STR_2:
   379                           
   380                           ; BSR set to: 3
   381   00FF90  31                 	db	49	;'1'
   382   00FF91  2E                 	db	46
   383   00FF92  4C                 	db	76	;'L'
   384   00FF93  45                 	db	69	;'E'
   385   00FF94  44                 	db	68	;'D'
   386   00FF95  53                 	db	83	;'S'
   387   00FF96  20                 	db	32
   388   00FF97  20                 	db	32
   389   00FF98  32                 	db	50	;'2'
   390   00FF99  2E                 	db	46
   391   00FF9A  43                 	db	67	;'C'
   392   00FF9B  20                 	db	32
   393   00FF9C  20                 	db	32
   394   00FF9D  20                 	db	32
   395   00FF9E  2D                 	db	45
   396   00FF9F  3E                 	db	62	;'>'
   397   00FFA0  00                 	db	0
   398   00FFA1                     STR_9:
   399                           
   400                           ; BSR set to: 3
   401   00FFA1  4D                 	db	77	;'M'
   402   00FFA2  45                 	db	69	;'E'
   403   00FFA3  4E                 	db	78	;'N'
   404   00FFA4  55                 	db	85	;'U'
   405   00FFA5  20                 	db	32
   406   00FFA6  20                 	db	32
   407   00FFA7  43                 	db	67	;'C'
   408   00FFA8  41                 	db	65	;'A'
   409   00FFA9  4C                 	db	76	;'L'
   410   00FFAA  45                 	db	69	;'E'
   411   00FFAB  4E                 	db	78	;'N'
   412   00FFAC  54                 	db	84	;'T'
   413   00FFAD  41                 	db	65	;'A'
   414   00FFAE  44                 	db	68	;'D'
   415   00FFAF  4F                 	db	79	;'O'
   416   00FFB0  52                 	db	82	;'R'
   417   00FFB1  00                 	db	0
   418   00FFB2                     STR_21:
   419                           
   420                           ; BSR set to: 3
   421   00FFB2  4D                 	db	77	;'M'
   422   00FFB3  55                 	db	85	;'U'
   423   00FFB4  59                 	db	89	;'Y'
   424   00FFB5  20                 	db	32
   425   00FFB6  43                 	db	67	;'C'
   426   00FFB7  45                 	db	69	;'E'
   427   00FFB8  52                 	db	82	;'R'
   428   00FFB9  43                 	db	67	;'C'
   429   00FFBA  41                 	db	65	;'A'
   430   00FFBB  4E                 	db	78	;'N'
   431   00FFBC  4F                 	db	79	;'O'
   432   00FFBD  20                 	db	32
   433   00FFBE  20                 	db	32
   434   00FFBF  00                 	db	0
   435   00FFC0                     STR_20:
   436                           
   437                           ; BSR set to: 3
   438   00FFC0  48                 	db	72	;'H'
   439   00FFC1  41                 	db	65	;'A'
   440   00FFC2  59                 	db	89	;'Y'
   441   00FFC3  20                 	db	32
   442   00FFC4  55                 	db	85	;'U'
   443   00FFC5  4E                 	db	78	;'N'
   444   00FFC6  20                 	db	32
   445   00FFC7  4F                 	db	79	;'O'
   446   00FFC8  42                 	db	66	;'B'
   447   00FFC9  4A                 	db	74	;'J'
   448   00FFCA  45                 	db	69	;'E'
   449   00FFCB  54                 	db	84	;'T'
   450   00FFCC  4F                 	db	79	;'O'
   451   00FFCD  00                 	db	0
   452   00FFCE                     STR_18:
   453                           
   454                           ; BSR set to: 3
   455   00FFCE  54                 	db	84	;'T'
   456   00FFCF  45                 	db	69	;'E'
   457   00FFD0  4D                 	db	77	;'M'
   458   00FFD1  50                 	db	80	;'P'
   459   00FFD2  45                 	db	69	;'E'
   460   00FFD3  52                 	db	82	;'R'
   461   00FFD4  41                 	db	65	;'A'
   462   00FFD5  54                 	db	84	;'T'
   463   00FFD6  55                 	db	85	;'U'
   464   00FFD7  52                 	db	82	;'R'
   465   00FFD8  41                 	db	65	;'A'
   466   00FFD9  00                 	db	0
   467   00FFDA                     STR_17:
   468                           
   469                           ; BSR set to: 3
   470   00FFDA  54                 	db	84	;'T'
   471   00FFDB  3A                 	db	58	;':'
   472   00FFDC  20                 	db	32
   473   00FFDD  25                 	db	37
   474   00FFDE  30                 	db	48	;'0'
   475   00FFDF  2E                 	db	46
   476   00FFE0  31                 	db	49	;'1'
   477   00FFE1  66                 	db	102	;'f'
   478   00FFE2  00                 	db	0
   479   00FFE3                     STR_19:
   480                           
   481                           ; BSR set to: 3
   482   00FFE3  45                 	db	69	;'E'
   483   00FFE4  4C                 	db	76	;'L'
   484   00FFE5  45                 	db	69	;'E'
   485   00FFE6  56                 	db	86	;'V'
   486   00FFE7  41                 	db	65	;'A'
   487   00FFE8  44                 	db	68	;'D'
   488   00FFE9  41                 	db	65	;'A'
   489   00FFEA  00                 	db	0
   490   00FFEB                     STR_15:
   491                           
   492                           ; BSR set to: 3
   493   00FFEB  44                 	db	68	;'D'
   494   00FFEC  3A                 	db	58	;':'
   495   00FFED  20                 	db	32
   496   00FFEE  25                 	db	37
   497   00FFEF  30                 	db	48	;'0'
   498   00FFF0  33                 	db	51	;'3'
   499   00FFF1  64                 	db	100	;'d'
   500   00FFF2  00                 	db	0
   501   00FFF3                     STR_22:
   502                           
   503                           ; BSR set to: 3
   504   00FFF3  69                 	db	105	;'i'
   505   00FFF4  6E                 	db	110	;'n'
   506   00FFF5  66                 	db	102	;'f'
   507   00FFF6  00                 	db	0
   508   00FFF7                     STR_25:
   509                           
   510                           ; BSR set to: 3
   511   00FFF7  6E                 	db	110	;'n'
   512   00FFF8  61                 	db	97	;'a'
   513   00FFF9  6E                 	db	110	;'n'
   514   00FFFA  00                 	db	0
   515   00FFFB                     STR_16:
   516                           
   517                           ; BSR set to: 3
   518   00FFFB  63                 	db	99	;'c'
   519   00FFFC  6D                 	db	109	;'m'
   520   00FFFD  00                 	db	0
   521   00FFFE  00                 	db	0	; dummy byte at the end
   522   000000                     
   523                           ; #config settings
   524                           
   525                           	psect	cinit
   526   0148F2                     __pcinit:
   527                           	callstack 0
   528   0148F2                     start_initialization:
   529                           	callstack 0
   530   0148F2                     __initialization:
   531                           	callstack 0
   532                           
   533                           ; Initialize objects allocated to BANK5 (38 bytes)
   534                           ; load TBLPTR registers with __pidataBANK5
   535   0148F2  0E06               	movlw	low __pidataBANK5
   536   0148F4  6EF6               	movwf	tblptrl,c
   537   0148F6  0E4A               	movlw	high __pidataBANK5
   538   0148F8  6EF7               	movwf	tblptrh,c
   539   0148FA  0E01               	movlw	low (__pidataBANK5 shr (0+16))
   540   0148FC  6EF8               	movwf	tblptru,c
   541   0148FE  EE01  F1A7         	lfsr	0,__pdataBANK5
   542   014902  EE10 F026          	lfsr	1,38
   543   014906                     copy_data0:
   544   014906  0009               	tblrd		*+
   545   014908  C4F5 F4EE          	movff	tablat,postinc0
   546   01490C  50E5               	movf	postdec1,w,c
   547   01490E  50E1               	movf	fsr1l,w,c
   548   014910  E1FA               	bnz	copy_data0
   549                           
   550                           ; Clear objects allocated to BANK6 (80 bytes)
   551   014912  EE01  F200         	lfsr	0,__pbssBANK6
   552   014916  0E50               	movlw	80
   553   014918                     clear_0:
   554   014918  6AEE               	clrf	postinc0,c
   555   01491A  06E8               	decf	wreg,f,c
   556   01491C  E1FD               	bnz	clear_0
   557                           
   558                           ; Clear objects allocated to BANK5 (25 bytes)
   559   01491E  EE01  F1CD         	lfsr	0,__pbssBANK5
   560   014922  0E19               	movlw	25
   561   014924                     clear_1:
   562   014924  6AEE               	clrf	postinc0,c
   563   014926  06E8               	decf	wreg,f,c
   564   014928  E1FD               	bnz	clear_1
   565                           
   566                           ; Clear objects allocated to COMRAM (1 bytes)
   567   01492A  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   568   01492C                     end_of_initialization:
   569                           	callstack 0
   570   01492C                     __end_of__initialization:
   571                           	callstack 0
   572   01492C  0100               	movlb	0
   573   01492E  EF7D  F098         	goto	_main	;jump to C main() function
   574                           
   575                           	psect	bssCOMRAM
   576   00055F                     __pbssCOMRAM:
   577                           	callstack 0
   578   00055F                     __lcd_params:
   579                           	callstack 0
   580   00055F                     	ds	1
   581                           
   582                           	psect	bssBANK5
   583   0005CD                     __pbssBANK5:
   584                           	callstack 0
   585   0005CD                     floorf@F526:
   586                           	callstack 0
   587   0005CD                     	ds	4
   588   0005D1                     ___fpclassifyf@F465:
   589                           	callstack 0
   590   0005D1                     	ds	4
   591   0005D5                     _temp:
   592                           	callstack 0
   593   0005D5                     	ds	4
   594   0005D9                     _width:
   595                           	callstack 0
   596   0005D9                     	ds	2
   597   0005DB                     _prec:
   598                           	callstack 0
   599   0005DB                     	ds	2
   600   0005DD                     _distancia:
   601                           	callstack 0
   602   0005DD                     	ds	2
   603   0005DF                     _menuOp:
   604                           	callstack 0
   605   0005DF                     	ds	2
   606   0005E1                     _ultrasonido:
   607                           	callstack 0
   608   0005E1                     	ds	2
   609   0005E3                     _flags:
   610                           	callstack 0
   611   0005E3                     	ds	1
   612   0005E4                     _estado:
   613                           	callstack 0
   614   0005E4                     	ds	1
   615   0005E5                     _state:
   616                           	callstack 0
   617   0005E5                     	ds	1
   618                           
   619                           	psect	dataBANK5
   620   0005A7                     __pdataBANK5:
   621                           	callstack 0
   622   0005A7                     _opSel:
   623                           	callstack 0
   624   0005A7                     	ds	2
   625   0005A9                     _auxStr:
   626                           	callstack 0
   627   0005A9                     	ds	20
   628   0005BD                     _fig2:
   629                           	callstack 0
   630   0005BD                     	ds	8
   631   0005C5                     _fig1:
   632                           	callstack 0
   633   0005C5                     	ds	8
   634                           
   635                           	psect	bssBANK6
   636   000600                     __pbssBANK6:
   637                           	callstack 0
   638   000600                     _dbuf:
   639                           	callstack 0
   640   000600                     	ds	80
   641                           
   642                           	psect	cstackBANK5
   643   000560                     __pcstackBANK5:
   644                           	callstack 0
   645   000560                     efgtoa@ne:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x0
   649   000560                     	ds	2
   650   000562                     efgtoa@p:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x2
   654   000562                     	ds	2
   655   000564                     efgtoa@t:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x4
   659   000564                     	ds	2
   660   000566                     _efgtoa$1510:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x6
   664   000566                     	ds	2
   665   000568                     efgtoa@pp:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0x8
   669   000568                     	ds	1
   670   000569                     efgtoa@mode:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x9
   674   000569                     	ds	1
   675   00056A                     efgtoa@nmode:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0xA
   679   00056A                     	ds	1
   680   00056B                     efgtoa@d:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0xB
   684   00056B                     	ds	2
   685   00056D                     efgtoa@m:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0xD
   689   00056D                     	ds	2
   690   00056F                     efgtoa@e:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0xF
   694   00056F                     	ds	2
   695   000571                     efgtoa@w:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x11
   699   000571                     	ds	2
   700   000573                     efgtoa@ou:
   701                           	callstack 0
   702                           
   703                           ; 4 bytes @ 0x13
   704   000573                     	ds	4
   705   000577                     efgtoa@h:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x17
   709   000577                     	ds	4
   710   00057B                     efgtoa@l:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x1B
   714   00057B                     	ds	4
   715   00057F                     efgtoa@i:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x1F
   719   00057F                     	ds	2
   720   000581                     efgtoa@sign:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x21
   724   000581                     	ds	1
   725   000582                     efgtoa@g:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x22
   729   000582                     	ds	4
   730   000586                     efgtoa@n:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x26
   734   000586                     	ds	2
   735   000588                     efgtoa@u:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x28
   739   000588                     	ds	4
   740   00058C                     ?_vfprintf:
   741                           	callstack 0
   742   00058C                     vfprintf@fp:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x2C
   746   00058C                     	ds	2
   747   00058E                     vfprintf@fmt:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x2E
   751   00058E                     	ds	2
   752   000590                     vfprintf@ap:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x30
   756   000590                     	ds	2
   757   000592                     ?_sprintf:
   758                           	callstack 0
   759   000592                     sprintf@s:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x32
   763   000592                     	ds	2
   764   000594                     sprintf@fmt:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x34
   768   000594                     	ds	6
   769   00059A                     sprintf@ap:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x3A
   773   00059A                     	ds	2
   774   00059C                     sprintf@f:
   775                           	callstack 0
   776                           
   777                           ; 11 bytes @ 0x3C
   778   00059C                     	ds	11
   779                           
   780                           	psect	cstackCOMRAM
   781   000501                     __pcstackCOMRAM:
   782                           	callstack 0
   783   000501                     ??__write_nibble:
   784   000501                     ?_ADC_Read:
   785                           	callstack 0
   786   000501                     ?___fpclassifyf:
   787                           	callstack 0
   788   000501                     ?_isdigit:
   789                           	callstack 0
   790   000501                     ?_isspace:
   791                           	callstack 0
   792   000501                     ?_getdistancia:
   793                           	callstack 0
   794   000501                     ?___wmul:
   795                           	callstack 0
   796   000501                     ?___fladd:
   797                           	callstack 0
   798   000501                     ?___fldiv:
   799                           	callstack 0
   800   000501                     ?___flmul:
   801                           	callstack 0
   802   000501                     ?_labs:
   803                           	callstack 0
   804   000501                     ?___flneg:
   805                           	callstack 0
   806   000501                     ?___fltol:
   807                           	callstack 0
   808   000501                     ?___aodiv:
   809                           	callstack 0
   810   000501                     ?___aomod:
   811                           	callstack 0
   812   000501                     ___wmul@multiplier:
   813                           	callstack 0
   814   000501                     isdigit@c:
   815                           	callstack 0
   816   000501                     isspace@c:
   817                           	callstack 0
   818   000501                     memcpy@d1:
   819                           	callstack 0
   820   000501                     fputc@c:
   821                           	callstack 0
   822   000501                     strcpy@dest:
   823                           	callstack 0
   824   000501                     ___fleq@ff1:
   825                           	callstack 0
   826   000501                     ___flneg@f1:
   827                           	callstack 0
   828   000501                     ___fltol@f1:
   829                           	callstack 0
   830   000501                     ___fladd@b:
   831                           	callstack 0
   832   000501                     ___fldiv@b:
   833                           	callstack 0
   834   000501                     ___flmul@b:
   835                           	callstack 0
   836   000501                     ___fpclassifyf@x:
   837                           	callstack 0
   838   000501                     labs@a:
   839                           	callstack 0
   840   000501                     ___aodiv@dividend:
   841                           	callstack 0
   842   000501                     ___aomod@dividend:
   843                           	callstack 0
   844                           
   845                           ; 8 bytes @ 0x0
   846   000501                     	ds	1
   847   000502                     __write_nibble@nibble:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x1
   851   000502                     	ds	1
   852   000503                     ??_ADC_Read:
   853   000503                     ??_isdigit:
   854   000503                     ??_isspace:
   855   000503                     __send_byte@mode:
   856                           	callstack 0
   857   000503                     getdistancia@cont:
   858                           	callstack 0
   859   000503                     ___wmul@multiplicand:
   860                           	callstack 0
   861   000503                     memcpy@s1:
   862                           	callstack 0
   863   000503                     fputc@fp:
   864                           	callstack 0
   865   000503                     strcpy@src:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x2
   869   000503                     	ds	1
   870   000504                     ??__send_byte:
   871                           
   872                           ; 1 bytes @ 0x3
   873   000504                     	ds	1
   874   000505                     ??_fputc:
   875   000505                     ??___fpclassifyf:
   876   000505                     ??_labs:
   877   000505                     ??___fltol:
   878   000505                     ADC_Read@ch:
   879                           	callstack 0
   880   000505                     _isspace$1590:
   881                           	callstack 0
   882   000505                     ___wmul@product:
   883                           	callstack 0
   884   000505                     memcpy@n:
   885                           	callstack 0
   886   000505                     strcpy@s:
   887                           	callstack 0
   888   000505                     ___fleq@ff2:
   889                           	callstack 0
   890   000505                     ___fladd@a:
   891                           	callstack 0
   892   000505                     ___fldiv@a:
   893                           	callstack 0
   894   000505                     ___flmul@a:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x4
   898   000505                     	ds	1
   899   000506                     ?___xxtofl:
   900                           	callstack 0
   901   000506                     __send_byte@value:
   902                           	callstack 0
   903   000506                     ___xxtofl@val:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x5
   907   000506                     	ds	1
   908   000507                     ?_atoi:
   909                           	callstack 0
   910   000507                     lcd_write@letra:
   911                           	callstack 0
   912   000507                     lcd_command@cmd:
   913                           	callstack 0
   914   000507                     atoi@s:
   915                           	callstack 0
   916   000507                     memcpy@d:
   917                           	callstack 0
   918   000507                     strcpy@d:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x6
   922   000507                     	ds	1
   923   000508                     ??_lcd_init:
   924   000508                     ??_lcd_clear:
   925   000508                     lcd_set_cursor@col:
   926                           	callstack 0
   927   000508                     lcd_custom_char@charmap:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x7
   931   000508                     	ds	1
   932   000509                     ??___fladd:
   933   000509                     ??___fldiv:
   934   000509                     ??___flmul:
   935   000509                     ??_atoi:
   936   000509                     ??_lcd_set_cursor:
   937   000509                     ??___fleq:
   938   000509                     ___fltol@sign1:
   939                           	callstack 0
   940   000509                     ___fpclassifyf@e:
   941                           	callstack 0
   942   000509                     memcpy@s:
   943                           	callstack 0
   944   000509                     ___aodiv@divisor:
   945                           	callstack 0
   946   000509                     ___aomod@divisor:
   947                           	callstack 0
   948                           
   949                           ; 8 bytes @ 0x8
   950   000509                     	ds	1
   951   00050A                     ??_lcd_custom_char:
   952   00050A                     ??___xxtofl:
   953   00050A                     ___fltol@exp1:
   954                           	callstack 0
   955   00050A                     fputs@s:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x9
   959   00050A                     	ds	1
   960   00050B                     lcd_set_cursor@row:
   961                           	callstack 0
   962   00050B                     lcd_custom_char@mem:
   963                           	callstack 0
   964   00050B                     memcpy@tmp:
   965                           	callstack 0
   966   00050B                     ___fpclassifyf@u:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0xA
   970   00050B                     	ds	1
   971   00050C                     lcd_custom_char@i:
   972                           	callstack 0
   973   00050C                     lcd_out@col:
   974                           	callstack 0
   975   00050C                     lcd_char@col:
   976                           	callstack 0
   977   00050C                     atoi@neg:
   978                           	callstack 0
   979   00050C                     fputs@fp:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0xB
   983   00050C                     	ds	1
   984   00050D                     lcd_char@letra:
   985                           	callstack 0
   986   00050D                     ___fladd@signs:
   987                           	callstack 0
   988   00050D                     ___flmul@sign:
   989                           	callstack 0
   990   00050D                     lcd_out@str:
   991                           	callstack 0
   992   00050D                     ___fldiv@rem:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0xC
   996   00050D                     	ds	1
   997   00050E                     lcd_char@row:
   998                           	callstack 0
   999   00050E                     ___fladd@aexp:
  1000                           	callstack 0
  1001   00050E                     ___xxtofl@sign:
  1002                           	callstack 0
  1003   00050E                     fputs@c:
  1004                           	callstack 0
  1005   00050E                     atoi@n:
  1006                           	callstack 0
  1007   00050E                     ___flmul@grs:
  1008                           	callstack 0
  1009                           
  1010                           ; 4 bytes @ 0xD
  1011   00050E                     	ds	1
  1012   00050F                     ??_Sec1Est:
  1013   00050F                     ??_Sec2Est:
  1014   00050F                     ??_Sec3Est:
  1015   00050F                     lcd_out@row:
  1016                           	callstack 0
  1017   00050F                     ___fladd@bexp:
  1018                           	callstack 0
  1019   00050F                     ___xxtofl@exp:
  1020                           	callstack 0
  1021   00050F                     fputs@i:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0xE
  1025   00050F                     	ds	1
  1026   000510                     ??_MenuPrincipal:
  1027   000510                     ??_MenuPrincipalCon:
  1028   000510                     ??_MenuCalentador:
  1029   000510                     ??_MenuMotor:
  1030   000510                     ___fladd@grs:
  1031                           	callstack 0
  1032   000510                     ___xxtofl@arg:
  1033                           	callstack 0
  1034                           
  1035                           ; 4 bytes @ 0xF
  1036   000510                     	ds	1
  1037   000511                     ??_MenuLed:
  1038   000511                     ??_MenuLedCon:
  1039   000511                     ___aodiv@counter:
  1040                           	callstack 0
  1041   000511                     ___aomod@counter:
  1042                           	callstack 0
  1043   000511                     ___fldiv@sign:
  1044                           	callstack 0
  1045   000511                     pad@fp:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x10
  1049   000511                     	ds	1
  1050   000512                     ___aodiv@sign:
  1051                           	callstack 0
  1052   000512                     ___aomod@sign:
  1053                           	callstack 0
  1054   000512                     ___flmul@aexp:
  1055                           	callstack 0
  1056   000512                     ___fldiv@new_exp:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x11
  1060   000512                     	ds	1
  1061   000513                     ?_abs:
  1062                           	callstack 0
  1063   000513                     ___flmul@bexp:
  1064                           	callstack 0
  1065   000513                     pad@buf:
  1066                           	callstack 0
  1067   000513                     abs@a:
  1068                           	callstack 0
  1069   000513                     ___aodiv@quotient:
  1070                           	callstack 0
  1071                           
  1072                           ; 8 bytes @ 0x12
  1073   000513                     	ds	1
  1074   000514                     ___fldiv@grs:
  1075                           	callstack 0
  1076   000514                     ___flmul@prod:
  1077                           	callstack 0
  1078                           
  1079                           ; 4 bytes @ 0x13
  1080   000514                     	ds	1
  1081   000515                     ??_abs:
  1082   000515                     pad@p:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x14
  1086   000515                     	ds	2
  1087   000517                     ??_pad:
  1088                           
  1089                           ; 1 bytes @ 0x16
  1090   000517                     	ds	1
  1091   000518                     ___fldiv@bexp:
  1092                           	callstack 0
  1093   000518                     ___flmul@temp:
  1094                           	callstack 0
  1095   000518                     pad@i:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x17
  1099   000518                     	ds	1
  1100   000519                     ___fldiv@aexp:
  1101                           	callstack 0
  1102                           
  1103                           ; 1 bytes @ 0x18
  1104   000519                     	ds	1
  1105   00051A                     ?___flsub:
  1106                           	callstack 0
  1107   00051A                     ?_floorf:
  1108                           	callstack 0
  1109   00051A                     pad@w:
  1110                           	callstack 0
  1111   00051A                     ___flge@ff1:
  1112                           	callstack 0
  1113   00051A                     ___flsub@b:
  1114                           	callstack 0
  1115   00051A                     floorf@x:
  1116                           	callstack 0
  1117                           
  1118                           ; 4 bytes @ 0x19
  1119   00051A                     	ds	2
  1120   00051C                     dtoa@fp:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x1B
  1124   00051C                     	ds	2
  1125   00051E                     ??_floorf:
  1126   00051E                     ___flge@ff2:
  1127                           	callstack 0
  1128   00051E                     ___flsub@a:
  1129                           	callstack 0
  1130   00051E                     dtoa@d:
  1131                           	callstack 0
  1132                           
  1133                           ; 8 bytes @ 0x1D
  1134   00051E                     	ds	4
  1135   000522                     ??___flge:
  1136                           
  1137                           ; 1 bytes @ 0x21
  1138   000522                     	ds	2
  1139   000524                     floorf@m:
  1140                           	callstack 0
  1141                           
  1142                           ; 4 bytes @ 0x23
  1143   000524                     	ds	2
  1144   000526                     ??_dtoa:
  1145                           
  1146                           ; 1 bytes @ 0x25
  1147   000526                     	ds	2
  1148   000528                     floorf@e:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x27
  1152   000528                     	ds	2
  1153   00052A                     floorf@u:
  1154                           	callstack 0
  1155                           
  1156                           ; 4 bytes @ 0x29
  1157   00052A                     	ds	4
  1158   00052E                     _dtoa$1479:
  1159                           	callstack 0
  1160   00052E                     efgtoa@fp:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x2D
  1164   00052E                     	ds	2
  1165   000530                     dtoa@p:
  1166                           	callstack 0
  1167   000530                     efgtoa@f:
  1168                           	callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x2F
  1171   000530                     	ds	2
  1172   000532                     dtoa@w:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x31
  1176   000532                     	ds	2
  1177   000534                     efgtoa@c:
  1178                           	callstack 0
  1179   000534                     dtoa@n:
  1180                           	callstack 0
  1181                           
  1182                           ; 8 bytes @ 0x33
  1183   000534                     	ds	1
  1184   000535                     ??_efgtoa:
  1185                           
  1186                           ; 1 bytes @ 0x34
  1187   000535                     	ds	7
  1188   00053C                     dtoa@i:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x3B
  1192   00053C                     	ds	2
  1193   00053E                     dtoa@s:
  1194                           	callstack 0
  1195                           
  1196                           ; 1 bytes @ 0x3D
  1197   00053E                     	ds	1
  1198   00053F                     vfpfcnvrt@fp:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x3E
  1202   00053F                     	ds	2
  1203   000541                     vfpfcnvrt@fmt:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x40
  1207   000541                     	ds	2
  1208   000543                     vfpfcnvrt@ap:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x42
  1212   000543                     	ds	2
  1213   000545                     ??_vfpfcnvrt:
  1214                           
  1215                           ; 1 bytes @ 0x44
  1216   000545                     	ds	3
  1217   000548                     vfpfcnvrt@done:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x47
  1221   000548                     	ds	2
  1222   00054A                     vfpfcnvrt@convarg:
  1223                           	callstack 0
  1224                           
  1225                           ; 8 bytes @ 0x49
  1226   00054A                     	ds	8
  1227   000552                     vfpfcnvrt@c:
  1228                           	callstack 0
  1229                           
  1230                           ; 1 bytes @ 0x51
  1231   000552                     	ds	1
  1232   000553                     vfpfcnvrt@cp:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x52
  1236   000553                     	ds	2
  1237   000555                     vfprintf@cfmt:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x54
  1241   000555                     	ds	2
  1242   000557                     ??_MenuS:
  1243   000557                     
  1244                           ; 1 bytes @ 0x56
  1245   000557                     	ds	2
  1246   000559                     ??_main:
  1247                           
  1248                           ; 1 bytes @ 0x58
  1249   000559                     	ds	2
  1250   00055B                     main@valoradc:
  1251                           	callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x5A
  1254   00055B                     	ds	4
  1255                           
  1256 ;;
  1257 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1258 ;;
  1259 ;; *************** function _main *****************
  1260 ;; Defined at:
  1261 ;;		line 121 in file "main.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  valoradc        4   90[COMRAM] float 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1276 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1278 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1279 ;;Total ram usage:        6 bytes
  1280 ;; Hardware stack levels required when called: 9
  1281 ;; This function calls:
  1282 ;;		_ADC_Init
  1283 ;;		_ADC_Read
  1284 ;;		_Advertencia
  1285 ;;		_Advertencia2
  1286 ;;		_Clock_Init
  1287 ;;		_MenuCalentador
  1288 ;;		_MenuLed
  1289 ;;		_MenuLedCon
  1290 ;;		_MenuMotor
  1291 ;;		_MenuPrincipal
  1292 ;;		_MenuPrincipalCon
  1293 ;;		_MenuS
  1294 ;;		___flge
  1295 ;;		___flmul
  1296 ;;		___xxtofl
  1297 ;;		_getdistancia
  1298 ;;		_lcd_clear
  1299 ;;		_lcd_custom_char
  1300 ;;		_lcd_disable_blink
  1301 ;;		_lcd_disable_cursor
  1302 ;;		_lcd_init
  1303 ;; This function is called by:
  1304 ;;		Startup code after reset
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text0
  1309   0130FA                     __ptext0:
  1310                           	callstack 0
  1311   0130FA                     _main:
  1312                           	callstack 118
  1313   0130FA                     
  1314                           ;main.c: 127:     Clock_Init();
  1315   0130FA  EC38  F0A5         	call	_Clock_Init	;wreg free
  1316   0130FE                     
  1317                           ;main.c: 129:     TRISBbits.TRISB0 = 1;
  1318   0130FE  80C7               	bsf	199,0,c	;volatile
  1319   013100                     
  1320                           ;main.c: 130:     ANSELBbits.ANSELB0 = 1;
  1321   013100  0104               	movlb	4	; () banked
  1322   013102  8108               	bsf	8,0,b	;volatile
  1323   013104                     
  1324                           ; BSR set to: 4
  1325                           ;main.c: 131:     ANSELDbits.ANSELD0 = 0;
  1326   013104  9118               	bcf	24,0,b	;volatile
  1327   013106                     
  1328                           ; BSR set to: 4
  1329                           ;main.c: 132:     ANSELDbits.ANSELD1 = 0;
  1330   013106  9318               	bcf	24,1,b	;volatile
  1331   013108                     
  1332                           ; BSR set to: 4
  1333                           ;main.c: 133:     ANSELBbits.ANSELB4 = 0;
  1334   013108  9908               	bcf	8,4,b	;volatile
  1335   01310A                     
  1336                           ; BSR set to: 4
  1337                           ;main.c: 134:     ANSELA = 0x00;
  1338   01310A  0E00               	movlw	0
  1339   01310C  6F00               	movwf	0,b	;volatile
  1340   01310E                     
  1341                           ; BSR set to: 4
  1342                           ;main.c: 135:     ANSELF = 0x00;
  1343   01310E  0E00               	movlw	0
  1344   013110  6F28               	movwf	40,b	;volatile
  1345   013112                     
  1346                           ; BSR set to: 4
  1347                           ;main.c: 136:     ANSELFbits.ANSELF3 = 0;
  1348   013112  9728               	bcf	40,3,b	;volatile
  1349   013114                     
  1350                           ; BSR set to: 4
  1351                           ;main.c: 137:     ANSELEbits.ANSELE0 = 0;
  1352   013114  9120               	bcf	32,0,b	;volatile
  1353   013116                     
  1354                           ; BSR set to: 4
  1355                           ;main.c: 138:     ANSELCbits.ANSELC1 = 0;
  1356   013116  9310               	bcf	16,1,b	;volatile
  1357   013118                     
  1358                           ; BSR set to: 4
  1359                           ;main.c: 139:     ANSELCbits.ANSELC3 = 0;
  1360   013118  9710               	bcf	16,3,b	;volatile
  1361   01311A                     
  1362                           ; BSR set to: 4
  1363                           ;main.c: 140:     ANSELCbits.ANSELC2 = 0;
  1364   01311A  9510               	bcf	16,2,b	;volatile
  1365   01311C                     
  1366                           ; BSR set to: 4
  1367                           ;main.c: 141:     TRISCbits.TRISC4 =0;
  1368   01311C  98C8               	bcf	200,4,c	;volatile
  1369   01311E                     
  1370                           ; BSR set to: 4
  1371                           ;main.c: 142:     TRISCbits.TRISC5 =1;
  1372   01311E  8AC8               	bsf	200,5,c	;volatile
  1373   013120                     
  1374                           ; BSR set to: 4
  1375                           ;main.c: 143:     ANSELCbits.ANSELC4=0;
  1376   013120  9910               	bcf	16,4,b	;volatile
  1377   013122                     
  1378                           ; BSR set to: 4
  1379                           ;main.c: 144:     ANSELCbits.ANSELC5=0;
  1380   013122  9B10               	bcf	16,5,b	;volatile
  1381   013124                     
  1382                           ; BSR set to: 4
  1383                           ;main.c: 147:     TRISCbits.TRISC2 = 0;
  1384   013124  94C8               	bcf	200,2,c	;volatile
  1385   013126                     
  1386                           ; BSR set to: 4
  1387                           ;main.c: 148:     TRISCbits.TRISC3 = 1;
  1388   013126  86C8               	bsf	200,3,c	;volatile
  1389   013128                     
  1390                           ; BSR set to: 4
  1391                           ;main.c: 149:     TRISDbits.TRISD0 = 1;
  1392   013128  80C9               	bsf	201,0,c	;volatile
  1393   01312A                     
  1394                           ; BSR set to: 4
  1395                           ;main.c: 150:     TRISDbits.TRISD1 = 1;
  1396   01312A  82C9               	bsf	201,1,c	;volatile
  1397   01312C                     
  1398                           ; BSR set to: 4
  1399                           ;main.c: 151:     TRISBbits.TRISB4 = 1;
  1400   01312C  88C7               	bsf	199,4,c	;volatile
  1401   01312E                     
  1402                           ; BSR set to: 4
  1403                           ;main.c: 152:     TRISA = 0x00;
  1404   01312E  0E00               	movlw	0
  1405   013130  6EC6               	movwf	198,c	;volatile
  1406   013132                     
  1407                           ; BSR set to: 4
  1408                           ;main.c: 153:     TRISFbits.TRISF3 = 0;
  1409   013132  96CB               	bcf	203,3,c	;volatile
  1410   013134                     
  1411                           ; BSR set to: 4
  1412                           ;main.c: 154:     TRISEbits.TRISE0 = 0;
  1413   013134  90CA               	bcf	202,0,c	;volatile
  1414   013136                     
  1415                           ; BSR set to: 4
  1416                           ;main.c: 155:     TRISCbits.TRISC1 = 0;
  1417   013136  92C8               	bcf	200,1,c	;volatile
  1418   013138                     
  1419                           ; BSR set to: 4
  1420                           ;main.c: 158:     WPUDbits.WPUD0 = 1;
  1421   013138  8119               	bsf	25,0,b	;volatile
  1422   01313A                     
  1423                           ; BSR set to: 4
  1424                           ;main.c: 159:     WPUDbits.WPUD1 = 1;
  1425   01313A  8319               	bsf	25,1,b	;volatile
  1426   01313C                     
  1427                           ; BSR set to: 4
  1428                           ;main.c: 160:     WPUBbits.WPUB4 = 1;
  1429   01313C  8909               	bsf	9,4,b	;volatile
  1430   01313E                     
  1431                           ; BSR set to: 4
  1432                           ;main.c: 162:     lcd_init();
  1433   01313E  EC40  F0A1         	call	_lcd_init	;wreg free
  1434   013142                     
  1435                           ;main.c: 163:     ADC_Init();
  1436   013142  EC29  F0A5         	call	_ADC_Init	;wreg free
  1437   013146                     
  1438                           ;main.c: 165:     lcd_custom_char(0,fig1);
  1439   013146  0EC5               	movlw	low _fig1
  1440   013148  6E08               	movwf	lcd_custom_char@charmap^(0+1280),c
  1441   01314A  0E05               	movlw	high _fig1
  1442   01314C  6E09               	movwf	(lcd_custom_char@charmap+1)^(0+1280),c
  1443   01314E  0E00               	movlw	0
  1444   013150  ECD9  F0A2         	call	_lcd_custom_char
  1445   013154                     
  1446                           ;main.c: 166:     lcd_custom_char(1,fig2);
  1447   013154  0EBD               	movlw	low _fig2
  1448   013156  6E08               	movwf	lcd_custom_char@charmap^(0+1280),c
  1449   013158  0E05               	movlw	high _fig2
  1450   01315A  6E09               	movwf	(lcd_custom_char@charmap+1)^(0+1280),c
  1451   01315C  0E01               	movlw	1
  1452   01315E  ECD9  F0A2         	call	_lcd_custom_char
  1453   013162                     
  1454                           ;main.c: 167:     lcd_disable_blink();
  1455   013162  EC59  F0A5         	call	_lcd_disable_blink	;wreg free
  1456   013166                     
  1457                           ;main.c: 168:     lcd_disable_cursor();
  1458   013166  EC4F  F0A5         	call	_lcd_disable_cursor	;wreg free
  1459   01316A                     l6741:
  1460                           
  1461                           ;main.c: 173:             float valoradc = ADC_Read(8);
  1462   01316A  0E08               	movlw	8
  1463   01316C  ECD5  F0A4         	call	_ADC_Read
  1464   013170  C501  F506         	movff	?_ADC_Read,___xxtofl@val
  1465   013174  C502  F507         	movff	?_ADC_Read+1,___xxtofl@val+1
  1466   013178  6A08               	clrf	(___xxtofl@val+2)^(0+1280),c
  1467   01317A  6A09               	clrf	(___xxtofl@val+3)^(0+1280),c
  1468   01317C  0E00               	movlw	0
  1469   01317E  EC9A  F09A         	call	___xxtofl
  1470   013182  C506  F55B         	movff	?___xxtofl,main@valoradc
  1471   013186  C507  F55C         	movff	?___xxtofl+1,main@valoradc+1
  1472   01318A  C508  F55D         	movff	?___xxtofl+2,main@valoradc+2
  1473   01318E  C509  F55E         	movff	?___xxtofl+3,main@valoradc+3
  1474   013192                     
  1475                           ;main.c: 174:             temp = valoradc*0.09935;
  1476   013192  C55B  F501         	movff	main@valoradc,___flmul@b
  1477   013196  C55C  F502         	movff	main@valoradc+1,___flmul@b+1
  1478   01319A  C55D  F503         	movff	main@valoradc+2,___flmul@b+2
  1479   01319E  C55E  F504         	movff	main@valoradc+3,___flmul@b+3
  1480   0131A2  0E03               	movlw	3
  1481   0131A4  6E05               	movwf	___flmul@a^(0+1280),c
  1482   0131A6  0E78               	movlw	120
  1483   0131A8  6E06               	movwf	(___flmul@a+1)^(0+1280),c
  1484   0131AA  0ECB               	movlw	203
  1485   0131AC  6E07               	movwf	(___flmul@a+2)^(0+1280),c
  1486   0131AE  0E3D               	movlw	61
  1487   0131B0  6E08               	movwf	(___flmul@a+3)^(0+1280),c
  1488   0131B2  EC4A  F08A         	call	___flmul	;wreg free
  1489   0131B6  C501  F5D5         	movff	?___flmul,_temp
  1490   0131BA  C502  F5D6         	movff	?___flmul+1,_temp+1
  1491   0131BE  C503  F5D7         	movff	?___flmul+2,_temp+2
  1492   0131C2  C504  F5D8         	movff	?___flmul+3,_temp+3
  1493   0131C6                     
  1494                           ;main.c: 175:             ultrasonido = getdistancia();
  1495   0131C6  EC7E  F0A3         	call	_getdistancia	;wreg free
  1496   0131CA  C501  F5E1         	movff	?_getdistancia,_ultrasonido
  1497   0131CE  C502  F5E2         	movff	?_getdistancia+1,_ultrasonido+1
  1498   0131D2                     
  1499                           ;main.c: 176:             if(ultrasonido<5){
  1500   0131D2  0105               	movlb	5	; () banked
  1501   0131D4  51E2               	movf	(_ultrasonido+1)& (0+255),w,b
  1502   0131D6  E107               	bnz	u6941
  1503   0131D8  0E05               	movlw	5
  1504   0131DA  5DE1               	subwf	_ultrasonido& (0+255),w,b
  1505   0131DC  B0D8               	btfsc	status,0,c
  1506   0131DE  EFF3  F098         	goto	u6941
  1507   0131E2  EFF5  F098         	goto	u6940
  1508   0131E6                     u6941:
  1509   0131E6  EFFF  F098         	goto	l6759
  1510   0131EA                     u6940:
  1511   0131EA                     
  1512                           ; BSR set to: 5
  1513                           ;main.c: 177:                 lcd_clear();
  1514   0131EA  EC44  F0A5         	call	_lcd_clear	;wreg free
  1515   0131EE                     
  1516                           ;main.c: 178:                 PORTFbits.RF3 = 0;
  1517   0131EE  96D3               	bcf	211,3,c	;volatile
  1518   0131F0                     
  1519                           ;main.c: 179:                 PORTEbits.RE0=0;
  1520   0131F0  90D2               	bcf	210,0,c	;volatile
  1521   0131F2                     
  1522                           ;main.c: 180:                 PORTCbits.RC1=0;
  1523   0131F2  92D0               	bcf	208,1,c	;volatile
  1524   0131F4                     
  1525                           ;main.c: 182:                 menuOp = advertencia2;
  1526   0131F4  0E00               	movlw	0
  1527   0131F6  0105               	movlb	5	; () banked
  1528   0131F8  6FE0               	movwf	(_menuOp+1)& (0+255),b
  1529   0131FA  0E09               	movlw	9
  1530   0131FC  6FDF               	movwf	_menuOp& (0+255),b
  1531   0131FE                     l6759:
  1532                           
  1533                           ; BSR set to: 5
  1534                           ;main.c: 185:             if(temp>70){
  1535   0131FE  0E00               	movlw	0
  1536   013200  6E1A               	movwf	___flge@ff1^(0+1280),c
  1537   013202  0E00               	movlw	0
  1538   013204  6E1B               	movwf	(___flge@ff1+1)^(0+1280),c
  1539   013206  0E8C               	movlw	140
  1540   013208  6E1C               	movwf	(___flge@ff1+2)^(0+1280),c
  1541   01320A  0E42               	movlw	66
  1542   01320C  6E1D               	movwf	(___flge@ff1+3)^(0+1280),c
  1543   01320E  C5D5  F51E         	movff	_temp,___flge@ff2
  1544   013212  C5D6  F51F         	movff	_temp+1,___flge@ff2+1
  1545   013216  C5D7  F520         	movff	_temp+2,___flge@ff2+2
  1546   01321A  C5D8  F521         	movff	_temp+3,___flge@ff2+3
  1547   01321E  EC1C  F09E         	call	___flge	;wreg free
  1548   013222  B0D8               	btfsc	status,0,c
  1549   013224  EF16  F099         	goto	u6951
  1550   013228  EF18  F099         	goto	u6950
  1551   01322C                     u6951:
  1552   01322C  EF4C  F099         	goto	l6793
  1553   013230                     u6950:
  1554   013230                     
  1555                           ;main.c: 186:                 lcd_clear();
  1556   013230  EC44  F0A5         	call	_lcd_clear	;wreg free
  1557   013234                     
  1558                           ;main.c: 187:                 PORTFbits.RF3 = 0;
  1559   013234  96D3               	bcf	211,3,c	;volatile
  1560   013236                     
  1561                           ;main.c: 188:                 PORTEbits.RE0=0;
  1562   013236  90D2               	bcf	210,0,c	;volatile
  1563   013238                     
  1564                           ;main.c: 189:                 PORTCbits.RC1=0;
  1565   013238  92D0               	bcf	208,1,c	;volatile
  1566   01323A                     
  1567                           ;main.c: 191:                 menuOp = advertencia;
  1568   01323A  0E00               	movlw	0
  1569   01323C  0105               	movlb	5	; () banked
  1570   01323E  6FE0               	movwf	(_menuOp+1)& (0+255),b
  1571   013240  0E08               	movlw	8
  1572   013242  6FDF               	movwf	_menuOp& (0+255),b
  1573   013244  EF4C  F099         	goto	l6793
  1574   013248                     l6771:
  1575   013248  EC3F  F093         	call	_MenuPrincipal	;wreg free
  1576   01324C  EF82  F099         	goto	l6795
  1577   013250                     l6773:
  1578   013250  ECE6  F095         	call	_MenuPrincipalCon	;wreg free
  1579   013254  EF82  F099         	goto	l6795
  1580   013258                     l6775:
  1581   013258  EC20  F090         	call	_MenuLed	;wreg free
  1582   01325C  EF82  F099         	goto	l6795
  1583   013260                     l6777:
  1584   013260  EC5F  F08C         	call	_MenuLedCon	;wreg free
  1585   013264  EF82  F099         	goto	l6795
  1586   013268                     l6779:
  1587   013268  EC93  F094         	call	_MenuCalentador	;wreg free
  1588   01326C  EF82  F099         	goto	l6795
  1589   013270                     l6781:
  1590   013270  EC38  F097         	call	_MenuMotor	;wreg free
  1591   013274  EF82  F099         	goto	l6795
  1592   013278                     l6783:
  1593   013278  EC1D  F09F         	call	_MenuS	;wreg free
  1594   01327C  EF82  F099         	goto	l6795
  1595   013280                     l6785:
  1596   013280  EC7E  F0A3         	call	_getdistancia	;wreg free
  1597   013284  EF82  F099         	goto	l6795
  1598   013288                     l6787:
  1599   013288  ECA8  F0A2         	call	_Advertencia	;wreg free
  1600   01328C  EF82  F099         	goto	l6795
  1601   013290                     l6789:
  1602   013290  EC12  F0A4         	call	_Advertencia2	;wreg free
  1603   013294  EF82  F099         	goto	l6795
  1604   013298                     l6793:
  1605   013298  C5DF  F559         	movff	_menuOp,??_main
  1606   01329C  C5E0  F55A         	movff	_menuOp+1,??_main+1
  1607                           
  1608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1609                           ; Switch size 1, requested type "simple"
  1610                           ; Number of cases is 1, Range of values is 0 to 0
  1611                           ; switch strategies available:
  1612                           ; Name         Instructions Cycles
  1613                           ; simple_byte            4     3 (average)
  1614                           ;	Chosen strategy is simple_byte
  1615   0132A0  505A               	movf	(??_main+1)^(0+1280),w,c
  1616   0132A2  0A00               	xorlw	0	; case 0
  1617   0132A4  B4D8               	btfsc	status,2,c
  1618   0132A6  EF57  F099         	goto	l7497
  1619   0132AA  EF82  F099         	goto	l6795
  1620   0132AE                     l7497:
  1621                           
  1622                           ; Switch size 1, requested type "simple"
  1623                           ; Number of cases is 10, Range of values is 0 to 9
  1624                           ; switch strategies available:
  1625                           ; Name         Instructions Cycles
  1626                           ; simple_byte           31    16 (average)
  1627                           ;	Chosen strategy is simple_byte
  1628   0132AE  5059               	movf	??_main^(0+1280),w,c
  1629   0132B0  0A00               	xorlw	0	; case 0
  1630   0132B2  B4D8               	btfsc	status,2,c
  1631   0132B4  EF24  F099         	goto	l6771
  1632   0132B8  0A01               	xorlw	1	; case 1
  1633   0132BA  B4D8               	btfsc	status,2,c
  1634   0132BC  EF28  F099         	goto	l6773
  1635   0132C0  0A03               	xorlw	3	; case 2
  1636   0132C2  B4D8               	btfsc	status,2,c
  1637   0132C4  EF2C  F099         	goto	l6775
  1638   0132C8  0A01               	xorlw	1	; case 3
  1639   0132CA  B4D8               	btfsc	status,2,c
  1640   0132CC  EF30  F099         	goto	l6777
  1641   0132D0  0A07               	xorlw	7	; case 4
  1642   0132D2  B4D8               	btfsc	status,2,c
  1643   0132D4  EF34  F099         	goto	l6779
  1644   0132D8  0A01               	xorlw	1	; case 5
  1645   0132DA  B4D8               	btfsc	status,2,c
  1646   0132DC  EF38  F099         	goto	l6781
  1647   0132E0  0A03               	xorlw	3	; case 6
  1648   0132E2  B4D8               	btfsc	status,2,c
  1649   0132E4  EF3C  F099         	goto	l6783
  1650   0132E8  0A01               	xorlw	1	; case 7
  1651   0132EA  B4D8               	btfsc	status,2,c
  1652   0132EC  EF40  F099         	goto	l6785
  1653   0132F0  0A0F               	xorlw	15	; case 8
  1654   0132F2  B4D8               	btfsc	status,2,c
  1655   0132F4  EF44  F099         	goto	l6787
  1656   0132F8  0A01               	xorlw	1	; case 9
  1657   0132FA  B4D8               	btfsc	status,2,c
  1658   0132FC  EF48  F099         	goto	l6789
  1659   013300  EF82  F099         	goto	l6795
  1660   013304                     l6795:
  1661                           
  1662                           ;main.c: 208:         _delay((unsigned long)((150)*(64000000UL/4000.0)));
  1663   013304  0E0D               	movlw	13
  1664   013306  6E5A               	movwf	(??_main+1)^(0+1280),c
  1665   013308  0E2D               	movlw	45
  1666   01330A  6E59               	movwf	??_main^(0+1280),c
  1667   01330C  0ED8               	movlw	216
  1668   01330E                     u6977:
  1669   01330E  2EE8               	decfsz	wreg,f,c
  1670   013310  D7FE               	bra	u6977
  1671   013312  2E59               	decfsz	??_main^(0+1280),f,c
  1672   013314  D7FC               	bra	u6977
  1673   013316  2E5A               	decfsz	(??_main+1)^(0+1280),f,c
  1674   013318  D7FA               	bra	u6977
  1675   01331A  EFB5  F098         	goto	l6741
  1676   01331E  EFFE  F0FF         	goto	start
  1677   013322                     __end_of_main:
  1678                           	callstack 0
  1679                           
  1680 ;; *************** function _lcd_init *****************
  1681 ;; Defined at:
  1682 ;;		line 43 in file "LCD_LIB.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1698 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1699 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1700 ;;Total ram usage:        2 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 3
  1703 ;; This function calls:
  1704 ;;		__write_nibble
  1705 ;;		_lcd_command
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text1
  1712   014280                     __ptext1:
  1713                           	callstack 0
  1714   014280                     _lcd_init:
  1715                           	callstack 123
  1716   014280                     
  1717                           ;LCD_LIB.c: 44:     TRISF &= ~( (1<<0)|
  1718   014280  0E0C               	movlw	12
  1719   014282  16CB               	andwf	203,f,c	;volatile
  1720                           
  1721                           ;LCD_LIB.c: 51:     PORTF &= ~( (1<<0)|
  1722   014284  0E0C               	movlw	12
  1723   014286  16D3               	andwf	211,f,c	;volatile
  1724   014288                     
  1725                           ;LCD_LIB.c: 58:     _delay((unsigned long)((15)*(64000000UL/4000.0)));
  1726   014288  0E02               	movlw	2
  1727   01428A  6E09               	movwf	(??_lcd_init+1)^(0+1280),c
  1728   01428C  0E38               	movlw	56
  1729   01428E  6E08               	movwf	??_lcd_init^(0+1280),c
  1730   014290  0EAD               	movlw	173
  1731   014292                     u6987:
  1732   014292  2EE8               	decfsz	wreg,f,c
  1733   014294  D7FE               	bra	u6987
  1734   014296  2E08               	decfsz	??_lcd_init^(0+1280),f,c
  1735   014298  D7FC               	bra	u6987
  1736   01429A  2E09               	decfsz	(??_lcd_init+1)^(0+1280),f,c
  1737   01429C  D7FA               	bra	u6987
  1738   01429E  F000               	nop	
  1739   0142A0                     
  1740                           ;LCD_LIB.c: 59:     _write_nibble(0x03);
  1741   0142A0  0E03               	movlw	3
  1742   0142A2  EC05  F0A2         	call	__write_nibble
  1743   0142A6                     
  1744                           ;LCD_LIB.c: 60:     _delay((unsigned long)((5)*(64000000UL/4000.0)));
  1745   0142A6  0E68               	movlw	104
  1746   0142A8  6E08               	movwf	??_lcd_init^(0+1280),c
  1747   0142AA  0EE4               	movlw	228
  1748   0142AC                     u6997:
  1749   0142AC  2EE8               	decfsz	wreg,f,c
  1750   0142AE  D7FE               	bra	u6997
  1751   0142B0  2E08               	decfsz	??_lcd_init^(0+1280),f,c
  1752   0142B2  D7FC               	bra	u6997
  1753   0142B4  D000               	nop2	
  1754   0142B6                     
  1755                           ;LCD_LIB.c: 61:     _write_nibble(0x03);
  1756   0142B6  0E03               	movlw	3
  1757   0142B8  EC05  F0A2         	call	__write_nibble
  1758   0142BC                     
  1759                           ;LCD_LIB.c: 62:     _delay((unsigned long)((100)*(64000000UL/4000000.0)));
  1760   0142BC  0EE4               	movlw	228
  1761   0142BE                     u7007:
  1762   0142BE  D000               	nop2	
  1763   0142C0  D000               	nop2	
  1764   0142C2  2EE8               	decfsz	wreg,f,c
  1765   0142C4  D7FC               	bra	u7007
  1766   0142C6  D000               	nop2	
  1767   0142C8  D000               	nop2	
  1768   0142CA                     
  1769                           ;LCD_LIB.c: 63:     _write_nibble(0x03);
  1770   0142CA  0E03               	movlw	3
  1771   0142CC  EC05  F0A2         	call	__write_nibble
  1772   0142D0                     
  1773                           ;LCD_LIB.c: 64:     _write_nibble(0x02);
  1774   0142D0  0E02               	movlw	2
  1775   0142D2  EC05  F0A2         	call	__write_nibble
  1776   0142D6                     
  1777                           ;LCD_LIB.c: 66:     lcd_command( 0x20 | 0x00 | 0x08 | 0x00 );
  1778   0142D6  0E28               	movlw	40
  1779   0142D8  EC74  F0A5         	call	_lcd_command
  1780   0142DC                     
  1781                           ;LCD_LIB.c: 67:     _delay((unsigned long)((37)*(64000000UL/4000000.0)));
  1782   0142DC  0EC5               	movlw	197
  1783   0142DE                     u7017:
  1784   0142DE  2EE8               	decfsz	wreg,f,c
  1785   0142E0  D7FE               	bra	u7017
  1786   0142E2  F000               	nop	
  1787   0142E4                     
  1788                           ;LCD_LIB.c: 69:     _lcd_params = 0x04 | 0x02 | 0x01;
  1789   0142E4  0E07               	movlw	7
  1790   0142E6  6E5F               	movwf	__lcd_params^(0+1280),c
  1791   0142E8                     
  1792                           ;LCD_LIB.c: 70:     lcd_command(0x08 | _lcd_params);
  1793   0142E8  505F               	movf	__lcd_params^(0+1280),w,c
  1794   0142EA  0908               	iorlw	8
  1795   0142EC  EC74  F0A5         	call	_lcd_command
  1796   0142F0                     
  1797                           ;LCD_LIB.c: 71:     _delay((unsigned long)((37)*(64000000UL/4000000.0)));
  1798   0142F0  0EC5               	movlw	197
  1799   0142F2                     u7027:
  1800   0142F2  2EE8               	decfsz	wreg,f,c
  1801   0142F4  D7FE               	bra	u7027
  1802   0142F6  F000               	nop	
  1803   0142F8                     
  1804                           ;LCD_LIB.c: 73:     lcd_command(0x01);
  1805   0142F8  0E01               	movlw	1
  1806   0142FA  EC74  F0A5         	call	_lcd_command
  1807   0142FE                     
  1808                           ;LCD_LIB.c: 74:     _delay((unsigned long)((2)*(64000000UL/4000.0)));
  1809   0142FE  0E2A               	movlw	42
  1810   014300  6E08               	movwf	??_lcd_init^(0+1280),c
  1811   014302  0E8E               	movlw	142
  1812   014304                     u7037:
  1813   014304  2EE8               	decfsz	wreg,f,c
  1814   014306  D7FE               	bra	u7037
  1815   014308  2E08               	decfsz	??_lcd_init^(0+1280),f,c
  1816   01430A  D7FC               	bra	u7037
  1817   01430C  0012               	return		;funcret
  1818   01430E                     __end_of_lcd_init:
  1819                           	callstack 0
  1820                           
  1821 ;; *************** function _lcd_disable_cursor *****************
  1822 ;; Defined at:
  1823 ;;		line 133 in file "LCD_LIB.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1841 ;;Total ram usage:        0 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 3
  1844 ;; This function calls:
  1845 ;;		_lcd_command
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text2
  1852   014A9E                     __ptext2:
  1853                           	callstack 0
  1854   014A9E                     _lcd_disable_cursor:
  1855                           	callstack 123
  1856   014A9E                     
  1857                           ;LCD_LIB.c: 134:  _lcd_params &= ~0x02;
  1858   014A9E  925F               	bcf	__lcd_params^(0+1280),1,c
  1859   014AA0                     
  1860                           ;LCD_LIB.c: 135:  lcd_command(0x08 |_lcd_params);
  1861   014AA0  505F               	movf	__lcd_params^(0+1280),w,c
  1862   014AA2  0908               	iorlw	8
  1863   014AA4  EC74  F0A5         	call	_lcd_command
  1864   014AA8                     
  1865                           ;LCD_LIB.c: 136:  _delay((unsigned long)((37)*(64000000UL/4000000.0)));
  1866   014AA8  0EC5               	movlw	197
  1867   014AAA                     u7047:
  1868   014AAA  2EE8               	decfsz	wreg,f,c
  1869   014AAC  D7FE               	bra	u7047
  1870   014AAE  F000               	nop	
  1871   014AB0  0012               	return		;funcret
  1872   014AB2                     __end_of_lcd_disable_cursor:
  1873                           	callstack 0
  1874                           
  1875 ;; *************** function _lcd_disable_blink *****************
  1876 ;; Defined at:
  1877 ;;		line 122 in file "LCD_LIB.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2, status,0, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1895 ;;Total ram usage:        0 bytes
  1896 ;; Hardware stack levels used: 1
  1897 ;; Hardware stack levels required when called: 3
  1898 ;; This function calls:
  1899 ;;		_lcd_command
  1900 ;; This function is called by:
  1901 ;;		_main
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905                           	psect	text3
  1906   014AB2                     __ptext3:
  1907                           	callstack 0
  1908   014AB2                     _lcd_disable_blink:
  1909                           	callstack 123
  1910   014AB2                     
  1911                           ;LCD_LIB.c: 123:  _lcd_params &= ~0x01;
  1912   014AB2  905F               	bcf	__lcd_params^(0+1280),0,c
  1913   014AB4                     
  1914                           ;LCD_LIB.c: 124:  lcd_command(0x08 |_lcd_params);
  1915   014AB4  505F               	movf	__lcd_params^(0+1280),w,c
  1916   014AB6  0908               	iorlw	8
  1917   014AB8  EC74  F0A5         	call	_lcd_command
  1918   014ABC                     
  1919                           ;LCD_LIB.c: 125:  _delay((unsigned long)((37)*(64000000UL/4000000.0)));
  1920   014ABC  0EC5               	movlw	197
  1921   014ABE                     u7057:
  1922   014ABE  2EE8               	decfsz	wreg,f,c
  1923   014AC0  D7FE               	bra	u7057
  1924   014AC2  F000               	nop	
  1925   014AC4  0012               	return		;funcret
  1926   014AC6                     __end_of_lcd_disable_blink:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _lcd_custom_char *****************
  1930 ;; Defined at:
  1931 ;;		line 148 in file "LCD_LIB.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  mem             1    wreg     unsigned char 
  1934 ;;  charmap         2    7[COMRAM] PTR unsigned char 
  1935 ;;		 -> fig2(8), fig1(8), 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  mem             1   10[COMRAM] unsigned char 
  1938 ;;  i               1   11[COMRAM] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1951 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1952 ;;Total ram usage:        5 bytes
  1953 ;; Hardware stack levels used: 1
  1954 ;; Hardware stack levels required when called: 3
  1955 ;; This function calls:
  1956 ;;		_lcd_command
  1957 ;;		_lcd_write
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text4
  1964   0145B2                     __ptext4:
  1965                           	callstack 0
  1966   0145B2                     _lcd_custom_char:
  1967                           	callstack 123
  1968                           
  1969                           ;incstack = 0
  1970                           ;lcd_custom_char@mem stored from wreg
  1971   0145B2  6E0B               	movwf	lcd_custom_char@mem^(0+1280),c
  1972   0145B4                     
  1973                           ;LCD_LIB.c: 149:  lcd_command(0x40 | ((mem&0x07)<<3) );
  1974   0145B4  C50B  F50A         	movff	lcd_custom_char@mem,??_lcd_custom_char
  1975   0145B8  0E07               	movlw	7
  1976   0145BA  160A               	andwf	??_lcd_custom_char^(0+1280),f,c
  1977   0145BC  90D8               	bcf	status,0,c
  1978   0145BE  360A               	rlcf	??_lcd_custom_char^(0+1280),f,c
  1979   0145C0  90D8               	bcf	status,0,c
  1980   0145C2  360A               	rlcf	??_lcd_custom_char^(0+1280),f,c
  1981   0145C4  90D8               	bcf	status,0,c
  1982   0145C6  340A               	rlcf	??_lcd_custom_char^(0+1280),w,c
  1983   0145C8  0940               	iorlw	64
  1984   0145CA  EC74  F0A5         	call	_lcd_command
  1985   0145CE                     
  1986                           ;LCD_LIB.c: 150:  for(uint8_t i=0; i<=7; i++){
  1987   0145CE  0E00               	movlw	0
  1988   0145D0  6E0C               	movwf	lcd_custom_char@i^(0+1280),c
  1989   0145D2                     l5895:
  1990                           
  1991                           ;LCD_LIB.c: 151:   lcd_write(charmap[i]);
  1992   0145D2  500C               	movf	lcd_custom_char@i^(0+1280),w,c
  1993   0145D4  2408               	addwf	lcd_custom_char@charmap^(0+1280),w,c
  1994   0145D6  6ED9               	movwf	fsr2l,c
  1995   0145D8  0E00               	movlw	0
  1996   0145DA  2009               	addwfc	(lcd_custom_char@charmap+1)^(0+1280),w,c
  1997   0145DC  6EDA               	movwf	fsr2h,c
  1998   0145DE  50DF               	movf	indf2,w,c
  1999   0145E0  EC6D  F0A5         	call	_lcd_write
  2000   0145E4                     
  2001                           ;LCD_LIB.c: 152:  }
  2002   0145E4  2A0C               	incf	lcd_custom_char@i^(0+1280),f,c
  2003   0145E6  0E07               	movlw	7
  2004   0145E8  640C               	cpfsgt	lcd_custom_char@i^(0+1280),c
  2005   0145EA  EFF9  F0A2         	goto	u5751
  2006   0145EE  EFFB  F0A2         	goto	u5750
  2007   0145F2                     u5751:
  2008   0145F2  EFE9  F0A2         	goto	l5895
  2009   0145F6                     u5750:
  2010   0145F6                     
  2011                           ;LCD_LIB.c: 153:  lcd_command(0x80);
  2012   0145F6  0E80               	movlw	128
  2013   0145F8  EC74  F0A5         	call	_lcd_command
  2014   0145FC                     
  2015                           ;LCD_LIB.c: 154:  _delay((unsigned long)((37)*(64000000UL/4000000.0)));
  2016   0145FC  0EC5               	movlw	197
  2017   0145FE                     u7067:
  2018   0145FE  2EE8               	decfsz	wreg,f,c
  2019   014600  D7FE               	bra	u7067
  2020   014602  F000               	nop	
  2021   014604  0012               	return		;funcret
  2022   014606                     __end_of_lcd_custom_char:
  2023                           	callstack 0
  2024                           
  2025 ;; *************** function _getdistancia *****************
  2026 ;; Defined at:
  2027 ;;		line 107 in file "main.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;		None
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  cont            2    2[COMRAM] unsigned int 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  2    0[COMRAM] unsigned int 
  2034 ;; Registers used:
  2035 ;;		wreg, status,2, status,0
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2044 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2045 ;;Total ram usage:        4 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		_main
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text5
  2055   0146FC                     __ptext5:
  2056                           	callstack 0
  2057   0146FC                     _getdistancia:
  2058                           	callstack 126
  2059   0146FC                     
  2060                           ;main.c: 108:     unsigned int cont = 0;
  2061   0146FC  0E00               	movlw	0
  2062   0146FE  6E04               	movwf	(getdistancia@cont+1)^(0+1280),c
  2063   014700  0E00               	movlw	0
  2064   014702  6E03               	movwf	getdistancia@cont^(0+1280),c
  2065   014704                     
  2066                           ;main.c: 109:     PORTCbits.RC4 = 1;
  2067   014704  88D0               	bsf	208,4,c	;volatile
  2068   014706                     
  2069                           ;main.c: 110:     _delay((unsigned long)((10)*(64000000UL/4000000.0)));
  2070   014706  0E35               	movlw	53
  2071   014708                     u7077:
  2072   014708  2EE8               	decfsz	wreg,f,c
  2073   01470A  D7FE               	bra	u7077
  2074   01470C  F000               	nop	
  2075   01470E                     
  2076                           ;main.c: 111:     PORTCbits.RC4 = 0;
  2077   01470E  98D0               	bcf	208,4,c	;volatile
  2078   014710                     l113:
  2079   014710  AAD0               	btfss	208,5,c	;volatile
  2080   014712  EF8D  F0A3         	goto	u5731
  2081   014716  EF8F  F0A3         	goto	u5730
  2082   01471A                     u5731:
  2083   01471A  EF88  F0A3         	goto	l113
  2084   01471E                     u5730:
  2085   01471E  EF99  F0A3         	goto	l5845
  2086   014722                     l5841:
  2087                           
  2088                           ;main.c: 114:         cont++;
  2089   014722  4A03               	infsnz	getdistancia@cont^(0+1280),f,c
  2090   014724  2A04               	incf	(getdistancia@cont+1)^(0+1280),f,c
  2091   014726                     
  2092                           ;main.c: 115:         _delay((unsigned long)((58)*(64000000UL/4000000.0)));
  2093   014726  0EB9               	movlw	185
  2094   014728                     u7087:
  2095   014728  D000               	nop2	
  2096   01472A  2EE8               	decfsz	wreg,f,c
  2097   01472C  D7FD               	bra	u7087
  2098   01472E  D000               	nop2	
  2099   014730  F000               	nop	
  2100   014732                     l5845:
  2101                           
  2102                           ;main.c: 113:     while(PORTCbits.RC5==1){
  2103   014732  BAD0               	btfsc	208,5,c	;volatile
  2104   014734  EF9E  F0A3         	goto	u5741
  2105   014738  EFA0  F0A3         	goto	u5740
  2106   01473C                     u5741:
  2107   01473C  EF91  F0A3         	goto	l5841
  2108   014740                     u5740:
  2109   014740                     
  2110                           ;main.c: 117:     return(cont);
  2111   014740  C503  F501         	movff	getdistancia@cont,?_getdistancia
  2112   014744  C504  F502         	movff	getdistancia@cont+1,?_getdistancia+1
  2113   014748  0012               	return		;funcret
  2114   01474A                     __end_of_getdistancia:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function ___xxtofl *****************
  2118 ;; Defined at:
  2119 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  sign            1    wreg     unsigned char 
  2122 ;;  val             4    5[COMRAM] long 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  sign            1   13[COMRAM] unsigned char 
  2125 ;;  arg             4   15[COMRAM] unsigned long 
  2126 ;;  exp             1   14[COMRAM] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  4    5[COMRAM] unsigned char 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2137 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2138 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2139 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2140 ;;Total ram usage:       14 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text6
  2150   013534                     __ptext6:
  2151                           	callstack 0
  2152   013534                     ___xxtofl:
  2153                           	callstack 126
  2154                           
  2155                           ;incstack = 0
  2156                           ;___xxtofl@sign stored from wreg
  2157   013534  6E0E               	movwf	___xxtofl@sign^(0+1280),c
  2158   013536  500E               	movf	___xxtofl@sign^(0+1280),w,c
  2159   013538  B4D8               	btfsc	status,2,c
  2160   01353A  EFA1  F09A         	goto	u6841
  2161   01353E  EFA3  F09A         	goto	u6840
  2162   013542                     u6841:
  2163   013542  EFC5  F09A         	goto	l1218
  2164   013546                     u6840:
  2165   013546  BE09               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
  2166   013548  EFAA  F09A         	goto	u6850
  2167   01354C  EFA8  F09A         	goto	u6851
  2168   013550                     u6851:
  2169   013550  EFC5  F09A         	goto	l1218
  2170   013554                     u6850:
  2171   013554  C506  F50A         	movff	___xxtofl@val,??___xxtofl
  2172   013558  C507  F50B         	movff	___xxtofl@val+1,??___xxtofl+1
  2173   01355C  C508  F50C         	movff	___xxtofl@val+2,??___xxtofl+2
  2174   013560  C509  F50D         	movff	___xxtofl@val+3,??___xxtofl+3
  2175   013564  1E0A               	comf	??___xxtofl^(0+1280),f,c
  2176   013566  1E0B               	comf	(??___xxtofl+1)^(0+1280),f,c
  2177   013568  1E0C               	comf	(??___xxtofl+2)^(0+1280),f,c
  2178   01356A  1E0D               	comf	(??___xxtofl+3)^(0+1280),f,c
  2179   01356C  2A0A               	incf	??___xxtofl^(0+1280),f,c
  2180   01356E  0E00               	movlw	0
  2181   013570  220B               	addwfc	(??___xxtofl+1)^(0+1280),f,c
  2182   013572  220C               	addwfc	(??___xxtofl+2)^(0+1280),f,c
  2183   013574  220D               	addwfc	(??___xxtofl+3)^(0+1280),f,c
  2184   013576  C50A  F510         	movff	??___xxtofl,___xxtofl@arg
  2185   01357A  C50B  F511         	movff	??___xxtofl+1,___xxtofl@arg+1
  2186   01357E  C50C  F512         	movff	??___xxtofl+2,___xxtofl@arg+2
  2187   013582  C50D  F513         	movff	??___xxtofl+3,___xxtofl@arg+3
  2188   013586  EFCD  F09A         	goto	l6631
  2189   01358A                     l1218:
  2190   01358A  C506  F510         	movff	___xxtofl@val,___xxtofl@arg
  2191   01358E  C507  F511         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2192   013592  C508  F512         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2193   013596  C509  F513         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2194   01359A                     l6631:
  2195   01359A  5006               	movf	___xxtofl@val^(0+1280),w,c
  2196   01359C  1007               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
  2197   01359E  1008               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
  2198   0135A0  1009               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
  2199   0135A2  A4D8               	btfss	status,2,c
  2200   0135A4  EFD6  F09A         	goto	u6861
  2201   0135A8  EFD8  F09A         	goto	u6860
  2202   0135AC                     u6861:
  2203   0135AC  EFE2  F09A         	goto	l6637
  2204   0135B0                     u6860:
  2205   0135B0  0E00               	movlw	0
  2206   0135B2  6E06               	movwf	?___xxtofl^(0+1280),c
  2207   0135B4  0E00               	movlw	0
  2208   0135B6  6E07               	movwf	(?___xxtofl+1)^(0+1280),c
  2209   0135B8  0E00               	movlw	0
  2210   0135BA  6E08               	movwf	(?___xxtofl+2)^(0+1280),c
  2211   0135BC  0E00               	movlw	0
  2212   0135BE  6E09               	movwf	(?___xxtofl+3)^(0+1280),c
  2213   0135C0  EF73  F09B         	goto	l1221
  2214   0135C4                     l6637:
  2215   0135C4  0E96               	movlw	150
  2216   0135C6  6E0F               	movwf	___xxtofl@exp^(0+1280),c
  2217   0135C8  EFEC  F09A         	goto	l6641
  2218   0135CC                     l6639:
  2219   0135CC  2A0F               	incf	___xxtofl@exp^(0+1280),f,c
  2220   0135CE  90D8               	bcf	status,0,c
  2221   0135D0  3213               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  2222   0135D2  3212               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  2223   0135D4  3211               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  2224   0135D6  3210               	rrcf	___xxtofl@arg^(0+1280),f,c
  2225   0135D8                     l6641:
  2226   0135D8  0E00               	movlw	0
  2227   0135DA  1410               	andwf	___xxtofl@arg^(0+1280),w,c
  2228   0135DC  6E0A               	movwf	??___xxtofl^(0+1280),c
  2229   0135DE  0E00               	movlw	0
  2230   0135E0  1411               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  2231   0135E2  6E0B               	movwf	(??___xxtofl+1)^(0+1280),c
  2232   0135E4  0E00               	movlw	0
  2233   0135E6  1412               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  2234   0135E8  6E0C               	movwf	(??___xxtofl+2)^(0+1280),c
  2235   0135EA  0EFE               	movlw	254
  2236   0135EC  1413               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  2237   0135EE  6E0D               	movwf	(??___xxtofl+3)^(0+1280),c
  2238   0135F0  500A               	movf	??___xxtofl^(0+1280),w,c
  2239   0135F2  100B               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  2240   0135F4  100C               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  2241   0135F6  100D               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  2242   0135F8  A4D8               	btfss	status,2,c
  2243   0135FA  EF01  F09B         	goto	u6871
  2244   0135FE  EF03  F09B         	goto	u6870
  2245   013602                     u6871:
  2246   013602  EFE6  F09A         	goto	l6639
  2247   013606                     u6870:
  2248   013606  EF11  F09B         	goto	l1225
  2249   01360A                     l6643:
  2250   01360A  2A0F               	incf	___xxtofl@exp^(0+1280),f,c
  2251   01360C  0E01               	movlw	1
  2252   01360E  2610               	addwf	___xxtofl@arg^(0+1280),f,c
  2253   013610  0E00               	movlw	0
  2254   013612  2211               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
  2255   013614  2212               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
  2256   013616  2213               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
  2257   013618  90D8               	bcf	status,0,c
  2258   01361A  3213               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  2259   01361C  3212               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  2260   01361E  3211               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  2261   013620  3210               	rrcf	___xxtofl@arg^(0+1280),f,c
  2262   013622                     l1225:
  2263   013622  0E00               	movlw	0
  2264   013624  1410               	andwf	___xxtofl@arg^(0+1280),w,c
  2265   013626  6E0A               	movwf	??___xxtofl^(0+1280),c
  2266   013628  0E00               	movlw	0
  2267   01362A  1411               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  2268   01362C  6E0B               	movwf	(??___xxtofl+1)^(0+1280),c
  2269   01362E  0E00               	movlw	0
  2270   013630  1412               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  2271   013632  6E0C               	movwf	(??___xxtofl+2)^(0+1280),c
  2272   013634  0EFF               	movlw	255
  2273   013636  1413               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  2274   013638  6E0D               	movwf	(??___xxtofl+3)^(0+1280),c
  2275   01363A  500A               	movf	??___xxtofl^(0+1280),w,c
  2276   01363C  100B               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  2277   01363E  100C               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  2278   013640  100D               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  2279   013642  A4D8               	btfss	status,2,c
  2280   013644  EF26  F09B         	goto	u6881
  2281   013648  EF28  F09B         	goto	u6880
  2282   01364C                     u6881:
  2283   01364C  EF05  F09B         	goto	l6643
  2284   013650                     u6880:
  2285   013650  EF30  F09B         	goto	l6651
  2286   013654                     l6649:
  2287   013654  060F               	decf	___xxtofl@exp^(0+1280),f,c
  2288   013656  90D8               	bcf	status,0,c
  2289   013658  3610               	rlcf	___xxtofl@arg^(0+1280),f,c
  2290   01365A  3611               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
  2291   01365C  3612               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
  2292   01365E  3613               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
  2293   013660                     l6651:
  2294   013660  BE12               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
  2295   013662  EF35  F09B         	goto	u6891
  2296   013666  EF37  F09B         	goto	u6890
  2297   01366A                     u6891:
  2298   01366A  EF3F  F09B         	goto	l1232
  2299   01366E                     u6890:
  2300   01366E  0E02               	movlw	2
  2301   013670  600F               	cpfslt	___xxtofl@exp^(0+1280),c
  2302   013672  EF3D  F09B         	goto	u6901
  2303   013676  EF3F  F09B         	goto	u6900
  2304   01367A                     u6901:
  2305   01367A  EF2A  F09B         	goto	l6649
  2306   01367E                     u6900:
  2307   01367E                     l1232:
  2308   01367E  B00F               	btfsc	___xxtofl@exp^(0+1280),0,c
  2309   013680  EF44  F09B         	goto	u6911
  2310   013684  EF46  F09B         	goto	u6910
  2311   013688                     u6911:
  2312   013688  EF47  F09B         	goto	l6657
  2313   01368C                     u6910:
  2314   01368C  9E12               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
  2315   01368E                     l6657:
  2316   01368E  90D8               	bcf	status,0,c
  2317   013690  320F               	rrcf	___xxtofl@exp^(0+1280),f,c
  2318   013692  C50F  F50A         	movff	___xxtofl@exp,??___xxtofl
  2319   013696  6A0B               	clrf	(??___xxtofl+1)^(0+1280),c
  2320   013698  6A0C               	clrf	(??___xxtofl+2)^(0+1280),c
  2321   01369A  6A0D               	clrf	(??___xxtofl+3)^(0+1280),c
  2322   01369C  C50A  F50D         	movff	??___xxtofl,??___xxtofl+3
  2323   0136A0  6A0C               	clrf	(??___xxtofl+2)^(0+1280),c
  2324   0136A2  6A0B               	clrf	(??___xxtofl+1)^(0+1280),c
  2325   0136A4  6A0A               	clrf	??___xxtofl^(0+1280),c
  2326   0136A6  500A               	movf	??___xxtofl^(0+1280),w,c
  2327   0136A8  1210               	iorwf	___xxtofl@arg^(0+1280),f,c
  2328   0136AA  500B               	movf	(??___xxtofl+1)^(0+1280),w,c
  2329   0136AC  1211               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
  2330   0136AE  500C               	movf	(??___xxtofl+2)^(0+1280),w,c
  2331   0136B0  1212               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
  2332   0136B2  500D               	movf	(??___xxtofl+3)^(0+1280),w,c
  2333   0136B4  1213               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
  2334   0136B6  500E               	movf	___xxtofl@sign^(0+1280),w,c
  2335   0136B8  B4D8               	btfsc	status,2,c
  2336   0136BA  EF61  F09B         	goto	u6921
  2337   0136BE  EF63  F09B         	goto	u6920
  2338   0136C2                     u6921:
  2339   0136C2  EF6B  F09B         	goto	l6667
  2340   0136C6                     u6920:
  2341   0136C6  BE09               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
  2342   0136C8  EF6A  F09B         	goto	u6930
  2343   0136CC  EF68  F09B         	goto	u6931
  2344   0136D0                     u6931:
  2345   0136D0  EF6B  F09B         	goto	l6667
  2346   0136D4                     u6930:
  2347   0136D4  8E13               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
  2348   0136D6                     l6667:
  2349   0136D6  C510  F506         	movff	___xxtofl@arg,?___xxtofl
  2350   0136DA  C511  F507         	movff	___xxtofl@arg+1,?___xxtofl+1
  2351   0136DE  C512  F508         	movff	___xxtofl@arg+2,?___xxtofl+2
  2352   0136E2  C513  F509         	movff	___xxtofl@arg+3,?___xxtofl+3
  2353   0136E6                     l1221:
  2354   0136E6  0012               	return		;funcret
  2355   0136E8                     __end_of___xxtofl:
  2356                           	callstack 0
  2357                           
  2358 ;; *************** function _MenuS *****************
  2359 ;; Defined at:
  2360 ;;		line 778 in file "main.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2378 ;;Total ram usage:        2 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 8
  2381 ;; This function calls:
  2382 ;;		_lcd_char
  2383 ;;		_lcd_clear
  2384 ;;		_lcd_out
  2385 ;;		_sprintf
  2386 ;; This function is called by:
  2387 ;;		_main
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text7
  2392   013E3A                     __ptext7:
  2393                           	callstack 0
  2394   013E3A                     _MenuS:
  2395                           	callstack 118
  2396   013E3A                     
  2397                           ;main.c: 780:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
  2398   013E3A  0E09               	movlw	9
  2399   013E3C  6E58               	movwf	(??_MenuS+1)^(0+1280),c
  2400   013E3E  0E1E               	movlw	30
  2401   013E40  6E57               	movwf	??_MenuS^(0+1280),c
  2402   013E42  0EE4               	movlw	228
  2403   013E44                     u7097:
  2404   013E44  2EE8               	decfsz	wreg,f,c
  2405   013E46  D7FE               	bra	u7097
  2406   013E48  2E57               	decfsz	??_MenuS^(0+1280),f,c
  2407   013E4A  D7FC               	bra	u7097
  2408   013E4C  2E58               	decfsz	(??_MenuS+1)^(0+1280),f,c
  2409   013E4E  D7FA               	bra	u7097
  2410   013E50  D000               	nop2	
  2411   013E52                     
  2412                           ;main.c: 781:     lcd_out(1,1,"  MENU SENSORES ");
  2413   013E52  0E01               	movlw	1
  2414   013E54  6E0C               	movwf	lcd_out@col^(0+1280),c
  2415   013E56  0E6E               	movlw	low STR_14
  2416   013E58  6E0D               	movwf	lcd_out@str^(0+1280),c
  2417   013E5A  0EFF               	movlw	high STR_14
  2418   013E5C  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
  2419   013E5E  0E01               	movlw	1
  2420   013E60  EC3E  F0A2         	call	_lcd_out
  2421   013E64                     
  2422                           ;main.c: 782:     lcd_char(2,16,0);
  2423   013E64  0E10               	movlw	16
  2424   013E66  6E0C               	movwf	lcd_char@col^(0+1280),c
  2425   013E68  0E00               	movlw	0
  2426   013E6A  6E0D               	movwf	lcd_char@letra^(0+1280),c
  2427   013E6C  0E02               	movlw	2
  2428   013E6E  EC63  F0A5         	call	_lcd_char
  2429   013E72                     
  2430                           ;main.c: 784:     sprintf(auxStr,"D: %03d",ultrasonido);
  2431   013E72  0EA9               	movlw	low _auxStr
  2432   013E74  0105               	movlb	5	; () banked
  2433   013E76  6F92               	movwf	sprintf@s& (0+255),b
  2434   013E78  0E05               	movlw	high _auxStr
  2435   013E7A  6F93               	movwf	(sprintf@s+1)& (0+255),b
  2436   013E7C  0EEB               	movlw	low STR_15
  2437   013E7E  6F94               	movwf	sprintf@fmt& (0+255),b
  2438   013E80  0EFF               	movlw	high STR_15
  2439   013E82  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  2440   013E84  C5E1  F596         	movff	_ultrasonido,?_sprintf+4
  2441   013E88  C5E2  F597         	movff	_ultrasonido+1,?_sprintf+5
  2442   013E8C  EC2D  F0A3         	call	_sprintf	;wreg free
  2443   013E90                     
  2444                           ;main.c: 785:     lcd_out(2,1,auxStr);
  2445   013E90  0E01               	movlw	1
  2446   013E92  6E0C               	movwf	lcd_out@col^(0+1280),c
  2447   013E94  0EA9               	movlw	low _auxStr
  2448   013E96  6E0D               	movwf	lcd_out@str^(0+1280),c
  2449   013E98  0E05               	movlw	high _auxStr
  2450   013E9A  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
  2451   013E9C  0E02               	movlw	2
  2452   013E9E  EC3E  F0A2         	call	_lcd_out
  2453   013EA2                     
  2454                           ;main.c: 786:     lcd_out(2,7,"cm");
  2455   013EA2  0E07               	movlw	7
  2456   013EA4  6E0C               	movwf	lcd_out@col^(0+1280),c
  2457   013EA6  0EFB               	movlw	low STR_16
  2458   013EA8  6E0D               	movwf	lcd_out@str^(0+1280),c
  2459   013EAA  0EFF               	movlw	high STR_16
  2460   013EAC  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
  2461   013EAE  0E02               	movlw	2
  2462   013EB0  EC3E  F0A2         	call	_lcd_out
  2463   013EB4                     
  2464                           ;main.c: 787:     sprintf(auxStr,"T: %0.1f",temp);
  2465   013EB4  0EA9               	movlw	low _auxStr
  2466   013EB6  0105               	movlb	5	; () banked
  2467   013EB8  6F92               	movwf	sprintf@s& (0+255),b
  2468   013EBA  0E05               	movlw	high _auxStr
  2469   013EBC  6F93               	movwf	(sprintf@s+1)& (0+255),b
  2470   013EBE  0EDA               	movlw	low STR_17
  2471   013EC0  6F94               	movwf	sprintf@fmt& (0+255),b
  2472   013EC2  0EFF               	movlw	high STR_17
  2473   013EC4  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  2474   013EC6  C5D5  F596         	movff	_temp,?_sprintf+4
  2475   013ECA  C5D6  F597         	movff	_temp+1,?_sprintf+5
  2476   013ECE  C5D7  F598         	movff	_temp+2,?_sprintf+6
  2477   013ED2  C5D8  F599         	movff	_temp+3,?_sprintf+7
  2478   013ED6  EC2D  F0A3         	call	_sprintf	;wreg free
  2479   013EDA                     
  2480                           ;main.c: 788:     lcd_out(2,10,auxStr);
  2481   013EDA  0E0A               	movlw	10
  2482   013EDC  6E0C               	movwf	lcd_out@col^(0+1280),c
  2483   013EDE  0EA9               	movlw	low _auxStr
  2484   013EE0  6E0D               	movwf	lcd_out@str^(0+1280),c
  2485   013EE2  0E05               	movlw	high _auxStr
  2486   013EE4  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
  2487   013EE6  0E02               	movlw	2
  2488   013EE8  EC3E  F0A2         	call	_lcd_out
  2489   013EEC                     
  2490                           ;main.c: 790:     if(PORTBbits.RB4 == 0){
  2491   013EEC  B8CF               	btfsc	207,4,c	;volatile
  2492   013EEE  EF7B  F09F         	goto	u6811
  2493   013EF2  EF7D  F09F         	goto	u6810
  2494   013EF6                     u6811:
  2495   013EF6  EF88  F09F         	goto	l430
  2496   013EFA                     u6810:
  2497   013EFA                     
  2498                           ;main.c: 791:         lcd_clear();
  2499   013EFA  EC44  F0A5         	call	_lcd_clear	;wreg free
  2500   013EFE                     
  2501                           ;main.c: 792:         opSel=1;
  2502   013EFE  0E00               	movlw	0
  2503   013F00  0105               	movlb	5	; () banked
  2504   013F02  6FA8               	movwf	(_opSel+1)& (0+255),b
  2505   013F04  0E01               	movlw	1
  2506   013F06  6FA7               	movwf	_opSel& (0+255),b
  2507   013F08                     
  2508                           ; BSR set to: 5
  2509                           ;main.c: 793:         menuOp = menu_principal;
  2510   013F08  0E00               	movlw	0
  2511   013F0A  6FE0               	movwf	(_menuOp+1)& (0+255),b
  2512   013F0C  0E00               	movlw	0
  2513   013F0E  6FDF               	movwf	_menuOp& (0+255),b
  2514   013F10                     l430:
  2515   013F10  0012               	return		;funcret
  2516   013F12                     __end_of_MenuS:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _sprintf *****************
  2520 ;; Defined at:
  2521 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  s               2   50[BANK5 ] PTR unsigned char 
  2524 ;;		 -> auxStr(20), 
  2525 ;;  fmt             2   52[BANK5 ] PTR const unsigned char 
  2526 ;;		 -> STR_17(9), STR_15(8), 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  f              11   60[BANK5 ] struct _IO_FILE
  2529 ;;  ap              2   58[BANK5 ] PTR void [1]
  2530 ;;		 -> ?_sprintf(2), 
  2531 ;;  ret             2    0        int 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  2   50[BANK5 ] int 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2541 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2542 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2544 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2545 ;;Total ram usage:       21 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 7
  2548 ;; This function calls:
  2549 ;;		_vfprintf
  2550 ;; This function is called by:
  2551 ;;		_MenuS
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text8
  2556   01465A                     __ptext8:
  2557                           	callstack 0
  2558   01465A                     _sprintf:
  2559                           	callstack 118
  2560   01465A  0E96               	movlw	low (?_sprintf+4)
  2561   01465C  0105               	movlb	5	; () banked
  2562   01465E  6F9A               	movwf	sprintf@ap& (0+255),b
  2563   014660  0E05               	movlw	high (?_sprintf+4)
  2564   014662  6F9B               	movwf	(sprintf@ap+1)& (0+255),b
  2565   014664  C592  F59C         	movff	sprintf@s,sprintf@f
  2566   014668  C593  F59D         	movff	sprintf@s+1,sprintf@f+1
  2567   01466C                     
  2568                           ; BSR set to: 5
  2569   01466C  0E00               	movlw	0
  2570   01466E  6FA0               	movwf	(sprintf@f+4)& (0+255),b
  2571   014670  0E00               	movlw	0
  2572   014672  6F9F               	movwf	(sprintf@f+3)& (0+255),b
  2573   014674                     
  2574                           ; BSR set to: 5
  2575   014674  0E00               	movlw	0
  2576   014676  6FA6               	movwf	(sprintf@f+10)& (0+255),b
  2577   014678  0E00               	movlw	0
  2578   01467A  6FA5               	movwf	(sprintf@f+9)& (0+255),b
  2579   01467C                     
  2580                           ; BSR set to: 5
  2581   01467C  0E9C               	movlw	low sprintf@f
  2582   01467E  6F8C               	movwf	vfprintf@fp& (0+255),b
  2583   014680  0E05               	movlw	high sprintf@f
  2584   014682  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  2585   014684  C594  F58E         	movff	sprintf@fmt,vfprintf@fmt
  2586   014688  C595  F58F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2587   01468C  0E9A               	movlw	low sprintf@ap
  2588   01468E  6F90               	movwf	vfprintf@ap& (0+255),b
  2589   014690  0E05               	movlw	high sprintf@ap
  2590   014692  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  2591   014694  EC03  F0A3         	call	_vfprintf	;wreg free
  2592   014698  0105               	movlb	5	; () banked
  2593   01469A  519F               	movf	(sprintf@f+3)& (0+255),w,b
  2594   01469C  2592               	addwf	sprintf@s& (0+255),w,b
  2595   01469E  6ED9               	movwf	fsr2l,c
  2596   0146A0  51A0               	movf	(sprintf@f+4)& (0+255),w,b
  2597   0146A2  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  2598   0146A4  6EDA               	movwf	fsr2h,c
  2599   0146A6  0E00               	movlw	0
  2600   0146A8  6EDF               	movwf	indf2,c
  2601   0146AA                     
  2602                           ; BSR set to: 5
  2603   0146AA  0012               	return		;funcret
  2604   0146AC                     __end_of_sprintf:
  2605                           	callstack 0
  2606                           
  2607 ;; *************** function _vfprintf *****************
  2608 ;; Defined at:
  2609 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  fp              2   44[BANK5 ] PTR struct _IO_FILE
  2612 ;;		 -> sprintf@f(11), 
  2613 ;;  fmt             2   46[BANK5 ] PTR const unsigned char 
  2614 ;;		 -> STR_17(9), STR_15(8), 
  2615 ;;  ap              2   48[BANK5 ] PTR PTR void 
  2616 ;;		 -> sprintf@ap(2), 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
  2619 ;;		 -> STR_17(9), STR_15(8), 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  2   44[BANK5 ] int 
  2622 ;; Registers used:
  2623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2629 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2632 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2633 ;;Total ram usage:        8 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 6
  2636 ;; This function calls:
  2637 ;;		_vfpfcnvrt
  2638 ;; This function is called by:
  2639 ;;		_sprintf
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text9
  2644   014606                     __ptext9:
  2645                           	callstack 0
  2646   014606                     _vfprintf:
  2647                           	callstack 118
  2648   014606                     
  2649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2650   014606  C58E  F555         	movff	vfprintf@fmt,vfprintf@cfmt
  2651   01460A  C58F  F556         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2654   01460E  EF17  F0A3         	goto	l5747
  2655   014612                     l5745:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2658   014612  C58C  F53F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2659   014616  C58D  F540         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2660   01461A  0E55               	movlw	low vfprintf@cfmt
  2661   01461C  6E41               	movwf	vfpfcnvrt@fmt^(0+1280),c
  2662   01461E  0E05               	movlw	high vfprintf@cfmt
  2663   014620  6E42               	movwf	(vfpfcnvrt@fmt+1)^(0+1280),c
  2664   014622  C590  F543         	movff	vfprintf@ap,vfpfcnvrt@ap
  2665   014626  C591  F544         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2666   01462A  EC32  F085         	call	_vfpfcnvrt	;wreg free
  2667   01462E                     l5747:
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2670   01462E  C555  F4F6         	movff	vfprintf@cfmt,tblptrl
  2671   014632  C556  F4F7         	movff	vfprintf@cfmt+1,tblptrh
  2672   014636                     	if	0	;tblptru may be non-zero
  2673   014636                     	endif
  2674   014636                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2675   014636  0E00               	movlw	low (__mediumconst shr (0+16))
  2676   014638  6EF8               	movwf	tblptru,c
  2677   01463A                     	endif
  2678   01463A  0008               	tblrd		*
  2679   01463C  50F5               	movf	tablat,w,c
  2680   01463E  0900               	iorlw	0
  2681   014640  A4D8               	btfss	status,2,c
  2682   014642  EF25  F0A3         	goto	u5601
  2683   014646  EF27  F0A3         	goto	u5600
  2684   01464A                     u5601:
  2685   01464A  EF09  F0A3         	goto	l5745
  2686   01464E                     u5600:
  2687   01464E                     
  2688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2689   01464E  0E00               	movlw	0
  2690   014650  0105               	movlb	5	; () banked
  2691   014652  6F8D               	movwf	(?_vfprintf+1)& (0+255),b
  2692   014654  0E00               	movlw	0
  2693   014656  6F8C               	movwf	?_vfprintf& (0+255),b
  2694   014658                     
  2695                           ; BSR set to: 5
  2696   014658  0012               	return		;funcret
  2697   01465A                     __end_of_vfprintf:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _vfpfcnvrt *****************
  2701 ;; Defined at:
  2702 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2705 ;;		 -> sprintf@f(11), 
  2706 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2707 ;;		 -> vfprintf@cfmt(2), 
  2708 ;;  ap              2   66[COMRAM] PTR PTR void 
  2709 ;;		 -> sprintf@ap(2), 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  convarg         8   73[COMRAM] struct .
  2712 ;;  cp              2   82[COMRAM] PTR unsigned char 
  2713 ;;		 -> STR_17(9), STR_15(8), 
  2714 ;;  done            2   71[COMRAM] int 
  2715 ;;  i               2    0        int 
  2716 ;;  c               1   81[COMRAM] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2726 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2727 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2728 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2729 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2730 ;;Total ram usage:       22 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 5
  2733 ;; This function calls:
  2734 ;;		_atoi
  2735 ;;		_dtoa
  2736 ;;		_efgtoa
  2737 ;;		_fputc
  2738 ;;		_isdigit
  2739 ;; This function is called by:
  2740 ;;		_vfprintf
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text10
  2745   010A64                     __ptext10:
  2746                           	callstack 0
  2747   010A64                     _vfpfcnvrt:
  2748                           	callstack 118
  2749   010A64                     
  2750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2751   010A64  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  2752   010A68  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2753   010A6C  C4DE F4F6          	movff	postinc2,tblptrl
  2754   010A70  C4DD F4F7          	movff	postdec2,tblptrh
  2755   010A74                     	if	0	;tblptru may be non-zero
  2756   010A74                     	endif
  2757   010A74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2758   010A74  0E00               	movlw	low (__mediumconst shr (0+16))
  2759   010A76  6EF8               	movwf	tblptru,c
  2760   010A78                     	endif
  2761   010A78  0008               	tblrd		*
  2762   010A7A  50F5               	movf	tablat,w,c
  2763   010A7C  0A25               	xorlw	37
  2764   010A7E  A4D8               	btfss	status,2,c
  2765   010A80  EF44  F085         	goto	u5491
  2766   010A84  EF46  F085         	goto	u5490
  2767   010A88                     u5491:
  2768   010A88  EFD3  F087         	goto	l5695
  2769   010A8C                     u5490:
  2770   010A8C                     
  2771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2772   010A8C  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  2773   010A90  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2774   010A94  2ADE               	incf	postinc2,f,c
  2775   010A96  0E00               	movlw	0
  2776   010A98  22DD               	addwfc	postdec2,f,c
  2777   010A9A                     
  2778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2779   010A9A  0E00               	movlw	0
  2780   010A9C  0105               	movlb	5	; () banked
  2781   010A9E  6FDA               	movwf	(_width+1)& (0+255),b
  2782   010AA0  0E00               	movlw	0
  2783   010AA2  6FD9               	movwf	_width& (0+255),b
  2784   010AA4  C5D9  F5E3         	movff	_width,_flags
  2785   010AA8                     
  2786                           ; BSR set to: 5
  2787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2788   010AA8  69DB               	setf	_prec& (0+255),b
  2789   010AAA  69DC               	setf	(_prec+1)& (0+255),b
  2790   010AAC                     
  2791                           ; BSR set to: 5
  2792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1027:         don
      +                          e = 0;
  2793   010AAC  0E00               	movlw	0
  2794   010AAE  6E49               	movwf	(vfpfcnvrt@done+1)^(0+1280),c
  2795   010AB0  0E00               	movlw	0
  2796   010AB2  6E48               	movwf	vfpfcnvrt@done^(0+1280),c
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2799   010AB4  EF89  F085         	goto	l5609
  2800   010AB8                     l5599:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1038:            
      +                                   flags |= (1 << 1);
  2803   010AB8  0105               	movlb	5	; () banked
  2804   010ABA  83E3               	bsf	_flags& (0+255),1,b
  2805   010ABC                     
  2806                           ; BSR set to: 5
  2807                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1039:            
      +                                   ++*fmt;
  2808   010ABC  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  2809   010AC0  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2810   010AC4  2ADE               	incf	postinc2,f,c
  2811   010AC6  0E00               	movlw	0
  2812   010AC8  22DD               	addwfc	postdec2,f,c
  2813                           
  2814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1040:            
      +                                   break;
  2815   010ACA  EF89  F085         	goto	l5609
  2816   010ACE                     l5603:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1061:            
      +                                   done = 1;
  2819   010ACE  0E00               	movlw	0
  2820   010AD0  6E49               	movwf	(vfpfcnvrt@done+1)^(0+1280),c
  2821   010AD2  0E01               	movlw	1
  2822   010AD4  6E48               	movwf	vfpfcnvrt@done^(0+1280),c
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1062:            
      +                                   break;
  2825   010AD6  EF89  F085         	goto	l5609
  2826   010ADA                     l5607:
  2827   010ADA  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  2828   010ADE  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2829   010AE2  C4DE F4F6          	movff	postinc2,tblptrl
  2830   010AE6  C4DD F4F7          	movff	postdec2,tblptrh
  2831   010AEA                     	if	0	;tblptru may be non-zero
  2832   010AEA                     	endif
  2833   010AEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2834   010AEA  0E00               	movlw	low (__mediumconst shr (0+16))
  2835   010AEC  6EF8               	movwf	tblptru,c
  2836   010AEE                     	endif
  2837   010AEE  0008               	tblrd		*
  2838   010AF0  50F5               	movf	tablat,w,c
  2839   010AF2  6E45               	movwf	??_vfpfcnvrt^(0+1280),c
  2840   010AF4  6A46               	clrf	(??_vfpfcnvrt+1)^(0+1280),c
  2841                           
  2842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2843                           ; Switch size 1, requested type "simple"
  2844                           ; Number of cases is 1, Range of values is 0 to 0
  2845                           ; switch strategies available:
  2846                           ; Name         Instructions Cycles
  2847                           ; simple_byte            4     3 (average)
  2848                           ;	Chosen strategy is simple_byte
  2849   010AF6  5046               	movf	(??_vfpfcnvrt+1)^(0+1280),w,c
  2850   010AF8  0A00               	xorlw	0	; case 0
  2851   010AFA  B4D8               	btfsc	status,2,c
  2852   010AFC  EF82  F085         	goto	l7499
  2853   010B00  EF67  F085         	goto	l5603
  2854   010B04                     l7499:
  2855                           
  2856                           ; Switch size 1, requested type "simple"
  2857                           ; Number of cases is 1, Range of values is 48 to 48
  2858                           ; switch strategies available:
  2859                           ; Name         Instructions Cycles
  2860                           ; simple_byte            4     3 (average)
  2861                           ;	Chosen strategy is simple_byte
  2862   010B04  5045               	movf	??_vfpfcnvrt^(0+1280),w,c
  2863   010B06  0A30               	xorlw	48	; case 48
  2864   010B08  B4D8               	btfsc	status,2,c
  2865   010B0A  EF5C  F085         	goto	l5599
  2866   010B0E  EF67  F085         	goto	l5603
  2867   010B12                     l5609:
  2868                           
  2869                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1028:         whi
      +                          le (!done) {
  2870   010B12  5048               	movf	vfpfcnvrt@done^(0+1280),w,c
  2871   010B14  1049               	iorwf	(vfpfcnvrt@done+1)^(0+1280),w,c
  2872   010B16  B4D8               	btfsc	status,2,c
  2873   010B18  EF90  F085         	goto	u5501
  2874   010B1C  EF92  F085         	goto	u5500
  2875   010B20                     u5501:
  2876   010B20  EF6D  F085         	goto	l5607
  2877   010B24                     u5500:
  2878   010B24                     
  2879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1074:         if 
      +                          ((*fmt)[0] == '*') {
  2880   010B24  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  2881   010B28  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2882   010B2C  C4DE F4F6          	movff	postinc2,tblptrl
  2883   010B30  C4DD F4F7          	movff	postdec2,tblptrh
  2884   010B34                     	if	0	;tblptru may be non-zero
  2885   010B34                     	endif
  2886   010B34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2887   010B34  0E00               	movlw	low (__mediumconst shr (0+16))
  2888   010B36  6EF8               	movwf	tblptru,c
  2889   010B38                     	endif
  2890   010B38  0008               	tblrd		*
  2891   010B3A  50F5               	movf	tablat,w,c
  2892   010B3C  0A2A               	xorlw	42
  2893   010B3E  A4D8               	btfss	status,2,c
  2894   010B40  EFA4  F085         	goto	u5511
  2895   010B44  EFA6  F085         	goto	u5510
  2896   010B48                     u5511:
  2897   010B48  EFD0  F085         	goto	l5619
  2898   010B4C                     u5510:
  2899   010B4C                     
  2900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1075:            
      +                           ++*fmt;
  2901   010B4C  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  2902   010B50  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2903   010B54  2ADE               	incf	postinc2,f,c
  2904   010B56  0E00               	movlw	0
  2905   010B58  22DD               	addwfc	postdec2,f,c
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1076:            
      +                           width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2908   010B5A  C543  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  2909   010B5E  C544  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  2910   010B62  C4DF F545          	movff	indf2,??_vfpfcnvrt
  2911   010B66  0E02               	movlw	2
  2912   010B68  26DE               	addwf	postinc2,f,c
  2913   010B6A  C4DF F546          	movff	indf2,??_vfpfcnvrt+1
  2914   010B6E  0E00               	movlw	0
  2915   010B70  22DD               	addwfc	postdec2,f,c
  2916   010B72  C545  F4D9         	movff	??_vfpfcnvrt,fsr2l
  2917   010B76  C546  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  2918   010B7A  C4DE F5D9          	movff	postinc2,_width
  2919   010B7E  C4DD F5DA          	movff	postdec2,_width+1
  2920   010B82                     
  2921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1077:            
      +                           if (width < 0) {
  2922   010B82  0105               	movlb	5	; () banked
  2923   010B84  BFDA               	btfsc	(_width+1)& (0+255),7,b
  2924   010B86  EFC9  F085         	goto	u5520
  2925   010B8A  EFC7  F085         	goto	u5521
  2926   010B8E                     u5521:
  2927   010B8E  EF05  F086         	goto	l5627
  2928   010B92                     u5520:
  2929   010B92                     
  2930                           ; BSR set to: 5
  2931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1078:            
      +                               flags |= (1 << 0);
  2932   010B92  81E3               	bsf	_flags& (0+255),0,b
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1079:            
      +                               width = -width;
  2935   010B94  6DD9               	negf	_width& (0+255),b
  2936   010B96  1FDA               	comf	(_width+1)& (0+255),f,b
  2937   010B98  B0D8               	btfsc	status,0,c
  2938   010B9A  2BDA               	incf	(_width+1)& (0+255),f,b
  2939   010B9C  EF05  F086         	goto	l5627
  2940   010BA0                     l5619:
  2941                           
  2942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1082:            
      +                           width = atoi(*fmt);
  2943   010BA0  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  2944   010BA4  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2945   010BA8  C4DE F507          	movff	postinc2,atoi@s
  2946   010BAC  C4DD F508          	movff	postdec2,atoi@s+1
  2947   010BB0  ECEA  F09C         	call	_atoi	;wreg free
  2948   010BB4  C507  F5D9         	movff	?_atoi,_width
  2949   010BB8  C508  F5DA         	movff	?_atoi+1,_width+1
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1083:            
      +                           while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  2952   010BBC  EFE7  F085         	goto	l5625
  2953   010BC0                     l5621:
  2954                           
  2955                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1084:            
      +                               ++*fmt;
  2956   010BC0  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  2957   010BC4  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2958   010BC8  2ADE               	incf	postinc2,f,c
  2959   010BCA  0E00               	movlw	0
  2960   010BCC  22DD               	addwfc	postdec2,f,c
  2961   010BCE                     l5625:
  2962   010BCE  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  2963   010BD2  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2964   010BD6  C4DE F4F6          	movff	postinc2,tblptrl
  2965   010BDA  C4DD F4F7          	movff	postdec2,tblptrh
  2966   010BDE                     	if	0	;tblptru may be non-zero
  2967   010BDE                     	endif
  2968   010BDE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2969   010BDE  0E00               	movlw	low (__mediumconst shr (0+16))
  2970   010BE0  6EF8               	movwf	tblptru,c
  2971   010BE2                     	endif
  2972   010BE2  0008               	tblrd		*
  2973   010BE4  C4F5 F545          	movff	tablat,??_vfpfcnvrt
  2974   010BE8  0ED0               	movlw	208
  2975   010BEA  2445               	addwf	??_vfpfcnvrt^(0+1280),w,c
  2976   010BEC  6E46               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
  2977   010BEE  6A47               	clrf	(??_vfpfcnvrt+2)^(0+1280),c
  2978   010BF0  0EFF               	movlw	255
  2979   010BF2  2247               	addwfc	(??_vfpfcnvrt+2)^(0+1280),f,c
  2980   010BF4  5047               	movf	(??_vfpfcnvrt+2)^(0+1280),w,c
  2981   010BF6  E109               	bnz	u5530
  2982   010BF8  0E0A               	movlw	10
  2983   010BFA  5C46               	subwf	(??_vfpfcnvrt+1)^(0+1280),w,c
  2984   010BFC  A0D8               	btfss	status,0,c
  2985   010BFE  EF03  F086         	goto	u5531
  2986   010C02  EF05  F086         	goto	u5530
  2987   010C06                     u5531:
  2988   010C06  EFE0  F085         	goto	l5621
  2989   010C0A                     u5530:
  2990   010C0A                     l5627:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1091:         if 
      +                          ((*fmt)[0] == '.') {
  2993   010C0A  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  2994   010C0E  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2995   010C12  C4DE F4F6          	movff	postinc2,tblptrl
  2996   010C16  C4DD F4F7          	movff	postdec2,tblptrh
  2997   010C1A                     	if	0	;tblptru may be non-zero
  2998   010C1A                     	endif
  2999   010C1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3000   010C1A  0E00               	movlw	low (__mediumconst shr (0+16))
  3001   010C1C  6EF8               	movwf	tblptru,c
  3002   010C1E                     	endif
  3003   010C1E  0008               	tblrd		*
  3004   010C20  50F5               	movf	tablat,w,c
  3005   010C22  0A2E               	xorlw	46
  3006   010C24  A4D8               	btfss	status,2,c
  3007   010C26  EF17  F086         	goto	u5541
  3008   010C2A  EF19  F086         	goto	u5540
  3009   010C2E                     u5541:
  3010   010C2E  EF8B  F086         	goto	l5645
  3011   010C32                     u5540:
  3012   010C32                     
  3013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1092:            
      +                           prec = 0;
  3014   010C32  0E00               	movlw	0
  3015   010C34  0105               	movlb	5	; () banked
  3016   010C36  6FDC               	movwf	(_prec+1)& (0+255),b
  3017   010C38  0E00               	movlw	0
  3018   010C3A  6FDB               	movwf	_prec& (0+255),b
  3019   010C3C                     
  3020                           ; BSR set to: 5
  3021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1093:            
      +                           ++*fmt;
  3022   010C3C  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3023   010C40  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3024   010C44  2ADE               	incf	postinc2,f,c
  3025   010C46  0E00               	movlw	0
  3026   010C48  22DD               	addwfc	postdec2,f,c
  3027   010C4A                     
  3028                           ; BSR set to: 5
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1094:            
      +                           if ((*fmt)[0] == '*') {
  3030   010C4A  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3031   010C4E  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3032   010C52  C4DE F4F6          	movff	postinc2,tblptrl
  3033   010C56  C4DD F4F7          	movff	postdec2,tblptrh
  3034   010C5A                     	if	0	;tblptru may be non-zero
  3035   010C5A                     	endif
  3036   010C5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3037   010C5A  0E00               	movlw	low (__mediumconst shr (0+16))
  3038   010C5C  6EF8               	movwf	tblptru,c
  3039   010C5E                     	endif
  3040   010C5E  0008               	tblrd		*
  3041   010C60  50F5               	movf	tablat,w,c
  3042   010C62  0A2A               	xorlw	42
  3043   010C64  A4D8               	btfss	status,2,c
  3044   010C66  EF37  F086         	goto	u5551
  3045   010C6A  EF39  F086         	goto	u5550
  3046   010C6E                     u5551:
  3047   010C6E  EF56  F086         	goto	l5637
  3048   010C72                     u5550:
  3049   010C72                     
  3050                           ; BSR set to: 5
  3051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1095:            
      +                               ++*fmt;
  3052   010C72  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3053   010C76  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3054   010C7A  2ADE               	incf	postinc2,f,c
  3055   010C7C  0E00               	movlw	0
  3056   010C7E  22DD               	addwfc	postdec2,f,c
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1096:            
      +                               prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3059   010C80  C543  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  3060   010C84  C544  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  3061   010C88  C4DF F545          	movff	indf2,??_vfpfcnvrt
  3062   010C8C  0E02               	movlw	2
  3063   010C8E  26DE               	addwf	postinc2,f,c
  3064   010C90  C4DF F546          	movff	indf2,??_vfpfcnvrt+1
  3065   010C94  0E00               	movlw	0
  3066   010C96  22DD               	addwfc	postdec2,f,c
  3067   010C98  C545  F4D9         	movff	??_vfpfcnvrt,fsr2l
  3068   010C9C  C546  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  3069   010CA0  C4DE F5DB          	movff	postinc2,_prec
  3070   010CA4  C4DD F5DC          	movff	postdec2,_prec+1
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1097:            
      +                           } else {
  3073   010CA8  EF8B  F086         	goto	l5645
  3074   010CAC                     l5637:
  3075                           
  3076                           ; BSR set to: 5
  3077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1098:            
      +                               prec = atoi(*fmt);
  3078   010CAC  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3079   010CB0  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3080   010CB4  C4DE F507          	movff	postinc2,atoi@s
  3081   010CB8  C4DD F508          	movff	postdec2,atoi@s+1
  3082   010CBC  ECEA  F09C         	call	_atoi	;wreg free
  3083   010CC0  C507  F5DB         	movff	?_atoi,_prec
  3084   010CC4  C508  F5DC         	movff	?_atoi+1,_prec+1
  3085                           
  3086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1099:            
      +                               while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  3087   010CC8  EF6D  F086         	goto	l5643
  3088   010CCC                     l5639:
  3089                           
  3090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1100:            
      +                                   ++*fmt;
  3091   010CCC  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3092   010CD0  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3093   010CD4  2ADE               	incf	postinc2,f,c
  3094   010CD6  0E00               	movlw	0
  3095   010CD8  22DD               	addwfc	postdec2,f,c
  3096   010CDA                     l5643:
  3097   010CDA  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3098   010CDE  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3099   010CE2  C4DE F4F6          	movff	postinc2,tblptrl
  3100   010CE6  C4DD F4F7          	movff	postdec2,tblptrh
  3101   010CEA                     	if	0	;tblptru may be non-zero
  3102   010CEA                     	endif
  3103   010CEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3104   010CEA  0E00               	movlw	low (__mediumconst shr (0+16))
  3105   010CEC  6EF8               	movwf	tblptru,c
  3106   010CEE                     	endif
  3107   010CEE  0008               	tblrd		*
  3108   010CF0  C4F5 F545          	movff	tablat,??_vfpfcnvrt
  3109   010CF4  0ED0               	movlw	208
  3110   010CF6  2445               	addwf	??_vfpfcnvrt^(0+1280),w,c
  3111   010CF8  6E46               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
  3112   010CFA  6A47               	clrf	(??_vfpfcnvrt+2)^(0+1280),c
  3113   010CFC  0EFF               	movlw	255
  3114   010CFE  2247               	addwfc	(??_vfpfcnvrt+2)^(0+1280),f,c
  3115   010D00  5047               	movf	(??_vfpfcnvrt+2)^(0+1280),w,c
  3116   010D02  E109               	bnz	u5560
  3117   010D04  0E0A               	movlw	10
  3118   010D06  5C46               	subwf	(??_vfpfcnvrt+1)^(0+1280),w,c
  3119   010D08  A0D8               	btfss	status,0,c
  3120   010D0A  EF89  F086         	goto	u5561
  3121   010D0E  EF8B  F086         	goto	u5560
  3122   010D12                     u5561:
  3123   010D12  EF66  F086         	goto	l5639
  3124   010D16                     u5560:
  3125   010D16                     l5645:
  3126                           
  3127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3128   010D16  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3129   010D1A  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3130   010D1E  C4DE F553          	movff	postinc2,vfpfcnvrt@cp
  3131   010D22  C4DD F554          	movff	postdec2,vfpfcnvrt@cp+1
  3132   010D26                     
  3133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3134   010D26  C553  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3135   010D2A  C554  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  3136   010D2E                     	if	0	;tblptru may be non-zero
  3137   010D2E                     	endif
  3138   010D2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3139   010D2E  0E00               	movlw	low (__mediumconst shr (0+16))
  3140   010D30  6EF8               	movwf	tblptru,c
  3141   010D32                     	endif
  3142   010D32  0008               	tblrd		*
  3143   010D34  50F5               	movf	tablat,w,c
  3144   010D36  0A64               	xorlw	100
  3145   010D38  B4D8               	btfsc	status,2,c
  3146   010D3A  EFA1  F086         	goto	u5571
  3147   010D3E  EFA3  F086         	goto	u5570
  3148   010D42                     u5571:
  3149   010D42  EFB3  F086         	goto	l5651
  3150   010D46                     u5570:
  3151   010D46  C553  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3152   010D4A  C554  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  3153   010D4E                     	if	0	;tblptru may be non-zero
  3154   010D4E                     	endif
  3155   010D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3156   010D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  3157   010D50  6EF8               	movwf	tblptru,c
  3158   010D52                     	endif
  3159   010D52  0008               	tblrd		*
  3160   010D54  50F5               	movf	tablat,w,c
  3161   010D56  0A69               	xorlw	105
  3162   010D58  A4D8               	btfss	status,2,c
  3163   010D5A  EFB1  F086         	goto	u5581
  3164   010D5E  EFB3  F086         	goto	u5580
  3165   010D62                     u5581:
  3166   010D62  EFF6  F086         	goto	l5657
  3167   010D66                     u5580:
  3168   010D66                     l5651:
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3171   010D66  C543  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  3172   010D6A  C544  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  3173   010D6E  C4DF F545          	movff	indf2,??_vfpfcnvrt
  3174   010D72  0E02               	movlw	2
  3175   010D74  26DE               	addwf	postinc2,f,c
  3176   010D76  C4DF F546          	movff	indf2,??_vfpfcnvrt+1
  3177   010D7A  0E00               	movlw	0
  3178   010D7C  22DD               	addwfc	postdec2,f,c
  3179   010D7E  C545  F4D9         	movff	??_vfpfcnvrt,fsr2l
  3180   010D82  C546  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  3181   010D86  C4DE F54A          	movff	postinc2,vfpfcnvrt@convarg
  3182   010D8A  C4DD F54B          	movff	postdec2,vfpfcnvrt@convarg+1
  3183   010D8E  0E00               	movlw	0
  3184   010D90  BE4B               	btfsc	(vfpfcnvrt@convarg+1)^(0+1280),7,c
  3185   010D92  0EFF               	movlw	-1
  3186   010D94  6E4C               	movwf	(vfpfcnvrt@convarg+2)^(0+1280),c
  3187   010D96  6E4D               	movwf	(vfpfcnvrt@convarg+3)^(0+1280),c
  3188   010D98  6E4E               	movwf	(vfpfcnvrt@convarg+4)^(0+1280),c
  3189   010D9A  6E4F               	movwf	(vfpfcnvrt@convarg+5)^(0+1280),c
  3190   010D9C  6E50               	movwf	(vfpfcnvrt@convarg+6)^(0+1280),c
  3191   010D9E  6E51               	movwf	(vfpfcnvrt@convarg+7)^(0+1280),c
  3192                           
  3193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3194   010DA0  0E01               	movlw	1
  3195   010DA2  2453               	addwf	vfpfcnvrt@cp^(0+1280),w,c
  3196   010DA4  6E45               	movwf	??_vfpfcnvrt^(0+1280),c
  3197   010DA6  0E00               	movlw	0
  3198   010DA8  2054               	addwfc	(vfpfcnvrt@cp+1)^(0+1280),w,c
  3199   010DAA  6E46               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
  3200   010DAC  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3201   010DB0  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3202   010DB4  C545  F4DE         	movff	??_vfpfcnvrt,postinc2
  3203   010DB8  C546  F4DD         	movff	??_vfpfcnvrt+1,postdec2
  3204   010DBC                     
  3205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3206   010DBC  C53F  F51C         	movff	vfpfcnvrt@fp,dtoa@fp
  3207   010DC0  C540  F51D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3208   010DC4  C54A  F51E         	movff	vfpfcnvrt@convarg,dtoa@d
  3209   010DC8  C54B  F51F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3210   010DCC  C54C  F520         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3211   010DD0  C54D  F521         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3212   010DD4  C54E  F522         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3213   010DD8  C54F  F523         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3214   010DDC  C550  F524         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3215   010DE0  C551  F525         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3216   010DE4  ECE3  F091         	call	_dtoa	;wreg free
  3217   010DE8  EFE9  F087         	goto	l1393
  3218   010DEC                     l5657:
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3221   010DEC  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3222   010DF0  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3223   010DF4  C4DE F553          	movff	postinc2,vfpfcnvrt@cp
  3224   010DF8  C4DD F554          	movff	postdec2,vfpfcnvrt@cp+1
  3225   010DFC                     
  3226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3227   010DFC  C553  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3228   010E00  C554  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  3229   010E04                     	if	0	;tblptru may be non-zero
  3230   010E04                     	endif
  3231   010E04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3232   010E04  0E00               	movlw	low (__mediumconst shr (0+16))
  3233   010E06  6EF8               	movwf	tblptru,c
  3234   010E08                     	endif
  3235   010E08  0008               	tblrd		*
  3236   010E0A  C4F5 F552          	movff	tablat,vfpfcnvrt@c
  3237                           
  3238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3239   010E0E  EF15  F087         	goto	l5669
  3240   010E12                     l5661:
  3241                           
  3242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3243   010E12  4A53               	infsnz	vfpfcnvrt@cp^(0+1280),f,c
  3244   010E14  2A54               	incf	(vfpfcnvrt@cp+1)^(0+1280),f,c
  3245                           
  3246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3247   010E16  EF2E  F087         	goto	l5671
  3248   010E1A                     l5663:
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3251   010E1A  0E6C               	movlw	108
  3252   010E1C  6E52               	movwf	vfpfcnvrt@c^(0+1280),c
  3253                           
  3254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3255   010E1E  EF2E  F087         	goto	l5671
  3256   010E22                     l5665:
  3257                           
  3258                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3259   010E22  0E00               	movlw	0
  3260   010E24  6E52               	movwf	vfpfcnvrt@c^(0+1280),c
  3261                           
  3262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3263   010E26  EF2E  F087         	goto	l5671
  3264   010E2A                     l5669:
  3265   010E2A  5052               	movf	vfpfcnvrt@c^(0+1280),w,c
  3266   010E2C  6E45               	movwf	??_vfpfcnvrt^(0+1280),c
  3267   010E2E  6A46               	clrf	(??_vfpfcnvrt+1)^(0+1280),c
  3268                           
  3269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3270                           ; Switch size 1, requested type "simple"
  3271                           ; Number of cases is 1, Range of values is 0 to 0
  3272                           ; switch strategies available:
  3273                           ; Name         Instructions Cycles
  3274                           ; simple_byte            4     3 (average)
  3275                           ;	Chosen strategy is simple_byte
  3276   010E30  5046               	movf	(??_vfpfcnvrt+1)^(0+1280),w,c
  3277   010E32  0A00               	xorlw	0	; case 0
  3278   010E34  B4D8               	btfsc	status,2,c
  3279   010E36  EF1F  F087         	goto	l7501
  3280   010E3A  EF11  F087         	goto	l5665
  3281   010E3E                     l7501:
  3282                           
  3283                           ; Switch size 1, requested type "simple"
  3284                           ; Number of cases is 3, Range of values is 76 to 108
  3285                           ; switch strategies available:
  3286                           ; Name         Instructions Cycles
  3287                           ; simple_byte           10     6 (average)
  3288                           ;	Chosen strategy is simple_byte
  3289   010E3E  5045               	movf	??_vfpfcnvrt^(0+1280),w,c
  3290   010E40  0A4C               	xorlw	76	; case 76
  3291   010E42  B4D8               	btfsc	status,2,c
  3292   010E44  EF09  F087         	goto	l5661
  3293   010E48  0A2A               	xorlw	42	; case 102
  3294   010E4A  B4D8               	btfsc	status,2,c
  3295   010E4C  EF0D  F087         	goto	l5663
  3296   010E50  0A0A               	xorlw	10	; case 108
  3297   010E52  B4D8               	btfsc	status,2,c
  3298   010E54  EF09  F087         	goto	l5661
  3299   010E58  EF11  F087         	goto	l5665
  3300   010E5C                     l5671:
  3301   010E5C  C553  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3302   010E60  C554  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  3303   010E64                     	if	0	;tblptru may be non-zero
  3304   010E64                     	endif
  3305   010E64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3306   010E64  0E00               	movlw	low (__mediumconst shr (0+16))
  3307   010E66  6EF8               	movwf	tblptru,c
  3308   010E68                     	endif
  3309   010E68  0008               	tblrd		*
  3310   010E6A  50F5               	movf	tablat,w,c
  3311   010E6C  0A66               	xorlw	102
  3312   010E6E  A4D8               	btfss	status,2,c
  3313   010E70  EF3C  F087         	goto	u5591
  3314   010E74  EF3E  F087         	goto	u5590
  3315   010E78                     u5591:
  3316   010E78  EFCA  F087         	goto	l5691
  3317   010E7C                     u5590:
  3318   010E7C  EF74  F087         	goto	l5679
  3319   010E80                     l5673:
  3320                           
  3321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3322   010E80  C543  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  3323   010E84  C544  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  3324   010E88  C4DF F545          	movff	indf2,??_vfpfcnvrt
  3325   010E8C  0E04               	movlw	4
  3326   010E8E  26DE               	addwf	postinc2,f,c
  3327   010E90  C4DF F546          	movff	indf2,??_vfpfcnvrt+1
  3328   010E94  0E00               	movlw	0
  3329   010E96  22DD               	addwfc	postdec2,f,c
  3330   010E98  C545  F4D9         	movff	??_vfpfcnvrt,fsr2l
  3331   010E9C  C546  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  3332   010EA0  C4DE F54A          	movff	postinc2,vfpfcnvrt@convarg
  3333   010EA4  C4DE F54B          	movff	postinc2,vfpfcnvrt@convarg+1
  3334   010EA8  C4DE F54C          	movff	postinc2,vfpfcnvrt@convarg+2
  3335   010EAC  C4DE F54D          	movff	postinc2,vfpfcnvrt@convarg+3
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3338   010EB0  EF89  F087         	goto	l5681
  3339   010EB4                     l5675:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3342   010EB4  C543  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  3343   010EB8  C544  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  3344   010EBC  C4DF F545          	movff	indf2,??_vfpfcnvrt
  3345   010EC0  0E04               	movlw	4
  3346   010EC2  26DE               	addwf	postinc2,f,c
  3347   010EC4  C4DF F546          	movff	indf2,??_vfpfcnvrt+1
  3348   010EC8  0E00               	movlw	0
  3349   010ECA  22DD               	addwfc	postdec2,f,c
  3350   010ECC  C545  F4D9         	movff	??_vfpfcnvrt,fsr2l
  3351   010ED0  C546  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  3352   010ED4  C4DE F54A          	movff	postinc2,vfpfcnvrt@convarg
  3353   010ED8  C4DE F54B          	movff	postinc2,vfpfcnvrt@convarg+1
  3354   010EDC  C4DE F54C          	movff	postinc2,vfpfcnvrt@convarg+2
  3355   010EE0  C4DE F54D          	movff	postinc2,vfpfcnvrt@convarg+3
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3358   010EE4  EF89  F087         	goto	l5681
  3359   010EE8                     l5679:
  3360   010EE8  5052               	movf	vfpfcnvrt@c^(0+1280),w,c
  3361   010EEA  6E45               	movwf	??_vfpfcnvrt^(0+1280),c
  3362   010EEC  6A46               	clrf	(??_vfpfcnvrt+1)^(0+1280),c
  3363                           
  3364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3365                           ; Switch size 1, requested type "simple"
  3366                           ; Number of cases is 1, Range of values is 0 to 0
  3367                           ; switch strategies available:
  3368                           ; Name         Instructions Cycles
  3369                           ; simple_byte            4     3 (average)
  3370                           ;	Chosen strategy is simple_byte
  3371   010EEE  5046               	movf	(??_vfpfcnvrt+1)^(0+1280),w,c
  3372   010EF0  0A00               	xorlw	0	; case 0
  3373   010EF2  B4D8               	btfsc	status,2,c
  3374   010EF4  EF7E  F087         	goto	l7503
  3375   010EF8  EF89  F087         	goto	l5681
  3376   010EFC                     l7503:
  3377                           
  3378                           ; Switch size 1, requested type "simple"
  3379                           ; Number of cases is 2, Range of values is 76 to 108
  3380                           ; switch strategies available:
  3381                           ; Name         Instructions Cycles
  3382                           ; simple_byte            7     4 (average)
  3383                           ;	Chosen strategy is simple_byte
  3384   010EFC  5045               	movf	??_vfpfcnvrt^(0+1280),w,c
  3385   010EFE  0A4C               	xorlw	76	; case 76
  3386   010F00  B4D8               	btfsc	status,2,c
  3387   010F02  EF5A  F087         	goto	l5675
  3388   010F06  0A20               	xorlw	32	; case 108
  3389   010F08  B4D8               	btfsc	status,2,c
  3390   010F0A  EF40  F087         	goto	l5673
  3391   010F0E  EF89  F087         	goto	l5681
  3392   010F12                     l5681:
  3393                           
  3394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3395   010F12  0E01               	movlw	1
  3396   010F14  2453               	addwf	vfpfcnvrt@cp^(0+1280),w,c
  3397   010F16  6E45               	movwf	??_vfpfcnvrt^(0+1280),c
  3398   010F18  0E00               	movlw	0
  3399   010F1A  2054               	addwfc	(vfpfcnvrt@cp+1)^(0+1280),w,c
  3400   010F1C  6E46               	movwf	(??_vfpfcnvrt+1)^(0+1280),c
  3401   010F1E  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3402   010F22  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3403   010F26  C545  F4DE         	movff	??_vfpfcnvrt,postinc2
  3404   010F2A  C546  F4DD         	movff	??_vfpfcnvrt+1,postdec2
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3407   010F2E  EFB2  F087         	goto	l5689
  3408   010F32                     l5683:
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3411   010F32  C53F  F52E         	movff	vfpfcnvrt@fp,efgtoa@fp
  3412   010F36  C540  F52F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3413   010F3A  C54A  F530         	movff	vfpfcnvrt@convarg,efgtoa@f
  3414   010F3E  C54B  F531         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3415   010F42  C54C  F532         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3416   010F46  C54D  F533         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3417   010F4A  C553  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3418   010F4E  C554  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  3419   010F52                     	if	0	;tblptru may be non-zero
  3420   010F52                     	endif
  3421   010F52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3422   010F52  0E00               	movlw	low (__mediumconst shr (0+16))
  3423   010F54  6EF8               	movwf	tblptru,c
  3424   010F56                     	endif
  3425   010F56  0008               	tblrd		*
  3426   010F58  C4F5 F534          	movff	tablat,efgtoa@c
  3427   010F5C  EC00  F080         	call	_efgtoa	;wreg free
  3428   010F60  EFE9  F087         	goto	l1393
  3429   010F64                     l5689:
  3430   010F64  C553  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3431   010F68  C554  F4F7         	movff	vfpfcnvrt@cp+1,tblptrh
  3432   010F6C                     	if	0	;tblptru may be non-zero
  3433   010F6C                     	endif
  3434   010F6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3435   010F6C  0E00               	movlw	low (__mediumconst shr (0+16))
  3436   010F6E  6EF8               	movwf	tblptru,c
  3437   010F70                     	endif
  3438   010F70  0008               	tblrd		*
  3439   010F72  50F5               	movf	tablat,w,c
  3440   010F74  6E45               	movwf	??_vfpfcnvrt^(0+1280),c
  3441   010F76  6A46               	clrf	(??_vfpfcnvrt+1)^(0+1280),c
  3442                           
  3443                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3444                           ; Switch size 1, requested type "simple"
  3445                           ; Number of cases is 1, Range of values is 0 to 0
  3446                           ; switch strategies available:
  3447                           ; Name         Instructions Cycles
  3448                           ; simple_byte            4     3 (average)
  3449                           ;	Chosen strategy is simple_byte
  3450   010F78  5046               	movf	(??_vfpfcnvrt+1)^(0+1280),w,c
  3451   010F7A  0A00               	xorlw	0	; case 0
  3452   010F7C  B4D8               	btfsc	status,2,c
  3453   010F7E  EFC3  F087         	goto	l7505
  3454   010F82  EFCA  F087         	goto	l5691
  3455   010F86                     l7505:
  3456                           
  3457                           ; Switch size 1, requested type "simple"
  3458                           ; Number of cases is 1, Range of values is 102 to 102
  3459                           ; switch strategies available:
  3460                           ; Name         Instructions Cycles
  3461                           ; simple_byte            4     3 (average)
  3462                           ;	Chosen strategy is simple_byte
  3463   010F86  5045               	movf	??_vfpfcnvrt^(0+1280),w,c
  3464   010F88  0A66               	xorlw	102	; case 102
  3465   010F8A  B4D8               	btfsc	status,2,c
  3466   010F8C  EF99  F087         	goto	l5683
  3467   010F90  EFCA  F087         	goto	l5691
  3468   010F94                     l5691:
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3471   010F94  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3472   010F98  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3473   010F9C  2ADE               	incf	postinc2,f,c
  3474   010F9E  0E00               	movlw	0
  3475   010FA0  22DD               	addwfc	postdec2,f,c
  3476   010FA2  EFE9  F087         	goto	l1393
  3477   010FA6                     l5695:
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3480   010FA6  C541  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3481   010FAA  C542  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3482   010FAE  C4DE F4F6          	movff	postinc2,tblptrl
  3483   010FB2  C4DD F4F7          	movff	postdec2,tblptrh
  3484   010FB6                     	if	0	;tblptru may be non-zero
  3485   010FB6                     	endif
  3486   010FB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3487   010FB6  0E00               	movlw	low (__mediumconst shr (0+16))
  3488   010FB8  6EF8               	movwf	tblptru,c
  3489   010FBA                     	endif
  3490   010FBA  0008               	tblrd		*
  3491   010FBC  50F5               	movf	tablat,w,c
  3492   010FBE  6E01               	movwf	fputc@c^(0+1280),c
  3493   010FC0  6A02               	clrf	(fputc@c+1)^(0+1280),c
  3494   010FC2  C53F  F503         	movff	vfpfcnvrt@fp,fputc@fp
  3495   010FC6  C540  F504         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3496   010FCA  EC89  F09F         	call	_fputc	;wreg free
  3497   010FCE  EFCA  F087         	goto	l5691
  3498   010FD2                     l1393:
  3499   010FD2  0012               	return		;funcret
  3500   010FD4                     __end_of_vfpfcnvrt:
  3501                           	callstack 0
  3502                           
  3503 ;; *************** function _efgtoa *****************
  3504 ;; Defined at:
  3505 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  3508 ;;		 -> sprintf@f(11), 
  3509 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  3510 ;;  c               1   51[COMRAM] unsigned char 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  u               4   40[BANK5 ] struct flui
  3513 ;;  g               4   34[BANK5 ] struct flui
  3514 ;;  l               4   27[BANK5 ] struct flui
  3515 ;;  h               4   23[BANK5 ] struct flui
  3516 ;;  ou              4   19[BANK5 ] struct flui
  3517 ;;  n               2   38[BANK5 ] int 
  3518 ;;  i               2   31[BANK5 ] int 
  3519 ;;  w               2   17[BANK5 ] int 
  3520 ;;  e               2   15[BANK5 ] int 
  3521 ;;  m               2   13[BANK5 ] int 
  3522 ;;  d               2   11[BANK5 ] int 
  3523 ;;  t               2    4[BANK5 ] int 
  3524 ;;  p               2    2[BANK5 ] int 
  3525 ;;  ne              2    0[BANK5 ] int 
  3526 ;;  sign            1   33[BANK5 ] unsigned char 
  3527 ;;  nmode           1   10[BANK5 ] unsigned char 
  3528 ;;  mode            1    9[BANK5 ] unsigned char 
  3529 ;;  pp              1    8[BANK5 ] unsigned char 
  3530 ;;  esign           1    0        unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3540 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3541 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3543 ;;      Totals:         9      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3544 ;;Total ram usage:       53 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 4
  3547 ;; This function calls:
  3548 ;;		___fladd
  3549 ;;		___fldiv
  3550 ;;		___fleq
  3551 ;;		___flge
  3552 ;;		___flmul
  3553 ;;		___flneg
  3554 ;;		___flsub
  3555 ;;		___fltol
  3556 ;;		___fpclassifyf
  3557 ;;		_floorf
  3558 ;;		_labs
  3559 ;;		_memcpy
  3560 ;;		_pad
  3561 ;;		_strcpy
  3562 ;; This function is called by:
  3563 ;;		_vfpfcnvrt
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           
  3567                           	psect	text11
  3568   010000                     __ptext11:
  3569                           	callstack 0
  3570   010000                     _efgtoa:
  3571                           	callstack 118
  3572   010000                     
  3573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3574   010000  0E00               	movlw	0
  3575   010002  0105               	movlb	5	; () banked
  3576   010004  6F81               	movwf	efgtoa@sign& (0+255),b
  3577   010006                     
  3578                           ; BSR set to: 5
  3579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3580   010006  C530  F582         	movff	efgtoa@f,efgtoa@g
  3581   01000A  C531  F583         	movff	efgtoa@f+1,efgtoa@g+1
  3582   01000E  C532  F584         	movff	efgtoa@f+2,efgtoa@g+2
  3583   010012  C533  F585         	movff	efgtoa@f+3,efgtoa@g+3
  3584   010016                     
  3585                           ; BSR set to: 5
  3586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3587   010016  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3588   010018  EF12  F080         	goto	u5100
  3589   01001C  EF10  F080         	goto	u5101
  3590   010020                     u5101:
  3591   010020  EF26  F080         	goto	l5313
  3592   010024                     u5100:
  3593   010024                     
  3594                           ; BSR set to: 5
  3595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3596   010024  0E01               	movlw	1
  3597   010026  6F81               	movwf	efgtoa@sign& (0+255),b
  3598   010028                     
  3599                           ; BSR set to: 5
  3600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3601   010028  C582  F501         	movff	efgtoa@g,___flneg@f1
  3602   01002C  C583  F502         	movff	efgtoa@g+1,___flneg@f1+1
  3603   010030  C584  F503         	movff	efgtoa@g+2,___flneg@f1+2
  3604   010034  C585  F504         	movff	efgtoa@g+3,___flneg@f1+3
  3605   010038  ECB9  F0A4         	call	___flneg	;wreg free
  3606   01003C  C501  F582         	movff	?___flneg,efgtoa@g
  3607   010040  C502  F583         	movff	?___flneg+1,efgtoa@g+1
  3608   010044  C503  F584         	movff	?___flneg+2,efgtoa@g+2
  3609   010048  C504  F585         	movff	?___flneg+3,efgtoa@g+3
  3610   01004C                     l5313:
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3613   01004C  0E00               	movlw	0
  3614   01004E  0105               	movlb	5	; () banked
  3615   010050  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3616   010052  0E00               	movlw	0
  3617   010054  6F86               	movwf	efgtoa@n& (0+255),b
  3618   010056                     
  3619                           ; BSR set to: 5
  3620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3621   010056  C5D9  F571         	movff	_width,efgtoa@w
  3622   01005A  C5DA  F572         	movff	_width+1,efgtoa@w+1
  3623   01005E                     
  3624                           ; BSR set to: 5
  3625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3626   01005E  5181               	movf	efgtoa@sign& (0+255),w,b
  3627   010060  B4D8               	btfsc	status,2,c
  3628   010062  EF35  F080         	goto	u5111
  3629   010066  EF37  F080         	goto	u5110
  3630   01006A                     u5111:
  3631   01006A  EF4B  F080         	goto	l5327
  3632   01006E                     u5110:
  3633   01006E                     
  3634                           ; BSR set to: 5
  3635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3636   01006E  5181               	movf	efgtoa@sign& (0+255),w,b
  3637   010070  A4D8               	btfss	status,2,c
  3638   010072  EF3D  F080         	goto	u5121
  3639   010076  EF3F  F080         	goto	u5120
  3640   01007A                     u5121:
  3641   01007A  EF45  F080         	goto	l5323
  3642   01007E                     u5120:
  3643   01007E                     
  3644                           ; BSR set to: 5
  3645   01007E  0E00               	movlw	0
  3646   010080  6F67               	movwf	(_efgtoa$1510+1)& (0+255),b
  3647   010082  0E2B               	movlw	43
  3648   010084  6F66               	movwf	_efgtoa$1510& (0+255),b
  3649   010086  EF49  F080         	goto	l5325
  3650   01008A                     l5323:
  3651                           
  3652                           ; BSR set to: 5
  3653   01008A  0E00               	movlw	0
  3654   01008C  6F67               	movwf	(_efgtoa$1510+1)& (0+255),b
  3655   01008E  0E2D               	movlw	45
  3656   010090  6F66               	movwf	_efgtoa$1510& (0+255),b
  3657   010092                     l5325:
  3658                           
  3659                           ; BSR set to: 5
  3660   010092  C566  F581         	movff	_efgtoa$1510,efgtoa@sign
  3661   010096                     l5327:
  3662                           
  3663                           ; BSR set to: 5
  3664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3665   010096  C582  F501         	movff	efgtoa@g,___fpclassifyf@x
  3666   01009A  C583  F502         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3667   01009E  C584  F503         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3668   0100A2  C585  F504         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3669   0100A6  EC9E  F09E         	call	___fpclassifyf	;wreg free
  3670   0100AA  0401               	decf	?___fpclassifyf^(0+1280),w,c
  3671   0100AC  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
  3672   0100AE  A4D8               	btfss	status,2,c
  3673   0100B0  EF5C  F080         	goto	u5131
  3674   0100B4  EF5E  F080         	goto	u5130
  3675   0100B8                     u5131:
  3676   0100B8  EF91  F080         	goto	l5345
  3677   0100BC                     u5130:
  3678   0100BC                     
  3679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3680   0100BC  0105               	movlb	5	; () banked
  3681   0100BE  5181               	movf	efgtoa@sign& (0+255),w,b
  3682   0100C0  B4D8               	btfsc	status,2,c
  3683   0100C2  EF65  F080         	goto	u5141
  3684   0100C6  EF67  F080         	goto	u5140
  3685   0100CA                     u5141:
  3686   0100CA  EF70  F080         	goto	l5337
  3687   0100CE                     u5140:
  3688   0100CE                     
  3689                           ; BSR set to: 5
  3690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3691   0100CE  C581  F600         	movff	efgtoa@sign,_dbuf
  3692   0100D2                     
  3693                           ; BSR set to: 5
  3694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3695   0100D2  0771               	decf	efgtoa@w& (0+255),f,b
  3696   0100D4  A0D8               	btfss	status,0,c
  3697   0100D6  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3698   0100D8                     
  3699                           ; BSR set to: 5
  3700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3701   0100D8  0E00               	movlw	0
  3702   0100DA  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3703   0100DC  0E01               	movlw	1
  3704   0100DE  6F86               	movwf	efgtoa@n& (0+255),b
  3705   0100E0                     l5337:
  3706                           
  3707                           ; BSR set to: 5
  3708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3709   0100E0  0E00               	movlw	low _dbuf
  3710   0100E2  2586               	addwf	efgtoa@n& (0+255),w,b
  3711   0100E4  6E01               	movwf	strcpy@dest^(0+1280),c
  3712   0100E6  0E06               	movlw	high _dbuf
  3713   0100E8  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3714   0100EA  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
  3715   0100EC  0EF3               	movlw	low STR_22
  3716   0100EE  6E03               	movwf	strcpy@src^(0+1280),c
  3717   0100F0  0EFF               	movlw	high STR_22
  3718   0100F2  6E04               	movwf	(strcpy@src+1)^(0+1280),c
  3719   0100F4  EC35  F0A4         	call	_strcpy	;wreg free
  3720   0100F8                     l5339:
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3723   0100F8  0105               	movlb	5	; () banked
  3724   0100FA  0EFD               	movlw	253
  3725   0100FC  2771               	addwf	efgtoa@w& (0+255),f,b
  3726   0100FE  0EFF               	movlw	255
  3727   010100  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3728   010102                     
  3729                           ; BSR set to: 5
  3730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3731   010102  C52E  F511         	movff	efgtoa@fp,pad@fp
  3732   010106  C52F  F512         	movff	efgtoa@fp+1,pad@fp+1
  3733   01010A  0E00               	movlw	low _dbuf
  3734   01010C  6E13               	movwf	pad@buf^(0+1280),c
  3735   01010E  0E06               	movlw	high _dbuf
  3736   010110  6E14               	movwf	(pad@buf+1)^(0+1280),c
  3737   010112  C571  F515         	movff	efgtoa@w,pad@p
  3738   010116  C572  F516         	movff	efgtoa@w+1,pad@p+1
  3739   01011A  ECEE  F09F         	call	_pad	;wreg free
  3740   01011E  EF31  F085         	goto	l1316
  3741   010122                     l5345:
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3744   010122  C582  F501         	movff	efgtoa@g,___fpclassifyf@x
  3745   010126  C583  F502         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3746   01012A  C584  F503         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3747   01012E  C585  F504         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3748   010132  EC9E  F09E         	call	___fpclassifyf	;wreg free
  3749   010136  5001               	movf	?___fpclassifyf^(0+1280),w,c
  3750   010138  1002               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
  3751   01013A  A4D8               	btfss	status,2,c
  3752   01013C  EFA2  F080         	goto	u5151
  3753   010140  EFA4  F080         	goto	u5150
  3754   010144                     u5151:
  3755   010144  EFC4  F080         	goto	l5363
  3756   010148                     u5150:
  3757   010148                     
  3758                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3759   010148  0105               	movlb	5	; () banked
  3760   01014A  5181               	movf	efgtoa@sign& (0+255),w,b
  3761   01014C  B4D8               	btfsc	status,2,c
  3762   01014E  EFAB  F080         	goto	u5161
  3763   010152  EFAD  F080         	goto	u5160
  3764   010156                     u5161:
  3765   010156  EFB6  F080         	goto	l5355
  3766   01015A                     u5160:
  3767   01015A                     
  3768                           ; BSR set to: 5
  3769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3770   01015A  C581  F600         	movff	efgtoa@sign,_dbuf
  3771   01015E                     
  3772                           ; BSR set to: 5
  3773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3774   01015E  0771               	decf	efgtoa@w& (0+255),f,b
  3775   010160  A0D8               	btfss	status,0,c
  3776   010162  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3777   010164                     
  3778                           ; BSR set to: 5
  3779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3780   010164  0E00               	movlw	0
  3781   010166  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3782   010168  0E01               	movlw	1
  3783   01016A  6F86               	movwf	efgtoa@n& (0+255),b
  3784   01016C                     l5355:
  3785                           
  3786                           ; BSR set to: 5
  3787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3788   01016C  0E00               	movlw	low _dbuf
  3789   01016E  2586               	addwf	efgtoa@n& (0+255),w,b
  3790   010170  6E01               	movwf	strcpy@dest^(0+1280),c
  3791   010172  0E06               	movlw	high _dbuf
  3792   010174  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3793   010176  6E02               	movwf	(strcpy@dest+1)^(0+1280),c
  3794   010178  0EF7               	movlw	low STR_25
  3795   01017A  6E03               	movwf	strcpy@src^(0+1280),c
  3796   01017C  0EFF               	movlw	high STR_25
  3797   01017E  6E04               	movwf	(strcpy@src+1)^(0+1280),c
  3798   010180  EC35  F0A4         	call	_strcpy	;wreg free
  3799   010184  EF7C  F080         	goto	l5339
  3800   010188                     l5363:
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3803   010188  0E00               	movlw	0
  3804   01018A  0105               	movlb	5	; () banked
  3805   01018C  6F88               	movwf	efgtoa@u& (0+255),b
  3806   01018E  0E00               	movlw	0
  3807   010190  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3808   010192  0E80               	movlw	128
  3809   010194  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3810   010196  0E3F               	movlw	63
  3811   010198  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3812                           
  3813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3814   01019A  0E00               	movlw	0
  3815   01019C  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3816   01019E  0E00               	movlw	0
  3817   0101A0  6F6F               	movwf	efgtoa@e& (0+255),b
  3818   0101A2                     
  3819                           ; BSR set to: 5
  3820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3821   0101A2  C582  F501         	movff	efgtoa@g,___fleq@ff1
  3822   0101A6  C583  F502         	movff	efgtoa@g+1,___fleq@ff1+1
  3823   0101AA  C584  F503         	movff	efgtoa@g+2,___fleq@ff1+2
  3824   0101AE  C585  F504         	movff	efgtoa@g+3,___fleq@ff1+3
  3825   0101B2  0E00               	movlw	0
  3826   0101B4  6E05               	movwf	___fleq@ff2^(0+1280),c
  3827   0101B6  0E00               	movlw	0
  3828   0101B8  6E06               	movwf	(___fleq@ff2+1)^(0+1280),c
  3829   0101BA  0E00               	movlw	0
  3830   0101BC  6E07               	movwf	(___fleq@ff2+2)^(0+1280),c
  3831   0101BE  0E00               	movlw	0
  3832   0101C0  6E08               	movwf	(___fleq@ff2+3)^(0+1280),c
  3833   0101C2  EC45  F0A0         	call	___fleq	;wreg free
  3834   0101C6  B0D8               	btfsc	status,0,c
  3835   0101C8  EFE8  F080         	goto	u5171
  3836   0101CC  EFEA  F080         	goto	u5170
  3837   0101D0                     u5171:
  3838   0101D0  EFC9  F081         	goto	l1319
  3839   0101D4                     u5170:
  3840   0101D4  EFF7  F080         	goto	l5371
  3841   0101D8                     l1321:
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3844   0101D8  C573  F588         	movff	efgtoa@ou,efgtoa@u
  3845   0101DC  C574  F589         	movff	efgtoa@ou+1,efgtoa@u+1
  3846   0101E0  C575  F58A         	movff	efgtoa@ou+2,efgtoa@u+2
  3847   0101E4  C576  F58B         	movff	efgtoa@ou+3,efgtoa@u+3
  3848   0101E8                     
  3849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3850   0101E8  0105               	movlb	5	; () banked
  3851   0101EA  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3852   0101EC  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3853   0101EE                     l5371:
  3854                           
  3855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3856   0101EE  C588  F501         	movff	efgtoa@u,___flmul@b
  3857   0101F2  C589  F502         	movff	efgtoa@u+1,___flmul@b+1
  3858   0101F6  C58A  F503         	movff	efgtoa@u+2,___flmul@b+2
  3859   0101FA  C58B  F504         	movff	efgtoa@u+3,___flmul@b+3
  3860   0101FE  0E00               	movlw	0
  3861   010200  6E05               	movwf	___flmul@a^(0+1280),c
  3862   010202  0E00               	movlw	0
  3863   010204  6E06               	movwf	(___flmul@a+1)^(0+1280),c
  3864   010206  0E20               	movlw	32
  3865   010208  6E07               	movwf	(___flmul@a+2)^(0+1280),c
  3866   01020A  0E41               	movlw	65
  3867   01020C  6E08               	movwf	(___flmul@a+3)^(0+1280),c
  3868   01020E  EC4A  F08A         	call	___flmul	;wreg free
  3869   010212  C501  F573         	movff	?___flmul,efgtoa@ou
  3870   010216  C502  F574         	movff	?___flmul+1,efgtoa@ou+1
  3871   01021A  C503  F575         	movff	?___flmul+2,efgtoa@ou+2
  3872   01021E  C504  F576         	movff	?___flmul+3,efgtoa@ou+3
  3873   010222  0105               	movlb	5	; () banked
  3874   010224  5173               	movf	efgtoa@ou& (0+255),w,b
  3875   010226  5D82               	subwf	efgtoa@g& (0+255),w,b
  3876   010228  6E01               	movwf	labs@a^(0+1280),c
  3877   01022A  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  3878   01022C  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3879   01022E  6E02               	movwf	(labs@a+1)^(0+1280),c
  3880   010230  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  3881   010232  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3882   010234  6E03               	movwf	(labs@a+2)^(0+1280),c
  3883   010236  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  3884   010238  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3885   01023A  6E04               	movwf	(labs@a+3)^(0+1280),c
  3886   01023C  EC75  F0A2         	call	_labs	;wreg free
  3887   010240  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
  3888   010242  EF2E  F081         	goto	u5181
  3889   010246  5004               	movf	(?_labs+3)^(0+1280),w,c
  3890   010248  1003               	iorwf	(?_labs+2)^(0+1280),w,c
  3891   01024A  1002               	iorwf	(?_labs+1)^(0+1280),w,c
  3892   01024C  E109               	bnz	u5180
  3893   01024E  0E02               	movlw	2
  3894   010250  5C01               	subwf	?_labs^(0+1280),w,c
  3895   010252  A0D8               	btfss	status,0,c
  3896   010254  EF2E  F081         	goto	u5181
  3897   010258  EF30  F081         	goto	u5180
  3898   01025C                     u5181:
  3899   01025C  EFEC  F080         	goto	l1321
  3900   010260                     u5180:
  3901   010260  C573  F51A         	movff	efgtoa@ou,___flge@ff1
  3902   010264  C574  F51B         	movff	efgtoa@ou+1,___flge@ff1+1
  3903   010268  C575  F51C         	movff	efgtoa@ou+2,___flge@ff1+2
  3904   01026C  C576  F51D         	movff	efgtoa@ou+3,___flge@ff1+3
  3905   010270  C582  F51E         	movff	efgtoa@g,___flge@ff2
  3906   010274  C583  F51F         	movff	efgtoa@g+1,___flge@ff2+1
  3907   010278  C584  F520         	movff	efgtoa@g+2,___flge@ff2+2
  3908   01027C  C585  F521         	movff	efgtoa@g+3,___flge@ff2+3
  3909   010280  EC1C  F09E         	call	___flge	;wreg free
  3910   010284  A0D8               	btfss	status,0,c
  3911   010286  EF47  F081         	goto	u5191
  3912   01028A  EF49  F081         	goto	u5190
  3913   01028E                     u5191:
  3914   01028E  EFEC  F080         	goto	l1321
  3915   010292                     u5190:
  3916   010292                     
  3917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3918   010292  0105               	movlb	5	; () banked
  3919   010294  5188               	movf	efgtoa@u& (0+255),w,b
  3920   010296  5D82               	subwf	efgtoa@g& (0+255),w,b
  3921   010298  6E01               	movwf	labs@a^(0+1280),c
  3922   01029A  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3923   01029C  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3924   01029E  6E02               	movwf	(labs@a+1)^(0+1280),c
  3925   0102A0  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3926   0102A2  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3927   0102A4  6E03               	movwf	(labs@a+2)^(0+1280),c
  3928   0102A6  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3929   0102A8  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3930   0102AA  6E04               	movwf	(labs@a+3)^(0+1280),c
  3931   0102AC  EC75  F0A2         	call	_labs	;wreg free
  3932   0102B0  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
  3933   0102B2  EF68  F081         	goto	u5200
  3934   0102B6  5004               	movf	(?_labs+3)^(0+1280),w,c
  3935   0102B8  1003               	iorwf	(?_labs+2)^(0+1280),w,c
  3936   0102BA  1002               	iorwf	(?_labs+1)^(0+1280),w,c
  3937   0102BC  E107               	bnz	u5201
  3938   0102BE  0E02               	movlw	2
  3939   0102C0  5C01               	subwf	?_labs^(0+1280),w,c
  3940   0102C2  B0D8               	btfsc	status,0,c
  3941   0102C4  EF66  F081         	goto	u5201
  3942   0102C8  EF68  F081         	goto	u5200
  3943   0102CC                     u5201:
  3944   0102CC  EFB0  F081         	goto	l5389
  3945   0102D0                     u5200:
  3946   0102D0                     l5379:
  3947                           
  3948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3949   0102D0  C588  F582         	movff	efgtoa@u,efgtoa@g
  3950   0102D4  C589  F583         	movff	efgtoa@u+1,efgtoa@g+1
  3951   0102D8  C58A  F584         	movff	efgtoa@u+2,efgtoa@g+2
  3952   0102DC  C58B  F585         	movff	efgtoa@u+3,efgtoa@g+3
  3953                           
  3954                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3955   0102E0  EFC9  F081         	goto	l1319
  3956   0102E4                     l5381:
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3959   0102E4  C588  F501         	movff	efgtoa@u,___fldiv@b
  3960   0102E8  C589  F502         	movff	efgtoa@u+1,___fldiv@b+1
  3961   0102EC  C58A  F503         	movff	efgtoa@u+2,___fldiv@b+2
  3962   0102F0  C58B  F504         	movff	efgtoa@u+3,___fldiv@b+3
  3963   0102F4  0E00               	movlw	0
  3964   0102F6  6E05               	movwf	___fldiv@a^(0+1280),c
  3965   0102F8  0E00               	movlw	0
  3966   0102FA  6E06               	movwf	(___fldiv@a+1)^(0+1280),c
  3967   0102FC  0E20               	movlw	32
  3968   0102FE  6E07               	movwf	(___fldiv@a+2)^(0+1280),c
  3969   010300  0E41               	movlw	65
  3970   010302  6E08               	movwf	(___fldiv@a+3)^(0+1280),c
  3971   010304  EC53  F08E         	call	___fldiv	;wreg free
  3972   010308  C501  F588         	movff	?___fldiv,efgtoa@u
  3973   01030C  C502  F589         	movff	?___fldiv+1,efgtoa@u+1
  3974   010310  C503  F58A         	movff	?___fldiv+2,efgtoa@u+2
  3975   010314  C504  F58B         	movff	?___fldiv+3,efgtoa@u+3
  3976   010318                     
  3977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3978   010318  0105               	movlb	5	; () banked
  3979   01031A  076F               	decf	efgtoa@e& (0+255),f,b
  3980   01031C  A0D8               	btfss	status,0,c
  3981   01031E  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3982   010320                     
  3983                           ; BSR set to: 5
  3984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3985   010320  5188               	movf	efgtoa@u& (0+255),w,b
  3986   010322  5D82               	subwf	efgtoa@g& (0+255),w,b
  3987   010324  6E01               	movwf	labs@a^(0+1280),c
  3988   010326  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3989   010328  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3990   01032A  6E02               	movwf	(labs@a+1)^(0+1280),c
  3991   01032C  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3992   01032E  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3993   010330  6E03               	movwf	(labs@a+2)^(0+1280),c
  3994   010332  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3995   010334  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3996   010336  6E04               	movwf	(labs@a+3)^(0+1280),c
  3997   010338  EC75  F0A2         	call	_labs	;wreg free
  3998   01033C  BE04               	btfsc	(?_labs+3)^(0+1280),7,c
  3999   01033E  EFAE  F081         	goto	u5210
  4000   010342  5004               	movf	(?_labs+3)^(0+1280),w,c
  4001   010344  1003               	iorwf	(?_labs+2)^(0+1280),w,c
  4002   010346  1002               	iorwf	(?_labs+1)^(0+1280),w,c
  4003   010348  E107               	bnz	u5211
  4004   01034A  0E02               	movlw	2
  4005   01034C  5C01               	subwf	?_labs^(0+1280),w,c
  4006   01034E  B0D8               	btfsc	status,0,c
  4007   010350  EFAC  F081         	goto	u5211
  4008   010354  EFAE  F081         	goto	u5210
  4009   010358                     u5211:
  4010   010358  EFB0  F081         	goto	l5389
  4011   01035C                     u5210:
  4012   01035C  EF68  F081         	goto	l5379
  4013   010360                     l5389:
  4014                           
  4015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  4016   010360  C582  F51A         	movff	efgtoa@g,___flge@ff1
  4017   010364  C583  F51B         	movff	efgtoa@g+1,___flge@ff1+1
  4018   010368  C584  F51C         	movff	efgtoa@g+2,___flge@ff1+2
  4019   01036C  C585  F51D         	movff	efgtoa@g+3,___flge@ff1+3
  4020   010370  C588  F51E         	movff	efgtoa@u,___flge@ff2
  4021   010374  C589  F51F         	movff	efgtoa@u+1,___flge@ff2+1
  4022   010378  C58A  F520         	movff	efgtoa@u+2,___flge@ff2+2
  4023   01037C  C58B  F521         	movff	efgtoa@u+3,___flge@ff2+3
  4024   010380  EC1C  F09E         	call	___flge	;wreg free
  4025   010384  A0D8               	btfss	status,0,c
  4026   010386  EFC7  F081         	goto	u5221
  4027   01038A  EFC9  F081         	goto	u5220
  4028   01038E                     u5221:
  4029   01038E  EF72  F081         	goto	l5381
  4030   010392                     u5220:
  4031   010392                     l1319:
  4032                           
  4033                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  4034   010392  C534  F569         	movff	efgtoa@c,efgtoa@mode
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  4037   010396  C569  F56A         	movff	efgtoa@mode,efgtoa@nmode
  4038   01039A                     
  4039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  4040   01039A  0105               	movlb	5	; () banked
  4041   01039C  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  4042   01039E  EFD3  F081         	goto	u5231
  4043   0103A2  EFD5  F081         	goto	u5230
  4044   0103A6                     u5231:
  4045   0103A6  EFDB  F081         	goto	l5395
  4046   0103AA                     u5230:
  4047   0103AA                     
  4048                           ; BSR set to: 5
  4049   0103AA  C5DB  F562         	movff	_prec,efgtoa@p
  4050   0103AE  C5DC  F563         	movff	_prec+1,efgtoa@p+1
  4051   0103B2  EFDF  F081         	goto	l5397
  4052   0103B6                     l5395:
  4053                           
  4054                           ; BSR set to: 5
  4055   0103B6  0E00               	movlw	0
  4056   0103B8  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  4057   0103BA  0E06               	movlw	6
  4058   0103BC  6F62               	movwf	efgtoa@p& (0+255),b
  4059   0103BE                     l5397:
  4060                           
  4061                           ; BSR set to: 5
  4062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  4063   0103BE  C562  F56D         	movff	efgtoa@p,efgtoa@m
  4064   0103C2  C563  F56E         	movff	efgtoa@p+1,efgtoa@m+1
  4065   0103C6                     
  4066                           ; BSR set to: 5
  4067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  4068   0103C6  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  4069   0103C8  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  4070   0103CA                     
  4071                           ; BSR set to: 5
  4072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4073   0103CA  0E66               	movlw	102
  4074   0103CC  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  4075   0103CE  A4D8               	btfss	status,2,c
  4076   0103D0  EFEC  F081         	goto	u5241
  4077   0103D4  EFEE  F081         	goto	u5240
  4078   0103D8                     u5241:
  4079   0103D8  EF0E  F082         	goto	l5411
  4080   0103DC                     u5240:
  4081   0103DC                     
  4082                           ; BSR set to: 5
  4083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4084   0103DC  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4085   0103DE  EFF5  F081         	goto	u5250
  4086   0103E2  EFF3  F081         	goto	u5251
  4087   0103E6                     u5251:
  4088   0103E6  EF01  F082         	goto	l5407
  4089   0103EA                     u5250:
  4090   0103EA                     
  4091                           ; BSR set to: 5
  4092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4093   0103EA  0E00               	movlw	0
  4094   0103EC  6F88               	movwf	efgtoa@u& (0+255),b
  4095   0103EE  0E00               	movlw	0
  4096   0103F0  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  4097   0103F2  0E80               	movlw	128
  4098   0103F4  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  4099   0103F6  0E3F               	movlw	63
  4100   0103F8  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  4101                           
  4102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4103   0103FA  0E00               	movlw	0
  4104   0103FC  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  4105   0103FE  0E00               	movlw	0
  4106   010400  6F6F               	movwf	efgtoa@e& (0+255),b
  4107   010402                     l5407:
  4108                           
  4109                           ; BSR set to: 5
  4110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4111   010402  0E67               	movlw	103
  4112   010404  1969               	xorwf	efgtoa@mode& (0+255),w,b
  4113   010406  B4D8               	btfsc	status,2,c
  4114   010408  EF08  F082         	goto	u5261
  4115   01040C  EF0A  F082         	goto	u5260
  4116   010410                     u5261:
  4117   010410  EF0E  F082         	goto	l5411
  4118   010414                     u5260:
  4119   010414                     
  4120                           ; BSR set to: 5
  4121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4122   010414  516F               	movf	efgtoa@e& (0+255),w,b
  4123   010416  276D               	addwf	efgtoa@m& (0+255),f,b
  4124   010418  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  4125   01041A  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4126   01041C                     l5411:
  4127                           
  4128                           ; BSR set to: 5
  4129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4130   01041C  0E00               	movlw	0
  4131   01041E  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  4132   010420  0E00               	movlw	0
  4133   010422  6F7F               	movwf	efgtoa@i& (0+255),b
  4134   010424                     
  4135                           ; BSR set to: 5
  4136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4137   010424  C582  F577         	movff	efgtoa@g,efgtoa@h
  4138   010428  C583  F578         	movff	efgtoa@g+1,efgtoa@h+1
  4139   01042C  C584  F579         	movff	efgtoa@g+2,efgtoa@h+2
  4140   010430  C585  F57A         	movff	efgtoa@g+3,efgtoa@h+3
  4141   010434                     
  4142                           ; BSR set to: 5
  4143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4144   010434  C588  F573         	movff	efgtoa@u,efgtoa@ou
  4145   010438  C589  F574         	movff	efgtoa@u+1,efgtoa@ou+1
  4146   01043C  C58A  F575         	movff	efgtoa@u+2,efgtoa@ou+2
  4147   010440  C58B  F576         	movff	efgtoa@u+3,efgtoa@ou+3
  4148                           
  4149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4150   010444  EF9F  F082         	goto	l5425
  4151   010448                     l5417:
  4152                           
  4153                           ; BSR set to: 5
  4154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4155   010448  C577  F501         	movff	efgtoa@h,___fldiv@b
  4156   01044C  C578  F502         	movff	efgtoa@h+1,___fldiv@b+1
  4157   010450  C579  F503         	movff	efgtoa@h+2,___fldiv@b+2
  4158   010454  C57A  F504         	movff	efgtoa@h+3,___fldiv@b+3
  4159   010458  C588  F505         	movff	efgtoa@u,___fldiv@a
  4160   01045C  C589  F506         	movff	efgtoa@u+1,___fldiv@a+1
  4161   010460  C58A  F507         	movff	efgtoa@u+2,___fldiv@a+2
  4162   010464  C58B  F508         	movff	efgtoa@u+3,___fldiv@a+3
  4163   010468  EC53  F08E         	call	___fldiv	;wreg free
  4164   01046C  C501  F51A         	movff	?___fldiv,floorf@x
  4165   010470  C502  F51B         	movff	?___fldiv+1,floorf@x+1
  4166   010474  C503  F51C         	movff	?___fldiv+2,floorf@x+2
  4167   010478  C504  F51D         	movff	?___fldiv+3,floorf@x+3
  4168   01047C  EC91  F099         	call	_floorf	;wreg free
  4169   010480  C51A  F57B         	movff	?_floorf,efgtoa@l
  4170   010484  C51B  F57C         	movff	?_floorf+1,efgtoa@l+1
  4171   010488  C51C  F57D         	movff	?_floorf+2,efgtoa@l+2
  4172   01048C  C51D  F57E         	movff	?_floorf+3,efgtoa@l+3
  4173                           
  4174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4175   010490  C57B  F501         	movff	efgtoa@l,___fltol@f1
  4176   010494  C57C  F502         	movff	efgtoa@l+1,___fltol@f1+1
  4177   010498  C57D  F503         	movff	efgtoa@l+2,___fltol@f1+2
  4178   01049C  C57E  F504         	movff	efgtoa@l+3,___fltol@f1+3
  4179   0104A0  EC99  F09D         	call	___fltol	;wreg free
  4180   0104A4  C501  F56B         	movff	?___fltol,efgtoa@d
  4181   0104A8  C502  F56C         	movff	?___fltol+1,efgtoa@d+1
  4182   0104AC                     
  4183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4184   0104AC  C577  F51A         	movff	efgtoa@h,___flsub@b
  4185   0104B0  C578  F51B         	movff	efgtoa@h+1,___flsub@b+1
  4186   0104B4  C579  F51C         	movff	efgtoa@h+2,___flsub@b+2
  4187   0104B8  C57A  F51D         	movff	efgtoa@h+3,___flsub@b+3
  4188   0104BC  C57B  F505         	movff	efgtoa@l,___flmul@a
  4189   0104C0  C57C  F506         	movff	efgtoa@l+1,___flmul@a+1
  4190   0104C4  C57D  F507         	movff	efgtoa@l+2,___flmul@a+2
  4191   0104C8  C57E  F508         	movff	efgtoa@l+3,___flmul@a+3
  4192   0104CC  C588  F501         	movff	efgtoa@u,___flmul@b
  4193   0104D0  C589  F502         	movff	efgtoa@u+1,___flmul@b+1
  4194   0104D4  C58A  F503         	movff	efgtoa@u+2,___flmul@b+2
  4195   0104D8  C58B  F504         	movff	efgtoa@u+3,___flmul@b+3
  4196   0104DC  EC4A  F08A         	call	___flmul	;wreg free
  4197   0104E0  C501  F51E         	movff	?___flmul,___flsub@a
  4198   0104E4  C502  F51F         	movff	?___flmul+1,___flsub@a+1
  4199   0104E8  C503  F520         	movff	?___flmul+2,___flsub@a+2
  4200   0104EC  C504  F521         	movff	?___flmul+3,___flsub@a+3
  4201   0104F0  ECCC  F0A3         	call	___flsub	;wreg free
  4202   0104F4  C51A  F577         	movff	?___flsub,efgtoa@h
  4203   0104F8  C51B  F578         	movff	?___flsub+1,efgtoa@h+1
  4204   0104FC  C51C  F579         	movff	?___flsub+2,efgtoa@h+2
  4205   010500  C51D  F57A         	movff	?___flsub+3,efgtoa@h+3
  4206   010504                     
  4207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4208   010504  C588  F501         	movff	efgtoa@u,___fldiv@b
  4209   010508  C589  F502         	movff	efgtoa@u+1,___fldiv@b+1
  4210   01050C  C58A  F503         	movff	efgtoa@u+2,___fldiv@b+2
  4211   010510  C58B  F504         	movff	efgtoa@u+3,___fldiv@b+3
  4212   010514  0E00               	movlw	0
  4213   010516  6E05               	movwf	___fldiv@a^(0+1280),c
  4214   010518  0E00               	movlw	0
  4215   01051A  6E06               	movwf	(___fldiv@a+1)^(0+1280),c
  4216   01051C  0E20               	movlw	32
  4217   01051E  6E07               	movwf	(___fldiv@a+2)^(0+1280),c
  4218   010520  0E41               	movlw	65
  4219   010522  6E08               	movwf	(___fldiv@a+3)^(0+1280),c
  4220   010524  EC53  F08E         	call	___fldiv	;wreg free
  4221   010528  C501  F588         	movff	?___fldiv,efgtoa@u
  4222   01052C  C502  F589         	movff	?___fldiv+1,efgtoa@u+1
  4223   010530  C503  F58A         	movff	?___fldiv+2,efgtoa@u+2
  4224   010534  C504  F58B         	movff	?___fldiv+3,efgtoa@u+3
  4225   010538                     
  4226                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4227   010538  0105               	movlb	5	; () banked
  4228   01053A  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  4229   01053C  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  4230   01053E                     l5425:
  4231                           
  4232                           ; BSR set to: 5
  4233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4234   01053E  516D               	movf	efgtoa@m& (0+255),w,b
  4235   010540  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4236   010542  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4237   010544  0A80               	xorlw	128
  4238   010546  6E35               	movwf	??_efgtoa^(0+1280),c
  4239   010548  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4240   01054A  0A80               	xorlw	128
  4241   01054C  5835               	subwfb	??_efgtoa^(0+1280),w,c
  4242   01054E  A0D8               	btfss	status,0,c
  4243   010550  EFAC  F082         	goto	u5271
  4244   010554  EFAE  F082         	goto	u5270
  4245   010558                     u5271:
  4246   010558  EF24  F082         	goto	l5417
  4247   01055C                     u5270:
  4248   01055C                     
  4249                           ; BSR set to: 5
  4250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4251   01055C  C588  F501         	movff	efgtoa@u,___flmul@b
  4252   010560  C589  F502         	movff	efgtoa@u+1,___flmul@b+1
  4253   010564  C58A  F503         	movff	efgtoa@u+2,___flmul@b+2
  4254   010568  C58B  F504         	movff	efgtoa@u+3,___flmul@b+3
  4255   01056C  0E00               	movlw	0
  4256   01056E  6E05               	movwf	___flmul@a^(0+1280),c
  4257   010570  0E00               	movlw	0
  4258   010572  6E06               	movwf	(___flmul@a+1)^(0+1280),c
  4259   010574  0EA0               	movlw	160
  4260   010576  6E07               	movwf	(___flmul@a+2)^(0+1280),c
  4261   010578  0E40               	movlw	64
  4262   01057A  6E08               	movwf	(___flmul@a+3)^(0+1280),c
  4263   01057C  EC4A  F08A         	call	___flmul	;wreg free
  4264   010580  C501  F57B         	movff	?___flmul,efgtoa@l
  4265   010584  C502  F57C         	movff	?___flmul+1,efgtoa@l+1
  4266   010588  C503  F57D         	movff	?___flmul+2,efgtoa@l+2
  4267   01058C  C504  F57E         	movff	?___flmul+3,efgtoa@l+3
  4268   010590                     
  4269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4270   010590  C577  F51A         	movff	efgtoa@h,___flge@ff1
  4271   010594  C578  F51B         	movff	efgtoa@h+1,___flge@ff1+1
  4272   010598  C579  F51C         	movff	efgtoa@h+2,___flge@ff1+2
  4273   01059C  C57A  F51D         	movff	efgtoa@h+3,___flge@ff1+3
  4274   0105A0  C57B  F51E         	movff	efgtoa@l,___flge@ff2
  4275   0105A4  C57C  F51F         	movff	efgtoa@l+1,___flge@ff2+1
  4276   0105A8  C57D  F520         	movff	efgtoa@l+2,___flge@ff2+2
  4277   0105AC  C57E  F521         	movff	efgtoa@l+3,___flge@ff2+3
  4278   0105B0  EC1C  F09E         	call	___flge	;wreg free
  4279   0105B4  B0D8               	btfsc	status,0,c
  4280   0105B6  EFDF  F082         	goto	u5281
  4281   0105BA  EFE1  F082         	goto	u5280
  4282   0105BE                     u5281:
  4283   0105BE  EFEC  F082         	goto	l5433
  4284   0105C2                     u5280:
  4285   0105C2                     
  4286                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4287   0105C2  0E00               	movlw	0
  4288   0105C4  0105               	movlb	5	; () banked
  4289   0105C6  6F7B               	movwf	efgtoa@l& (0+255),b
  4290   0105C8  0E00               	movlw	0
  4291   0105CA  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  4292   0105CC  0E00               	movlw	0
  4293   0105CE  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  4294   0105D0  0E00               	movlw	0
  4295   0105D2  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  4296                           
  4297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4298   0105D4  EF15  F083         	goto	l5439
  4299   0105D8                     l5433:
  4300                           
  4301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4302   0105D8  C577  F501         	movff	efgtoa@h,___fleq@ff1
  4303   0105DC  C578  F502         	movff	efgtoa@h+1,___fleq@ff1+1
  4304   0105E0  C579  F503         	movff	efgtoa@h+2,___fleq@ff1+2
  4305   0105E4  C57A  F504         	movff	efgtoa@h+3,___fleq@ff1+3
  4306   0105E8  C57B  F505         	movff	efgtoa@l,___fleq@ff2
  4307   0105EC  C57C  F506         	movff	efgtoa@l+1,___fleq@ff2+1
  4308   0105F0  C57D  F507         	movff	efgtoa@l+2,___fleq@ff2+2
  4309   0105F4  C57E  F508         	movff	efgtoa@l+3,___fleq@ff2+3
  4310   0105F8  EC45  F0A0         	call	___fleq	;wreg free
  4311   0105FC  A0D8               	btfss	status,0,c
  4312   0105FE  EF03  F083         	goto	u5291
  4313   010602  EF05  F083         	goto	u5290
  4314   010606                     u5291:
  4315   010606  EF15  F083         	goto	l5439
  4316   01060A                     u5290:
  4317   01060A  0105               	movlb	5	; () banked
  4318   01060C  B16B               	btfsc	efgtoa@d& (0+255),0,b
  4319   01060E  EF0B  F083         	goto	u5301
  4320   010612  EF0D  F083         	goto	u5300
  4321   010616                     u5301:
  4322   010616  EF15  F083         	goto	l5439
  4323   01061A                     u5300:
  4324   01061A                     
  4325                           ; BSR set to: 5
  4326                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4327   01061A  0E00               	movlw	0
  4328   01061C  6F7B               	movwf	efgtoa@l& (0+255),b
  4329   01061E  0E00               	movlw	0
  4330   010620  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  4331   010622  0E00               	movlw	0
  4332   010624  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  4333   010626  0E00               	movlw	0
  4334   010628  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  4335   01062A                     l5439:
  4336                           
  4337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4338   01062A  C582  F501         	movff	efgtoa@g,___fladd@b
  4339   01062E  C583  F502         	movff	efgtoa@g+1,___fladd@b+1
  4340   010632  C584  F503         	movff	efgtoa@g+2,___fladd@b+2
  4341   010636  C585  F504         	movff	efgtoa@g+3,___fladd@b+3
  4342   01063A  C57B  F505         	movff	efgtoa@l,___fladd@a
  4343   01063E  C57C  F506         	movff	efgtoa@l+1,___fladd@a+1
  4344   010642  C57D  F507         	movff	efgtoa@l+2,___fladd@a+2
  4345   010646  C57E  F508         	movff	efgtoa@l+3,___fladd@a+3
  4346   01064A  ECEA  F087         	call	___fladd	;wreg free
  4347   01064E  C501  F577         	movff	?___fladd,efgtoa@h
  4348   010652  C502  F578         	movff	?___fladd+1,efgtoa@h+1
  4349   010656  C503  F579         	movff	?___fladd+2,efgtoa@h+2
  4350   01065A  C504  F57A         	movff	?___fladd+3,efgtoa@h+3
  4351   01065E                     
  4352                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4353   01065E  C577  F51A         	movff	efgtoa@h,___flge@ff1
  4354   010662  C578  F51B         	movff	efgtoa@h+1,___flge@ff1+1
  4355   010666  C579  F51C         	movff	efgtoa@h+2,___flge@ff1+2
  4356   01066A  C57A  F51D         	movff	efgtoa@h+3,___flge@ff1+3
  4357   01066E  0E00               	movlw	0
  4358   010670  6E05               	movwf	___flmul@a^(0+1280),c
  4359   010672  0E00               	movlw	0
  4360   010674  6E06               	movwf	(___flmul@a+1)^(0+1280),c
  4361   010676  0E20               	movlw	32
  4362   010678  6E07               	movwf	(___flmul@a+2)^(0+1280),c
  4363   01067A  0E41               	movlw	65
  4364   01067C  6E08               	movwf	(___flmul@a+3)^(0+1280),c
  4365   01067E  C573  F501         	movff	efgtoa@ou,___flmul@b
  4366   010682  C574  F502         	movff	efgtoa@ou+1,___flmul@b+1
  4367   010686  C575  F503         	movff	efgtoa@ou+2,___flmul@b+2
  4368   01068A  C576  F504         	movff	efgtoa@ou+3,___flmul@b+3
  4369   01068E  EC4A  F08A         	call	___flmul	;wreg free
  4370   010692  C501  F51E         	movff	?___flmul,___flge@ff2
  4371   010696  C502  F51F         	movff	?___flmul+1,___flge@ff2+1
  4372   01069A  C503  F520         	movff	?___flmul+2,___flge@ff2+2
  4373   01069E  C504  F521         	movff	?___flmul+3,___flge@ff2+3
  4374   0106A2  EC1C  F09E         	call	___flge	;wreg free
  4375   0106A6  A0D8               	btfss	status,0,c
  4376   0106A8  EF58  F083         	goto	u5311
  4377   0106AC  EF5A  F083         	goto	u5310
  4378   0106B0                     u5311:
  4379   0106B0  EF83  F083         	goto	l5451
  4380   0106B4                     u5310:
  4381   0106B4                     
  4382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4383   0106B4  0105               	movlb	5	; () banked
  4384   0106B6  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  4385   0106B8  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  4386   0106BA                     
  4387                           ; BSR set to: 5
  4388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4389   0106BA  C573  F501         	movff	efgtoa@ou,___flmul@b
  4390   0106BE  C574  F502         	movff	efgtoa@ou+1,___flmul@b+1
  4391   0106C2  C575  F503         	movff	efgtoa@ou+2,___flmul@b+2
  4392   0106C6  C576  F504         	movff	efgtoa@ou+3,___flmul@b+3
  4393   0106CA  0E00               	movlw	0
  4394   0106CC  6E05               	movwf	___flmul@a^(0+1280),c
  4395   0106CE  0E00               	movlw	0
  4396   0106D0  6E06               	movwf	(___flmul@a+1)^(0+1280),c
  4397   0106D2  0E20               	movlw	32
  4398   0106D4  6E07               	movwf	(___flmul@a+2)^(0+1280),c
  4399   0106D6  0E41               	movlw	65
  4400   0106D8  6E08               	movwf	(___flmul@a+3)^(0+1280),c
  4401   0106DA  EC4A  F08A         	call	___flmul	;wreg free
  4402   0106DE  C501  F573         	movff	?___flmul,efgtoa@ou
  4403   0106E2  C502  F574         	movff	?___flmul+1,efgtoa@ou+1
  4404   0106E6  C503  F575         	movff	?___flmul+2,efgtoa@ou+2
  4405   0106EA  C504  F576         	movff	?___flmul+3,efgtoa@ou+3
  4406   0106EE                     
  4407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4408   0106EE  0E66               	movlw	102
  4409   0106F0  0105               	movlb	5	; () banked
  4410   0106F2  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  4411   0106F4  A4D8               	btfss	status,2,c
  4412   0106F6  EF7F  F083         	goto	u5321
  4413   0106FA  EF81  F083         	goto	u5320
  4414   0106FE                     u5321:
  4415   0106FE  EF83  F083         	goto	l5451
  4416   010702                     u5320:
  4417   010702                     
  4418                           ; BSR set to: 5
  4419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4420   010702  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  4421   010704  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  4422   010706                     l5451:
  4423                           
  4424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4425   010706  C573  F588         	movff	efgtoa@ou,efgtoa@u
  4426   01070A  C574  F589         	movff	efgtoa@ou+1,efgtoa@u+1
  4427   01070E  C575  F58A         	movff	efgtoa@ou+2,efgtoa@u+2
  4428   010712  C576  F58B         	movff	efgtoa@ou+3,efgtoa@u+3
  4429   010716                     
  4430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4431   010716  C56F  F560         	movff	efgtoa@e,efgtoa@ne
  4432   01071A  C570  F561         	movff	efgtoa@e+1,efgtoa@ne+1
  4433   01071E                     
  4434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4435   01071E  0E00               	movlw	0
  4436   010720  0105               	movlb	5	; () banked
  4437   010722  6F68               	movwf	efgtoa@pp& (0+255),b
  4438   010724                     
  4439                           ; BSR set to: 5
  4440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4441   010724  0E00               	movlw	0
  4442   010726  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  4443   010728  0E00               	movlw	0
  4444   01072A  6F64               	movwf	efgtoa@t& (0+255),b
  4445   01072C                     
  4446                           ; BSR set to: 5
  4447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4448   01072C  0E00               	movlw	0
  4449   01072E  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  4450   010730  0E00               	movlw	0
  4451   010732  6F7F               	movwf	efgtoa@i& (0+255),b
  4452                           
  4453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4454   010734  EF81  F084         	goto	l5501
  4455   010738                     l5461:
  4456                           
  4457                           ; BSR set to: 5
  4458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4459   010738  C577  F501         	movff	efgtoa@h,___fldiv@b
  4460   01073C  C578  F502         	movff	efgtoa@h+1,___fldiv@b+1
  4461   010740  C579  F503         	movff	efgtoa@h+2,___fldiv@b+2
  4462   010744  C57A  F504         	movff	efgtoa@h+3,___fldiv@b+3
  4463   010748  C588  F505         	movff	efgtoa@u,___fldiv@a
  4464   01074C  C589  F506         	movff	efgtoa@u+1,___fldiv@a+1
  4465   010750  C58A  F507         	movff	efgtoa@u+2,___fldiv@a+2
  4466   010754  C58B  F508         	movff	efgtoa@u+3,___fldiv@a+3
  4467   010758  EC53  F08E         	call	___fldiv	;wreg free
  4468   01075C  C501  F51A         	movff	?___fldiv,floorf@x
  4469   010760  C502  F51B         	movff	?___fldiv+1,floorf@x+1
  4470   010764  C503  F51C         	movff	?___fldiv+2,floorf@x+2
  4471   010768  C504  F51D         	movff	?___fldiv+3,floorf@x+3
  4472   01076C  EC91  F099         	call	_floorf	;wreg free
  4473   010770  C51A  F57B         	movff	?_floorf,efgtoa@l
  4474   010774  C51B  F57C         	movff	?_floorf+1,efgtoa@l+1
  4475   010778  C51C  F57D         	movff	?_floorf+2,efgtoa@l+2
  4476   01077C  C51D  F57E         	movff	?_floorf+3,efgtoa@l+3
  4477                           
  4478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4479   010780  C57B  F501         	movff	efgtoa@l,___fltol@f1
  4480   010784  C57C  F502         	movff	efgtoa@l+1,___fltol@f1+1
  4481   010788  C57D  F503         	movff	efgtoa@l+2,___fltol@f1+2
  4482   01078C  C57E  F504         	movff	efgtoa@l+3,___fltol@f1+3
  4483   010790  EC99  F09D         	call	___fltol	;wreg free
  4484   010794  BE02               	btfsc	(?___fltol+1)^(0+1280),7,c
  4485   010796  EFD8  F083         	goto	u5330
  4486   01079A  5002               	movf	(?___fltol+1)^(0+1280),w,c
  4487   01079C  E107               	bnz	u5331
  4488   01079E  0E0A               	movlw	10
  4489   0107A0  5C01               	subwf	?___fltol^(0+1280),w,c
  4490   0107A2  B0D8               	btfsc	status,0,c
  4491   0107A4  EFD6  F083         	goto	u5331
  4492   0107A8  EFD8  F083         	goto	u5330
  4493   0107AC                     u5331:
  4494   0107AC  EFE8  F083         	goto	l5465
  4495   0107B0                     u5330:
  4496   0107B0  C57B  F501         	movff	efgtoa@l,___fltol@f1
  4497   0107B4  C57C  F502         	movff	efgtoa@l+1,___fltol@f1+1
  4498   0107B8  C57D  F503         	movff	efgtoa@l+2,___fltol@f1+2
  4499   0107BC  C57E  F504         	movff	efgtoa@l+3,___fltol@f1+3
  4500   0107C0  EC99  F09D         	call	___fltol	;wreg free
  4501   0107C4  C501  F56B         	movff	?___fltol,efgtoa@d
  4502   0107C8  C502  F56C         	movff	?___fltol+1,efgtoa@d+1
  4503   0107CC  EFED  F083         	goto	l1349
  4504   0107D0                     l5465:
  4505   0107D0  0E00               	movlw	0
  4506   0107D2  0105               	movlb	5	; () banked
  4507   0107D4  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  4508   0107D6  0E09               	movlw	9
  4509   0107D8  6F6B               	movwf	efgtoa@d& (0+255),b
  4510   0107DA                     l1349:
  4511                           
  4512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4513   0107DA  0105               	movlb	5	; () banked
  4514   0107DC  5168               	movf	efgtoa@pp& (0+255),w,b
  4515   0107DE  A4D8               	btfss	status,2,c
  4516   0107E0  EFF4  F083         	goto	u5341
  4517   0107E4  EFF6  F083         	goto	u5340
  4518   0107E8                     u5341:
  4519   0107E8  EF1E  F084         	goto	l5485
  4520   0107EC                     u5340:
  4521   0107EC                     
  4522                           ; BSR set to: 5
  4523   0107EC  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4524   0107EE  EFFD  F083         	goto	u5350
  4525   0107F2  EFFB  F083         	goto	u5351
  4526   0107F6                     u5351:
  4527   0107F6  EF1E  F084         	goto	l5485
  4528   0107FA                     u5350:
  4529   0107FA                     
  4530                           ; BSR set to: 5
  4531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4532   0107FA  0E00               	movlw	low _dbuf
  4533   0107FC  2586               	addwf	efgtoa@n& (0+255),w,b
  4534   0107FE  6ED9               	movwf	fsr2l,c
  4535   010800  0E06               	movlw	high _dbuf
  4536   010802  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4537   010804  6EDA               	movwf	fsr2h,c
  4538   010806  0E2E               	movlw	46
  4539   010808  6EDF               	movwf	indf2,c
  4540   01080A                     
  4541                           ; BSR set to: 5
  4542   01080A  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4543   01080C  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4544   01080E                     
  4545                           ; BSR set to: 5
  4546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4547   01080E  0771               	decf	efgtoa@w& (0+255),f,b
  4548   010810  A0D8               	btfss	status,0,c
  4549   010812  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4550   010814                     
  4551                           ; BSR set to: 5
  4552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4553   010814  0E01               	movlw	1
  4554   010816  6F68               	movwf	efgtoa@pp& (0+255),b
  4555   010818  EF1E  F084         	goto	l5485
  4556   01081C                     l5477:
  4557                           
  4558                           ; BSR set to: 5
  4559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4560   01081C  0E00               	movlw	low _dbuf
  4561   01081E  2586               	addwf	efgtoa@n& (0+255),w,b
  4562   010820  6ED9               	movwf	fsr2l,c
  4563   010822  0E06               	movlw	high _dbuf
  4564   010824  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4565   010826  6EDA               	movwf	fsr2h,c
  4566   010828  0E30               	movlw	48
  4567   01082A  6EDF               	movwf	indf2,c
  4568   01082C                     
  4569                           ; BSR set to: 5
  4570   01082C  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4571   01082E  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4572   010830                     
  4573                           ; BSR set to: 5
  4574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4575   010830  0771               	decf	efgtoa@w& (0+255),f,b
  4576   010832  A0D8               	btfss	status,0,c
  4577   010834  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4578   010836                     
  4579                           ; BSR set to: 5
  4580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4581   010836  0764               	decf	efgtoa@t& (0+255),f,b
  4582   010838  A0D8               	btfss	status,0,c
  4583   01083A  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  4584   01083C                     l5485:
  4585                           
  4586                           ; BSR set to: 5
  4587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4588   01083C  5164               	movf	efgtoa@t& (0+255),w,b
  4589   01083E  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4590   010840  A4D8               	btfss	status,2,c
  4591   010842  EF25  F084         	goto	u5361
  4592   010846  EF27  F084         	goto	u5360
  4593   01084A                     u5361:
  4594   01084A  EF0E  F084         	goto	l5477
  4595   01084E                     u5360:
  4596   01084E                     
  4597                           ; BSR set to: 5
  4598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4599   01084E  0E00               	movlw	low _dbuf
  4600   010850  2586               	addwf	efgtoa@n& (0+255),w,b
  4601   010852  6ED9               	movwf	fsr2l,c
  4602   010854  0E06               	movlw	high _dbuf
  4603   010856  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4604   010858  6EDA               	movwf	fsr2h,c
  4605   01085A  516B               	movf	efgtoa@d& (0+255),w,b
  4606   01085C  0F30               	addlw	48
  4607   01085E  6EDF               	movwf	indf2,c
  4608   010860                     
  4609                           ; BSR set to: 5
  4610   010860  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4611   010862  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4612   010864                     
  4613                           ; BSR set to: 5
  4614                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4615   010864  0771               	decf	efgtoa@w& (0+255),f,b
  4616   010866  A0D8               	btfss	status,0,c
  4617   010868  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4618   01086A                     
  4619                           ; BSR set to: 5
  4620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4621   01086A  C577  F51A         	movff	efgtoa@h,___flsub@b
  4622   01086E  C578  F51B         	movff	efgtoa@h+1,___flsub@b+1
  4623   010872  C579  F51C         	movff	efgtoa@h+2,___flsub@b+2
  4624   010876  C57A  F51D         	movff	efgtoa@h+3,___flsub@b+3
  4625   01087A  C57B  F505         	movff	efgtoa@l,___flmul@a
  4626   01087E  C57C  F506         	movff	efgtoa@l+1,___flmul@a+1
  4627   010882  C57D  F507         	movff	efgtoa@l+2,___flmul@a+2
  4628   010886  C57E  F508         	movff	efgtoa@l+3,___flmul@a+3
  4629   01088A  C588  F501         	movff	efgtoa@u,___flmul@b
  4630   01088E  C589  F502         	movff	efgtoa@u+1,___flmul@b+1
  4631   010892  C58A  F503         	movff	efgtoa@u+2,___flmul@b+2
  4632   010896  C58B  F504         	movff	efgtoa@u+3,___flmul@b+3
  4633   01089A  EC4A  F08A         	call	___flmul	;wreg free
  4634   01089E  C501  F51E         	movff	?___flmul,___flsub@a
  4635   0108A2  C502  F51F         	movff	?___flmul+1,___flsub@a+1
  4636   0108A6  C503  F520         	movff	?___flmul+2,___flsub@a+2
  4637   0108AA  C504  F521         	movff	?___flmul+3,___flsub@a+3
  4638   0108AE  ECCC  F0A3         	call	___flsub	;wreg free
  4639   0108B2  C51A  F577         	movff	?___flsub,efgtoa@h
  4640   0108B6  C51B  F578         	movff	?___flsub+1,efgtoa@h+1
  4641   0108BA  C51C  F579         	movff	?___flsub+2,efgtoa@h+2
  4642   0108BE  C51D  F57A         	movff	?___flsub+3,efgtoa@h+3
  4643   0108C2                     
  4644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4645   0108C2  C588  F501         	movff	efgtoa@u,___fldiv@b
  4646   0108C6  C589  F502         	movff	efgtoa@u+1,___fldiv@b+1
  4647   0108CA  C58A  F503         	movff	efgtoa@u+2,___fldiv@b+2
  4648   0108CE  C58B  F504         	movff	efgtoa@u+3,___fldiv@b+3
  4649   0108D2  0E00               	movlw	0
  4650   0108D4  6E05               	movwf	___fldiv@a^(0+1280),c
  4651   0108D6  0E00               	movlw	0
  4652   0108D8  6E06               	movwf	(___fldiv@a+1)^(0+1280),c
  4653   0108DA  0E20               	movlw	32
  4654   0108DC  6E07               	movwf	(___fldiv@a+2)^(0+1280),c
  4655   0108DE  0E41               	movlw	65
  4656   0108E0  6E08               	movwf	(___fldiv@a+3)^(0+1280),c
  4657   0108E2  EC53  F08E         	call	___fldiv	;wreg free
  4658   0108E6  C501  F588         	movff	?___fldiv,efgtoa@u
  4659   0108EA  C502  F589         	movff	?___fldiv+1,efgtoa@u+1
  4660   0108EE  C503  F58A         	movff	?___fldiv+2,efgtoa@u+2
  4661   0108F2  C504  F58B         	movff	?___fldiv+3,efgtoa@u+3
  4662   0108F6                     
  4663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4664   0108F6  0105               	movlb	5	; () banked
  4665   0108F8  0760               	decf	efgtoa@ne& (0+255),f,b
  4666   0108FA  A0D8               	btfss	status,0,c
  4667   0108FC  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  4668   0108FE                     
  4669                           ; BSR set to: 5
  4670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4671   0108FE  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  4672   010900  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  4673   010902                     l5501:
  4674                           
  4675                           ; BSR set to: 5
  4676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4677   010902  516D               	movf	efgtoa@m& (0+255),w,b
  4678   010904  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4679   010906  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4680   010908  0A80               	xorlw	128
  4681   01090A  6E35               	movwf	??_efgtoa^(0+1280),c
  4682   01090C  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4683   01090E  0A80               	xorlw	128
  4684   010910  5835               	subwfb	??_efgtoa^(0+1280),w,c
  4685   010912  B0D8               	btfsc	status,0,c
  4686   010914  EF8E  F084         	goto	u5371
  4687   010918  EF90  F084         	goto	u5370
  4688   01091C                     u5371:
  4689   01091C  EF9E  F084         	goto	l5505
  4690   010920                     u5370:
  4691   010920                     
  4692                           ; BSR set to: 5
  4693   010920  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4694   010922  EF9C  F084         	goto	u5381
  4695   010926  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4696   010928  E109               	bnz	u5380
  4697   01092A  0E4B               	movlw	75
  4698   01092C  5D86               	subwf	efgtoa@n& (0+255),w,b
  4699   01092E  A0D8               	btfss	status,0,c
  4700   010930  EF9C  F084         	goto	u5381
  4701   010934  EF9E  F084         	goto	u5380
  4702   010938                     u5381:
  4703   010938  EF9C  F083         	goto	l5461
  4704   01093C                     u5380:
  4705   01093C                     l5505:
  4706                           
  4707                           ; BSR set to: 5
  4708                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4709   01093C  0E00               	movlw	0
  4710   01093E  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  4711   010940  0E4F               	movlw	79
  4712   010942  6F7F               	movwf	efgtoa@i& (0+255),b
  4713   010944                     
  4714                           ; BSR set to: 5
  4715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4716   010944  0E00               	movlw	low _dbuf
  4717   010946  257F               	addwf	efgtoa@i& (0+255),w,b
  4718   010948  6ED9               	movwf	fsr2l,c
  4719   01094A  0E06               	movlw	high _dbuf
  4720   01094C  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4721   01094E  6EDA               	movwf	fsr2h,c
  4722   010950  0E00               	movlw	0
  4723   010952  6EDF               	movwf	indf2,c
  4724   010954                     
  4725                           ; BSR set to: 5
  4726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4727   010954  0E00               	movlw	low _dbuf
  4728   010956  6E35               	movwf	??_efgtoa^(0+1280),c
  4729   010958  0E06               	movlw	high _dbuf
  4730   01095A  6E36               	movwf	(??_efgtoa+1)^(0+1280),c
  4731   01095C  5186               	movf	efgtoa@n& (0+255),w,b
  4732   01095E  5E35               	subwf	??_efgtoa^(0+1280),f,c
  4733   010960  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4734   010962  5A36               	subwfb	(??_efgtoa+1)^(0+1280),f,c
  4735   010964  517F               	movf	efgtoa@i& (0+255),w,b
  4736   010966  2435               	addwf	??_efgtoa^(0+1280),w,c
  4737   010968  6E01               	movwf	memcpy@d1^(0+1280),c
  4738   01096A  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4739   01096C  2036               	addwfc	(??_efgtoa+1)^(0+1280),w,c
  4740   01096E  6E02               	movwf	(memcpy@d1+1)^(0+1280),c
  4741   010970  0E00               	movlw	low _dbuf
  4742   010972  6E03               	movwf	memcpy@s1^(0+1280),c
  4743   010974  0E06               	movlw	high _dbuf
  4744   010976  6E04               	movwf	(memcpy@s1+1)^(0+1280),c
  4745   010978  C586  F505         	movff	efgtoa@n,memcpy@n
  4746   01097C  C587  F506         	movff	efgtoa@n+1,memcpy@n+1
  4747   010980  EC56  F0A3         	call	_memcpy	;wreg free
  4748   010984                     
  4749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4750   010984  0105               	movlb	5	; () banked
  4751   010986  5186               	movf	efgtoa@n& (0+255),w,b
  4752   010988  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4753   01098A  6F86               	movwf	efgtoa@n& (0+255),b
  4754   01098C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4755   01098E  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4756   010990  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  4757   010992                     
  4758                           ; BSR set to: 5
  4759                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4760   010992  5181               	movf	efgtoa@sign& (0+255),w,b
  4761   010994  A4D8               	btfss	status,2,c
  4762   010996  EFCF  F084         	goto	u5391
  4763   01099A  EFD2  F084         	goto	u5390
  4764   01099E                     u5391:
  4765   01099E  0E01               	movlw	1
  4766   0109A0  EFD3  F084         	goto	u5400
  4767   0109A4                     u5390:
  4768   0109A4  0E00               	movlw	0
  4769   0109A6                     u5400:
  4770   0109A6  6F7F               	movwf	efgtoa@i& (0+255),b
  4771   0109A8  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  4772   0109AA                     
  4773                           ; BSR set to: 5
  4774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 772:  if (flags &
      +                           (1 << 1)) {
  4775   0109AA  A3E3               	btfss	_flags& (0+255),1,b
  4776   0109AC  EFDA  F084         	goto	u5411
  4777   0109B0  EFDC  F084         	goto	u5410
  4778   0109B4                     u5411:
  4779   0109B4  EF0A  F085         	goto	l5527
  4780   0109B8                     u5410:
  4781   0109B8  EFEC  F084         	goto	l5523
  4782   0109BC                     l5519:
  4783                           
  4784                           ; BSR set to: 5
  4785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 774:    dbuf[--n]
      +                           = '0';
  4786   0109BC  0786               	decf	efgtoa@n& (0+255),f,b
  4787   0109BE  A0D8               	btfss	status,0,c
  4788   0109C0  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  4789   0109C2  0E00               	movlw	low _dbuf
  4790   0109C4  2586               	addwf	efgtoa@n& (0+255),w,b
  4791   0109C6  6ED9               	movwf	fsr2l,c
  4792   0109C8  0E06               	movlw	high _dbuf
  4793   0109CA  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4794   0109CC  6EDA               	movwf	fsr2h,c
  4795   0109CE  0E30               	movlw	48
  4796   0109D0  6EDF               	movwf	indf2,c
  4797   0109D2                     
  4798                           ; BSR set to: 5
  4799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 775:    w--;
  4800   0109D2  0771               	decf	efgtoa@w& (0+255),f,b
  4801   0109D4  A0D8               	btfss	status,0,c
  4802   0109D6  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4803   0109D8                     l5523:
  4804                           
  4805                           ; BSR set to: 5
  4806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 773:   while (w >
      +                           i && n > i) {
  4807   0109D8  5171               	movf	efgtoa@w& (0+255),w,b
  4808   0109DA  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4809   0109DC  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4810   0109DE  0A80               	xorlw	128
  4811   0109E0  6E35               	movwf	??_efgtoa^(0+1280),c
  4812   0109E2  5172               	movf	(efgtoa@w+1)& (0+255),w,b
  4813   0109E4  0A80               	xorlw	128
  4814   0109E6  5835               	subwfb	??_efgtoa^(0+1280),w,c
  4815   0109E8  B0D8               	btfsc	status,0,c
  4816   0109EA  EFF9  F084         	goto	u5421
  4817   0109EE  EFFB  F084         	goto	u5420
  4818   0109F2                     u5421:
  4819   0109F2  EF0A  F085         	goto	l5527
  4820   0109F6                     u5420:
  4821   0109F6                     
  4822                           ; BSR set to: 5
  4823   0109F6  5186               	movf	efgtoa@n& (0+255),w,b
  4824   0109F8  5D7F               	subwf	efgtoa@i& (0+255),w,b
  4825   0109FA  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4826   0109FC  0A80               	xorlw	128
  4827   0109FE  6E35               	movwf	??_efgtoa^(0+1280),c
  4828   010A00  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4829   010A02  0A80               	xorlw	128
  4830   010A04  5835               	subwfb	??_efgtoa^(0+1280),w,c
  4831   010A06  A0D8               	btfss	status,0,c
  4832   010A08  EF08  F085         	goto	u5431
  4833   010A0C  EF0A  F085         	goto	u5430
  4834   010A10                     u5431:
  4835   010A10  EFDE  F084         	goto	l5519
  4836   010A14                     u5430:
  4837   010A14                     l5527:
  4838                           
  4839                           ; BSR set to: 5
  4840                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4841   010A14  5181               	movf	efgtoa@sign& (0+255),w,b
  4842   010A16  B4D8               	btfsc	status,2,c
  4843   010A18  EF10  F085         	goto	u5441
  4844   010A1C  EF12  F085         	goto	u5440
  4845   010A20                     u5441:
  4846   010A20  EF1D  F085         	goto	l5531
  4847   010A24                     u5440:
  4848   010A24                     
  4849                           ; BSR set to: 5
  4850                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4851   010A24  0786               	decf	efgtoa@n& (0+255),f,b
  4852   010A26  A0D8               	btfss	status,0,c
  4853   010A28  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  4854   010A2A  0E00               	movlw	low _dbuf
  4855   010A2C  2586               	addwf	efgtoa@n& (0+255),w,b
  4856   010A2E  6ED9               	movwf	fsr2l,c
  4857   010A30  0E06               	movlw	high _dbuf
  4858   010A32  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4859   010A34  6EDA               	movwf	fsr2h,c
  4860   010A36  C581  F4DF         	movff	efgtoa@sign,indf2
  4861   010A3A                     l5531:
  4862                           
  4863                           ; BSR set to: 5
  4864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4865   010A3A  517F               	movf	efgtoa@i& (0+255),w,b
  4866   010A3C  5F71               	subwf	efgtoa@w& (0+255),f,b
  4867   010A3E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  4868   010A40  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4869   010A42                     
  4870                           ; BSR set to: 5
  4871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4872   010A42  C52E  F511         	movff	efgtoa@fp,pad@fp
  4873   010A46  C52F  F512         	movff	efgtoa@fp+1,pad@fp+1
  4874   010A4A  0E00               	movlw	low _dbuf
  4875   010A4C  2586               	addwf	efgtoa@n& (0+255),w,b
  4876   010A4E  6E13               	movwf	pad@buf^(0+1280),c
  4877   010A50  0E06               	movlw	high _dbuf
  4878   010A52  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4879   010A54  6E14               	movwf	(pad@buf+1)^(0+1280),c
  4880   010A56  C571  F515         	movff	efgtoa@w,pad@p
  4881   010A5A  C572  F516         	movff	efgtoa@w+1,pad@p+1
  4882   010A5E  ECEE  F09F         	call	_pad	;wreg free
  4883   010A62                     l1316:
  4884   010A62  0012               	return		;funcret
  4885   010A64                     __end_of_efgtoa:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function _strcpy *****************
  4889 ;; Defined at:
  4890 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4893 ;;		 -> dbuf(80), 
  4894 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4895 ;;		 -> STR_25(4), STR_22(4), 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  d               2    6[COMRAM] PTR unsigned char 
  4898 ;;		 -> dbuf(80), 
  4899 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4900 ;;		 -> STR_25(4), STR_22(4), 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  2    0[COMRAM] PTR unsigned char 
  4903 ;; Registers used:
  4904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4911 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4913 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4914 ;;Total ram usage:        8 bytes
  4915 ;; Hardware stack levels used: 1
  4916 ;; This function calls:
  4917 ;;		Nothing
  4918 ;; This function is called by:
  4919 ;;		_efgtoa
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text12
  4924   01486A                     __ptext12:
  4925                           	callstack 0
  4926   01486A                     _strcpy:
  4927                           	callstack 121
  4928   01486A  C503  F505         	movff	strcpy@src,strcpy@s
  4929   01486E  C504  F506         	movff	strcpy@src+1,strcpy@s+1
  4930   014872  C501  F507         	movff	strcpy@dest,strcpy@d
  4931   014876  C502  F508         	movff	strcpy@dest+1,strcpy@d+1
  4932   01487A                     l5179:
  4933   01487A  C505  F4F6         	movff	strcpy@s,tblptrl
  4934   01487E  C506  F4F7         	movff	strcpy@s+1,tblptrh
  4935   014882  4A05               	infsnz	strcpy@s^(0+1280),f,c
  4936   014884  2A06               	incf	(strcpy@s+1)^(0+1280),f,c
  4937   014886                     	if	0	;tblptru may be non-zero
  4938   014886                     	endif
  4939   014886                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4940   014886  0E00               	movlw	low (__mediumconst shr (0+16))
  4941   014888  6EF8               	movwf	tblptru,c
  4942   01488A                     	endif
  4943   01488A  C507  F4D9         	movff	strcpy@d,fsr2l
  4944   01488E  C508  F4DA         	movff	strcpy@d+1,fsr2h
  4945   014892  4A07               	infsnz	strcpy@d^(0+1280),f,c
  4946   014894  2A08               	incf	(strcpy@d+1)^(0+1280),f,c
  4947   014896  0008               	tblrd		*
  4948   014898  C4F5 F4DF          	movff	tablat,indf2
  4949   01489C  50DF               	movf	indf2,w,c
  4950   01489E  A4D8               	btfss	status,2,c
  4951   0148A0  EF54  F0A4         	goto	u4801
  4952   0148A4  EF56  F0A4         	goto	u4800
  4953   0148A8                     u4801:
  4954   0148A8  EF3D  F0A4         	goto	l5179
  4955   0148AC                     u4800:
  4956   0148AC  0012               	return		;funcret
  4957   0148AE                     __end_of_strcpy:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function _memcpy *****************
  4961 ;; Defined at:
  4962 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  d1              2    0[COMRAM] PTR void 
  4965 ;;		 -> dbuf(80), 
  4966 ;;  s1              2    2[COMRAM] PTR const void 
  4967 ;;		 -> dbuf(80), 
  4968 ;;  n               2    4[COMRAM] unsigned int 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4971 ;;		 -> dbuf(80), 
  4972 ;;  d               2    6[COMRAM] PTR unsigned char 
  4973 ;;		 -> dbuf(80), 
  4974 ;;  tmp             1   10[COMRAM] unsigned char 
  4975 ;; Return value:  Size  Location     Type
  4976 ;;                  2    0[COMRAM] PTR void 
  4977 ;; Registers used:
  4978 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4979 ;; Tracked objects:
  4980 ;;		On entry : 0/0
  4981 ;;		On exit  : 0/0
  4982 ;;		Unchanged: 0/0
  4983 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4984 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4985 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4987 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4988 ;;Total ram usage:       11 bytes
  4989 ;; Hardware stack levels used: 1
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_efgtoa
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text13
  4998   0146AC                     __ptext13:
  4999                           	callstack 0
  5000   0146AC                     _memcpy:
  5001                           	callstack 121
  5002   0146AC  C503  F509         	movff	memcpy@s1,memcpy@s
  5003   0146B0  C504  F50A         	movff	memcpy@s1+1,memcpy@s+1
  5004   0146B4  C501  F507         	movff	memcpy@d1,memcpy@d
  5005   0146B8  C502  F508         	movff	memcpy@d1+1,memcpy@d+1
  5006   0146BC  EF70  F0A3         	goto	l5223
  5007   0146C0                     l5215:
  5008   0146C0  C509  F4D9         	movff	memcpy@s,fsr2l
  5009   0146C4  C50A  F4DA         	movff	memcpy@s+1,fsr2h
  5010   0146C8  50DF               	movf	indf2,w,c
  5011   0146CA  6E0B               	movwf	memcpy@tmp^(0+1280),c
  5012   0146CC  4A09               	infsnz	memcpy@s^(0+1280),f,c
  5013   0146CE  2A0A               	incf	(memcpy@s+1)^(0+1280),f,c
  5014   0146D0  C507  F4D9         	movff	memcpy@d,fsr2l
  5015   0146D4  C508  F4DA         	movff	memcpy@d+1,fsr2h
  5016   0146D8  C50B  F4DF         	movff	memcpy@tmp,indf2
  5017   0146DC  4A07               	infsnz	memcpy@d^(0+1280),f,c
  5018   0146DE  2A08               	incf	(memcpy@d+1)^(0+1280),f,c
  5019   0146E0                     l5223:
  5020   0146E0  0605               	decf	memcpy@n^(0+1280),f,c
  5021   0146E2  A0D8               	btfss	status,0,c
  5022   0146E4  0606               	decf	(memcpy@n+1)^(0+1280),f,c
  5023   0146E6  2805               	incf	memcpy@n^(0+1280),w,c
  5024   0146E8  E106               	bnz	u4921
  5025   0146EA  2806               	incf	(memcpy@n+1)^(0+1280),w,c
  5026   0146EC  A4D8               	btfss	status,2,c
  5027   0146EE  EF7B  F0A3         	goto	u4921
  5028   0146F2  EF7D  F0A3         	goto	u4920
  5029   0146F6                     u4921:
  5030   0146F6  EF60  F0A3         	goto	l5215
  5031   0146FA                     u4920:
  5032   0146FA  0012               	return		;funcret
  5033   0146FC                     __end_of_memcpy:
  5034                           	callstack 0
  5035                           
  5036 ;; *************** function _labs *****************
  5037 ;; Defined at:
  5038 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  a               4    0[COMRAM] long 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  4    0[COMRAM] long 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5054 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5055 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5056 ;;Total ram usage:        8 bytes
  5057 ;; Hardware stack levels used: 1
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_efgtoa
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text14
  5066   0144EA                     __ptext14:
  5067                           	callstack 0
  5068   0144EA                     _labs:
  5069                           	callstack 121
  5070   0144EA  BE04               	btfsc	(labs@a+3)^(0+1280),7,c
  5071   0144EC  EF84  F0A2         	goto	u4810
  5072   0144F0  5004               	movf	(labs@a+3)^(0+1280),w,c
  5073   0144F2  1003               	iorwf	(labs@a+2)^(0+1280),w,c
  5074   0144F4  1002               	iorwf	(labs@a+1)^(0+1280),w,c
  5075   0144F6  E106               	bnz	u4811
  5076   0144F8  0401               	decf	labs@a^(0+1280),w,c
  5077   0144FA  B0D8               	btfsc	status,0,c
  5078   0144FC  EF82  F0A2         	goto	u4811
  5079   014500  EF84  F0A2         	goto	u4810
  5080   014504                     u4811:
  5081   014504  EF9F  F0A2         	goto	l1489
  5082   014508                     u4810:
  5083   014508  C501  F505         	movff	labs@a,??_labs
  5084   01450C  C502  F506         	movff	labs@a+1,??_labs+1
  5085   014510  C503  F507         	movff	labs@a+2,??_labs+2
  5086   014514  C504  F508         	movff	labs@a+3,??_labs+3
  5087   014518  1E05               	comf	??_labs^(0+1280),f,c
  5088   01451A  1E06               	comf	(??_labs+1)^(0+1280),f,c
  5089   01451C  1E07               	comf	(??_labs+2)^(0+1280),f,c
  5090   01451E  1E08               	comf	(??_labs+3)^(0+1280),f,c
  5091   014520  2A05               	incf	??_labs^(0+1280),f,c
  5092   014522  0E00               	movlw	0
  5093   014524  2206               	addwfc	(??_labs+1)^(0+1280),f,c
  5094   014526  2207               	addwfc	(??_labs+2)^(0+1280),f,c
  5095   014528  2208               	addwfc	(??_labs+3)^(0+1280),f,c
  5096   01452A  C505  F501         	movff	??_labs,?_labs
  5097   01452E  C506  F502         	movff	??_labs+1,?_labs+1
  5098   014532  C507  F503         	movff	??_labs+2,?_labs+2
  5099   014536  C508  F504         	movff	??_labs+3,?_labs+3
  5100   01453A  EFA7  F0A2         	goto	l1492
  5101   01453E                     l1489:
  5102   01453E  C501  F501         	movff	labs@a,?_labs
  5103   014542  C502  F502         	movff	labs@a+1,?_labs+1
  5104   014546  C503  F503         	movff	labs@a+2,?_labs+2
  5105   01454A  C504  F504         	movff	labs@a+3,?_labs+3
  5106   01454E                     l1492:
  5107   01454E  0012               	return		;funcret
  5108   014550                     __end_of_labs:
  5109                           	callstack 0
  5110                           
  5111 ;; *************** function _floorf *****************
  5112 ;; Defined at:
  5113 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  x               4   25[COMRAM] float 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  u               4   41[COMRAM] struct .
  5118 ;;  m               4   35[COMRAM] unsigned long 
  5119 ;;  e               2   39[COMRAM] int 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  4   25[COMRAM] float 
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5130 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5131 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5132 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5133 ;;Total ram usage:       20 bytes
  5134 ;; Hardware stack levels used: 1
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_efgtoa
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           	psect	text15
  5143   013322                     __ptext15:
  5144                           	callstack 0
  5145   013322                     _floorf:
  5146                           	callstack 121
  5147   013322  C5CD  F52A         	movff	floorf@F526,floorf@u
  5148   013326  C5CE  F52B         	movff	floorf@F526+1,floorf@u+1
  5149   01332A  C5CF  F52C         	movff	floorf@F526+2,floorf@u+2
  5150   01332E  C5D0  F52D         	movff	floorf@F526+3,floorf@u+3
  5151   013332  C51A  F52A         	movff	floorf@x,floorf@u
  5152   013336  C51B  F52B         	movff	floorf@x+1,floorf@u+1
  5153   01333A  C51C  F52C         	movff	floorf@x+2,floorf@u+2
  5154   01333E  C51D  F52D         	movff	floorf@x+3,floorf@u+3
  5155   013342  0E81               	movlw	129
  5156   013344  6E1E               	movwf	??_floorf^(0+1280),c
  5157   013346  0EFF               	movlw	255
  5158   013348  6E1F               	movwf	(??_floorf+1)^(0+1280),c
  5159   01334A  C52A  F520         	movff	floorf@u,??_floorf+2
  5160   01334E  C52B  F521         	movff	floorf@u+1,??_floorf+3
  5161   013352  C52C  F522         	movff	floorf@u+2,??_floorf+4
  5162   013356  C52D  F523         	movff	floorf@u+3,??_floorf+5
  5163   01335A  0E18               	movlw	24
  5164   01335C  EFB5  F099         	goto	u4820
  5165   013360                     u4825:
  5166   013360  90D8               	bcf	status,0,c
  5167   013362  3223               	rrcf	(??_floorf+5)^(0+1280),f,c
  5168   013364  3222               	rrcf	(??_floorf+4)^(0+1280),f,c
  5169   013366  3221               	rrcf	(??_floorf+3)^(0+1280),f,c
  5170   013368  3220               	rrcf	(??_floorf+2)^(0+1280),f,c
  5171   01336A                     u4820:
  5172   01336A  2EE8               	decfsz	wreg,f,c
  5173   01336C  EFB0  F099         	goto	u4825
  5174   013370  5020               	movf	(??_floorf+2)^(0+1280),w,c
  5175   013372  241E               	addwf	??_floorf^(0+1280),w,c
  5176   013374  6E28               	movwf	floorf@e^(0+1280),c
  5177   013376  0E00               	movlw	0
  5178   013378  201F               	addwfc	(??_floorf+1)^(0+1280),w,c
  5179   01337A  6E29               	movwf	(floorf@e+1)^(0+1280),c
  5180   01337C  BE29               	btfsc	(floorf@e+1)^(0+1280),7,c
  5181   01337E  EFCA  F099         	goto	u4831
  5182   013382  5029               	movf	(floorf@e+1)^(0+1280),w,c
  5183   013384  E109               	bnz	u4830
  5184   013386  0E17               	movlw	23
  5185   013388  5C28               	subwf	floorf@e^(0+1280),w,c
  5186   01338A  A0D8               	btfss	status,0,c
  5187   01338C  EFCA  F099         	goto	u4831
  5188   013390  EFCC  F099         	goto	u4830
  5189   013394                     u4831:
  5190   013394  EFD6  F099         	goto	l5191
  5191   013398                     u4830:
  5192   013398                     l5189:
  5193   013398  C51A  F51A         	movff	floorf@x,?_floorf
  5194   01339C  C51B  F51B         	movff	floorf@x+1,?_floorf+1
  5195   0133A0  C51C  F51C         	movff	floorf@x+2,?_floorf+2
  5196   0133A4  C51D  F51D         	movff	floorf@x+3,?_floorf+3
  5197   0133A8  EF99  F09A         	goto	l1464
  5198   0133AC                     l5191:
  5199   0133AC  BE29               	btfsc	(floorf@e+1)^(0+1280),7,c
  5200   0133AE  EFDB  F099         	goto	u4841
  5201   0133B2  EFDD  F099         	goto	u4840
  5202   0133B6                     u4841:
  5203   0133B6  EF4D  F09A         	goto	l5201
  5204   0133BA                     u4840:
  5205   0133BA  C528  F51E         	movff	floorf@e,??_floorf
  5206   0133BE  0EFF               	movlw	255
  5207   0133C0  6E1F               	movwf	(??_floorf+1)^(0+1280),c
  5208   0133C2  0EFF               	movlw	255
  5209   0133C4  6E20               	movwf	(??_floorf+2)^(0+1280),c
  5210   0133C6  0E7F               	movlw	127
  5211   0133C8  6E21               	movwf	(??_floorf+3)^(0+1280),c
  5212   0133CA  0E00               	movlw	0
  5213   0133CC  6E22               	movwf	(??_floorf+4)^(0+1280),c
  5214   0133CE                     u4855:
  5215   0133CE  661E               	tstfsz	??_floorf^(0+1280),c
  5216   0133D0  EFEC  F099         	goto	u4856
  5217   0133D4  EFF4  F099         	goto	u4857
  5218   0133D8                     u4856:
  5219   0133D8  3422               	rlcf	(??_floorf+4)^(0+1280),w,c
  5220   0133DA  3222               	rrcf	(??_floorf+4)^(0+1280),f,c
  5221   0133DC  3221               	rrcf	(??_floorf+3)^(0+1280),f,c
  5222   0133DE  3220               	rrcf	(??_floorf+2)^(0+1280),f,c
  5223   0133E0  321F               	rrcf	(??_floorf+1)^(0+1280),f,c
  5224   0133E2  2E1E               	decfsz	??_floorf^(0+1280),f,c
  5225   0133E4  EFE7  F099         	goto	u4855
  5226   0133E8                     u4857:
  5227   0133E8  C51F  F524         	movff	??_floorf+1,floorf@m
  5228   0133EC  C520  F525         	movff	??_floorf+2,floorf@m+1
  5229   0133F0  C521  F526         	movff	??_floorf+3,floorf@m+2
  5230   0133F4  C522  F527         	movff	??_floorf+4,floorf@m+3
  5231   0133F8  5024               	movf	floorf@m^(0+1280),w,c
  5232   0133FA  142A               	andwf	floorf@u^(0+1280),w,c
  5233   0133FC  6E1E               	movwf	??_floorf^(0+1280),c
  5234   0133FE  5025               	movf	(floorf@m+1)^(0+1280),w,c
  5235   013400  142B               	andwf	(floorf@u+1)^(0+1280),w,c
  5236   013402  6E1F               	movwf	(??_floorf+1)^(0+1280),c
  5237   013404  5026               	movf	(floorf@m+2)^(0+1280),w,c
  5238   013406  142C               	andwf	(floorf@u+2)^(0+1280),w,c
  5239   013408  6E20               	movwf	(??_floorf+2)^(0+1280),c
  5240   01340A  5027               	movf	(floorf@m+3)^(0+1280),w,c
  5241   01340C  142D               	andwf	(floorf@u+3)^(0+1280),w,c
  5242   01340E  6E21               	movwf	(??_floorf+3)^(0+1280),c
  5243   013410  501E               	movf	??_floorf^(0+1280),w,c
  5244   013412  101F               	iorwf	(??_floorf+1)^(0+1280),w,c
  5245   013414  1020               	iorwf	(??_floorf+2)^(0+1280),w,c
  5246   013416  1021               	iorwf	(??_floorf+3)^(0+1280),w,c
  5247   013418  A4D8               	btfss	status,2,c
  5248   01341A  EF11  F09A         	goto	u4861
  5249   01341E  EF13  F09A         	goto	u4860
  5250   013422                     u4861:
  5251   013422  EF15  F09A         	goto	l5197
  5252   013426                     u4860:
  5253   013426  EFCC  F099         	goto	l5189
  5254   01342A                     l5197:
  5255   01342A  C52A  F51E         	movff	floorf@u,??_floorf
  5256   01342E  C52B  F51F         	movff	floorf@u+1,??_floorf+1
  5257   013432  C52C  F520         	movff	floorf@u+2,??_floorf+2
  5258   013436  C52D  F521         	movff	floorf@u+3,??_floorf+3
  5259   01343A  0E20               	movlw	32
  5260   01343C  EF25  F09A         	goto	u4870
  5261   013440                     u4875:
  5262   013440  90D8               	bcf	status,0,c
  5263   013442  3221               	rrcf	(??_floorf+3)^(0+1280),f,c
  5264   013444  3220               	rrcf	(??_floorf+2)^(0+1280),f,c
  5265   013446  321F               	rrcf	(??_floorf+1)^(0+1280),f,c
  5266   013448  321E               	rrcf	??_floorf^(0+1280),f,c
  5267   01344A                     u4870:
  5268   01344A  2EE8               	decfsz	wreg,f,c
  5269   01344C  EF20  F09A         	goto	u4875
  5270   013450  501E               	movf	??_floorf^(0+1280),w,c
  5271   013452  101F               	iorwf	(??_floorf+1)^(0+1280),w,c
  5272   013454  1020               	iorwf	(??_floorf+2)^(0+1280),w,c
  5273   013456  1021               	iorwf	(??_floorf+3)^(0+1280),w,c
  5274   013458  B4D8               	btfsc	status,2,c
  5275   01345A  EF31  F09A         	goto	u4881
  5276   01345E  EF33  F09A         	goto	u4880
  5277   013462                     u4881:
  5278   013462  EF3B  F09A         	goto	l1467
  5279   013466                     u4880:
  5280   013466  5024               	movf	floorf@m^(0+1280),w,c
  5281   013468  262A               	addwf	floorf@u^(0+1280),f,c
  5282   01346A  5025               	movf	(floorf@m+1)^(0+1280),w,c
  5283   01346C  222B               	addwfc	(floorf@u+1)^(0+1280),f,c
  5284   01346E  5026               	movf	(floorf@m+2)^(0+1280),w,c
  5285   013470  222C               	addwfc	(floorf@u+2)^(0+1280),f,c
  5286   013472  5027               	movf	(floorf@m+3)^(0+1280),w,c
  5287   013474  222D               	addwfc	(floorf@u+3)^(0+1280),f,c
  5288   013476                     l1467:
  5289   013476  1C24               	comf	floorf@m^(0+1280),w,c
  5290   013478  6E1E               	movwf	??_floorf^(0+1280),c
  5291   01347A  1C25               	comf	(floorf@m+1)^(0+1280),w,c
  5292   01347C  6E1F               	movwf	(??_floorf+1)^(0+1280),c
  5293   01347E  1C26               	comf	(floorf@m+2)^(0+1280),w,c
  5294   013480  6E20               	movwf	(??_floorf+2)^(0+1280),c
  5295   013482  1C27               	comf	(floorf@m+3)^(0+1280),w,c
  5296   013484  6E21               	movwf	(??_floorf+3)^(0+1280),c
  5297   013486  501E               	movf	??_floorf^(0+1280),w,c
  5298   013488  162A               	andwf	floorf@u^(0+1280),f,c
  5299   01348A  501F               	movf	(??_floorf+1)^(0+1280),w,c
  5300   01348C  162B               	andwf	(floorf@u+1)^(0+1280),f,c
  5301   01348E  5020               	movf	(??_floorf+2)^(0+1280),w,c
  5302   013490  162C               	andwf	(floorf@u+2)^(0+1280),f,c
  5303   013492  5021               	movf	(??_floorf+3)^(0+1280),w,c
  5304   013494  162D               	andwf	(floorf@u+3)^(0+1280),f,c
  5305   013496  EF91  F09A         	goto	l5209
  5306   01349A                     l5201:
  5307   01349A  C52A  F51E         	movff	floorf@u,??_floorf
  5308   01349E  C52B  F51F         	movff	floorf@u+1,??_floorf+1
  5309   0134A2  C52C  F520         	movff	floorf@u+2,??_floorf+2
  5310   0134A6  C52D  F521         	movff	floorf@u+3,??_floorf+3
  5311   0134AA  0E20               	movlw	32
  5312   0134AC  EF5D  F09A         	goto	u4890
  5313   0134B0                     u4895:
  5314   0134B0  90D8               	bcf	status,0,c
  5315   0134B2  3221               	rrcf	(??_floorf+3)^(0+1280),f,c
  5316   0134B4  3220               	rrcf	(??_floorf+2)^(0+1280),f,c
  5317   0134B6  321F               	rrcf	(??_floorf+1)^(0+1280),f,c
  5318   0134B8  321E               	rrcf	??_floorf^(0+1280),f,c
  5319   0134BA                     u4890:
  5320   0134BA  2EE8               	decfsz	wreg,f,c
  5321   0134BC  EF58  F09A         	goto	u4895
  5322   0134C0  501E               	movf	??_floorf^(0+1280),w,c
  5323   0134C2  101F               	iorwf	(??_floorf+1)^(0+1280),w,c
  5324   0134C4  1020               	iorwf	(??_floorf+2)^(0+1280),w,c
  5325   0134C6  1021               	iorwf	(??_floorf+3)^(0+1280),w,c
  5326   0134C8  A4D8               	btfss	status,2,c
  5327   0134CA  EF69  F09A         	goto	u4901
  5328   0134CE  EF6B  F09A         	goto	u4900
  5329   0134D2                     u4901:
  5330   0134D2  EF75  F09A         	goto	l5205
  5331   0134D6                     u4900:
  5332   0134D6  0E00               	movlw	0
  5333   0134D8  6E2A               	movwf	floorf@u^(0+1280),c
  5334   0134DA  0E00               	movlw	0
  5335   0134DC  6E2B               	movwf	(floorf@u+1)^(0+1280),c
  5336   0134DE  0E00               	movlw	0
  5337   0134E0  6E2C               	movwf	(floorf@u+2)^(0+1280),c
  5338   0134E2  0E00               	movlw	0
  5339   0134E4  6E2D               	movwf	(floorf@u+3)^(0+1280),c
  5340   0134E6  EF91  F09A         	goto	l5209
  5341   0134EA                     l5205:
  5342   0134EA  90D8               	bcf	status,0,c
  5343   0134EC  342A               	rlcf	floorf@u^(0+1280),w,c
  5344   0134EE  6E1E               	movwf	??_floorf^(0+1280),c
  5345   0134F0  342B               	rlcf	(floorf@u+1)^(0+1280),w,c
  5346   0134F2  6E1F               	movwf	(??_floorf+1)^(0+1280),c
  5347   0134F4  342C               	rlcf	(floorf@u+2)^(0+1280),w,c
  5348   0134F6  6E20               	movwf	(??_floorf+2)^(0+1280),c
  5349   0134F8  342D               	rlcf	(floorf@u+3)^(0+1280),w,c
  5350   0134FA  6E21               	movwf	(??_floorf+3)^(0+1280),c
  5351   0134FC  501E               	movf	??_floorf^(0+1280),w,c
  5352   0134FE  101F               	iorwf	(??_floorf+1)^(0+1280),w,c
  5353   013500  1020               	iorwf	(??_floorf+2)^(0+1280),w,c
  5354   013502  1021               	iorwf	(??_floorf+3)^(0+1280),w,c
  5355   013504  B4D8               	btfsc	status,2,c
  5356   013506  EF87  F09A         	goto	u4911
  5357   01350A  EF89  F09A         	goto	u4910
  5358   01350E                     u4911:
  5359   01350E  EF91  F09A         	goto	l5209
  5360   013512                     u4910:
  5361   013512  0E00               	movlw	0
  5362   013514  6E2A               	movwf	floorf@u^(0+1280),c
  5363   013516  0E00               	movlw	0
  5364   013518  6E2B               	movwf	(floorf@u+1)^(0+1280),c
  5365   01351A  0E80               	movlw	128
  5366   01351C  6E2C               	movwf	(floorf@u+2)^(0+1280),c
  5367   01351E  0EBF               	movlw	191
  5368   013520  6E2D               	movwf	(floorf@u+3)^(0+1280),c
  5369   013522                     l5209:
  5370   013522  C52A  F51A         	movff	floorf@u,?_floorf
  5371   013526  C52B  F51B         	movff	floorf@u+1,?_floorf+1
  5372   01352A  C52C  F51C         	movff	floorf@u+2,?_floorf+2
  5373   01352E  C52D  F51D         	movff	floorf@u+3,?_floorf+3
  5374   013532                     l1464:
  5375   013532  0012               	return		;funcret
  5376   013534                     __end_of_floorf:
  5377                           	callstack 0
  5378                           
  5379 ;; *************** function ___fpclassifyf *****************
  5380 ;; Defined at:
  5381 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;  x               4    0[COMRAM] float 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  u               4   10[COMRAM] struct .
  5386 ;;  e               2    8[COMRAM] int 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;                  2    0[COMRAM] int 
  5389 ;; Registers used:
  5390 ;;		wreg, status,2, status,0
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5396 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5397 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5398 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5399 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5400 ;;Total ram usage:       14 bytes
  5401 ;; Hardware stack levels used: 1
  5402 ;; This function calls:
  5403 ;;		Nothing
  5404 ;; This function is called by:
  5405 ;;		_efgtoa
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text16
  5410   013D3C                     __ptext16:
  5411                           	callstack 0
  5412   013D3C                     ___fpclassifyf:
  5413                           	callstack 121
  5414   013D3C  C5D1  F50B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5415   013D40  C5D2  F50C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5416   013D44  C5D3  F50D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5417   013D48  C5D4  F50E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5418   013D4C  C501  F50B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5419   013D50  C502  F50C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5420   013D54  C503  F50D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5421   013D58  C504  F50E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5422   013D5C  C50B  F505         	movff	___fpclassifyf@u,??___fpclassifyf
  5423   013D60  C50C  F506         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5424   013D64  C50D  F507         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5425   013D68  C50E  F508         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5426   013D6C  0E18               	movlw	24
  5427   013D6E  EFBE  F09E         	goto	u4730
  5428   013D72                     u4735:
  5429   013D72  90D8               	bcf	status,0,c
  5430   013D74  3208               	rrcf	(??___fpclassifyf+3)^(0+1280),f,c
  5431   013D76  3207               	rrcf	(??___fpclassifyf+2)^(0+1280),f,c
  5432   013D78  3206               	rrcf	(??___fpclassifyf+1)^(0+1280),f,c
  5433   013D7A  3205               	rrcf	??___fpclassifyf^(0+1280),f,c
  5434   013D7C                     u4730:
  5435   013D7C  2EE8               	decfsz	wreg,f,c
  5436   013D7E  EFB9  F09E         	goto	u4735
  5437   013D82  5005               	movf	??___fpclassifyf^(0+1280),w,c
  5438   013D84  6E09               	movwf	___fpclassifyf@e^(0+1280),c
  5439   013D86  6A0A               	clrf	(___fpclassifyf@e+1)^(0+1280),c
  5440   013D88  5009               	movf	___fpclassifyf@e^(0+1280),w,c
  5441   013D8A  100A               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
  5442   013D8C  A4D8               	btfss	status,2,c
  5443   013D8E  EFCB  F09E         	goto	u4741
  5444   013D92  EFCD  F09E         	goto	u4740
  5445   013D96                     u4741:
  5446   013D96  EFED  F09E         	goto	l5167
  5447   013D9A                     u4740:
  5448   013D9A  90D8               	bcf	status,0,c
  5449   013D9C  340B               	rlcf	___fpclassifyf@u^(0+1280),w,c
  5450   013D9E  6E05               	movwf	??___fpclassifyf^(0+1280),c
  5451   013DA0  340C               	rlcf	(___fpclassifyf@u+1)^(0+1280),w,c
  5452   013DA2  6E06               	movwf	(??___fpclassifyf+1)^(0+1280),c
  5453   013DA4  340D               	rlcf	(___fpclassifyf@u+2)^(0+1280),w,c
  5454   013DA6  6E07               	movwf	(??___fpclassifyf+2)^(0+1280),c
  5455   013DA8  340E               	rlcf	(___fpclassifyf@u+3)^(0+1280),w,c
  5456   013DAA  6E08               	movwf	(??___fpclassifyf+3)^(0+1280),c
  5457   013DAC  5005               	movf	??___fpclassifyf^(0+1280),w,c
  5458   013DAE  1006               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
  5459   013DB0  1007               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
  5460   013DB2  1008               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
  5461   013DB4  A4D8               	btfss	status,2,c
  5462   013DB6  EFDF  F09E         	goto	u4751
  5463   013DBA  EFE1  F09E         	goto	u4750
  5464   013DBE                     u4751:
  5465   013DBE  EFE7  F09E         	goto	l5163
  5466   013DC2                     u4750:
  5467   013DC2  0E00               	movlw	0
  5468   013DC4  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
  5469   013DC6  0E02               	movlw	2
  5470   013DC8  6E01               	movwf	?___fpclassifyf^(0+1280),c
  5471   013DCA  EF1C  F09F         	goto	l1425
  5472   013DCE                     l5163:
  5473   013DCE  0E00               	movlw	0
  5474   013DD0  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
  5475   013DD2  0E03               	movlw	3
  5476   013DD4  6E01               	movwf	?___fpclassifyf^(0+1280),c
  5477   013DD6  EF1C  F09F         	goto	l1425
  5478   013DDA                     l5167:
  5479   013DDA  2809               	incf	___fpclassifyf@e^(0+1280),w,c
  5480   013DDC  100A               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
  5481   013DDE  A4D8               	btfss	status,2,c
  5482   013DE0  EFF4  F09E         	goto	u4761
  5483   013DE4  EFF6  F09E         	goto	u4760
  5484   013DE8                     u4761:
  5485   013DE8  EF18  F09F         	goto	l5173
  5486   013DEC                     u4760:
  5487   013DEC  C50B  F505         	movff	___fpclassifyf@u,??___fpclassifyf
  5488   013DF0  C50C  F506         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5489   013DF4  C50D  F507         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5490   013DF8  C50E  F508         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5491   013DFC  0E09               	movlw	9
  5492   013DFE                     u4775:
  5493   013DFE  90D8               	bcf	status,0,c
  5494   013E00  3605               	rlcf	??___fpclassifyf^(0+1280),f,c
  5495   013E02  3606               	rlcf	(??___fpclassifyf+1)^(0+1280),f,c
  5496   013E04  3607               	rlcf	(??___fpclassifyf+2)^(0+1280),f,c
  5497   013E06  3608               	rlcf	(??___fpclassifyf+3)^(0+1280),f,c
  5498   013E08  2EE8               	decfsz	wreg,f,c
  5499   013E0A  EFFF  F09E         	goto	u4775
  5500   013E0E  5005               	movf	??___fpclassifyf^(0+1280),w,c
  5501   013E10  1006               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
  5502   013E12  1007               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
  5503   013E14  1008               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
  5504   013E16  B4D8               	btfsc	status,2,c
  5505   013E18  EF10  F09F         	goto	u4781
  5506   013E1C  EF13  F09F         	goto	u4780
  5507   013E20                     u4781:
  5508   013E20  0E01               	movlw	1
  5509   013E22  EF14  F09F         	goto	u4790
  5510   013E26                     u4780:
  5511   013E26  0E00               	movlw	0
  5512   013E28                     u4790:
  5513   013E28  6E01               	movwf	?___fpclassifyf^(0+1280),c
  5514   013E2A  6A02               	clrf	(?___fpclassifyf+1)^(0+1280),c
  5515   013E2C  EF1C  F09F         	goto	l1425
  5516   013E30                     l5173:
  5517   013E30  0E00               	movlw	0
  5518   013E32  6E02               	movwf	(?___fpclassifyf+1)^(0+1280),c
  5519   013E34  0E04               	movlw	4
  5520   013E36  6E01               	movwf	?___fpclassifyf^(0+1280),c
  5521   013E38                     l1425:
  5522   013E38  0012               	return		;funcret
  5523   013E3A                     __end_of___fpclassifyf:
  5524                           	callstack 0
  5525                           
  5526 ;; *************** function ___fltol *****************
  5527 ;; Defined at:
  5528 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  f1              4    0[COMRAM] int 
  5531 ;; Auto vars:     Size  Location     Type
  5532 ;;  exp1            1    9[COMRAM] unsigned char 
  5533 ;;  sign1           1    8[COMRAM] unsigned char 
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  4    0[COMRAM] long 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5545 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5546 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5547 ;;Total ram usage:       10 bytes
  5548 ;; Hardware stack levels used: 1
  5549 ;; This function calls:
  5550 ;;		Nothing
  5551 ;; This function is called by:
  5552 ;;		_efgtoa
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text17
  5557   013B32                     __ptext17:
  5558                           	callstack 0
  5559   013B32                     ___fltol:
  5560                           	callstack 121
  5561   013B32  3403               	rlcf	(___fltol@f1+2)^(0+1280),w,c
  5562   013B34  3404               	rlcf	(___fltol@f1+3)^(0+1280),w,c
  5563   013B36  6E0A               	movwf	___fltol@exp1^(0+1280),c
  5564   013B38  500A               	movf	___fltol@exp1^(0+1280),w,c
  5565   013B3A  A4D8               	btfss	status,2,c
  5566   013B3C  EFA2  F09D         	goto	u4611
  5567   013B40  EFA4  F09D         	goto	u4610
  5568   013B44                     u4611:
  5569   013B44  EFAE  F09D         	goto	l5095
  5570   013B48                     u4610:
  5571   013B48                     l5091:
  5572   013B48  0E00               	movlw	0
  5573   013B4A  6E01               	movwf	?___fltol^(0+1280),c
  5574   013B4C  0E00               	movlw	0
  5575   013B4E  6E02               	movwf	(?___fltol+1)^(0+1280),c
  5576   013B50  0E00               	movlw	0
  5577   013B52  6E03               	movwf	(?___fltol+2)^(0+1280),c
  5578   013B54  0E00               	movlw	0
  5579   013B56  6E04               	movwf	(?___fltol+3)^(0+1280),c
  5580   013B58  EF1B  F09E         	goto	l860
  5581   013B5C                     l5095:
  5582   013B5C  C501  F505         	movff	___fltol@f1,??___fltol
  5583   013B60  C502  F506         	movff	___fltol@f1+1,??___fltol+1
  5584   013B64  C503  F507         	movff	___fltol@f1+2,??___fltol+2
  5585   013B68  C504  F508         	movff	___fltol@f1+3,??___fltol+3
  5586   013B6C  0E20               	movlw	32
  5587   013B6E  EFBE  F09D         	goto	u4620
  5588   013B72                     u4625:
  5589   013B72  90D8               	bcf	status,0,c
  5590   013B74  3208               	rrcf	(??___fltol+3)^(0+1280),f,c
  5591   013B76  3207               	rrcf	(??___fltol+2)^(0+1280),f,c
  5592   013B78  3206               	rrcf	(??___fltol+1)^(0+1280),f,c
  5593   013B7A  3205               	rrcf	??___fltol^(0+1280),f,c
  5594   013B7C                     u4620:
  5595   013B7C  2EE8               	decfsz	wreg,f,c
  5596   013B7E  EFB9  F09D         	goto	u4625
  5597   013B82  5005               	movf	??___fltol^(0+1280),w,c
  5598   013B84  6E09               	movwf	___fltol@sign1^(0+1280),c
  5599   013B86  8E03               	bsf	(___fltol@f1+2)^(0+1280),7,c
  5600   013B88  0EFF               	movlw	255
  5601   013B8A  1601               	andwf	___fltol@f1^(0+1280),f,c
  5602   013B8C  0EFF               	movlw	255
  5603   013B8E  1602               	andwf	(___fltol@f1+1)^(0+1280),f,c
  5604   013B90  0EFF               	movlw	255
  5605   013B92  1603               	andwf	(___fltol@f1+2)^(0+1280),f,c
  5606   013B94  0E00               	movlw	0
  5607   013B96  1604               	andwf	(___fltol@f1+3)^(0+1280),f,c
  5608   013B98  0E96               	movlw	150
  5609   013B9A  5E0A               	subwf	___fltol@exp1^(0+1280),f,c
  5610   013B9C  BE0A               	btfsc	___fltol@exp1^(0+1280),7,c
  5611   013B9E  EFD5  F09D         	goto	u4630
  5612   013BA2  EFD3  F09D         	goto	u4631
  5613   013BA6                     u4631:
  5614   013BA6  EFEB  F09D         	goto	l5115
  5615   013BAA                     u4630:
  5616   013BAA  500A               	movf	___fltol@exp1^(0+1280),w,c
  5617   013BAC  0A80               	xorlw	128
  5618   013BAE  0F97               	addlw	151
  5619   013BB0  B0D8               	btfsc	status,0,c
  5620   013BB2  EFDD  F09D         	goto	u4641
  5621   013BB6  EFDF  F09D         	goto	u4640
  5622   013BBA                     u4641:
  5623   013BBA  EFE1  F09D         	goto	l5111
  5624   013BBE                     u4640:
  5625   013BBE  EFA4  F09D         	goto	l5091
  5626   013BC2                     l5111:
  5627   013BC2  90D8               	bcf	status,0,c
  5628   013BC4  3204               	rrcf	(___fltol@f1+3)^(0+1280),f,c
  5629   013BC6  3203               	rrcf	(___fltol@f1+2)^(0+1280),f,c
  5630   013BC8  3202               	rrcf	(___fltol@f1+1)^(0+1280),f,c
  5631   013BCA  3201               	rrcf	___fltol@f1^(0+1280),f,c
  5632   013BCC  3E0A               	incfsz	___fltol@exp1^(0+1280),f,c
  5633   013BCE  EFE1  F09D         	goto	l5111
  5634   013BD2  EF03  F09E         	goto	l5125
  5635   013BD6                     l5115:
  5636   013BD6  0E1F               	movlw	31
  5637   013BD8  640A               	cpfsgt	___fltol@exp1^(0+1280),c
  5638   013BDA  EFF1  F09D         	goto	u4651
  5639   013BDE  EFF3  F09D         	goto	u4650
  5640   013BE2                     u4651:
  5641   013BE2  EFFB  F09D         	goto	l5123
  5642   013BE6                     u4650:
  5643   013BE6  EFA4  F09D         	goto	l5091
  5644   013BEA                     l5121:
  5645   013BEA  90D8               	bcf	status,0,c
  5646   013BEC  3601               	rlcf	___fltol@f1^(0+1280),f,c
  5647   013BEE  3602               	rlcf	(___fltol@f1+1)^(0+1280),f,c
  5648   013BF0  3603               	rlcf	(___fltol@f1+2)^(0+1280),f,c
  5649   013BF2  3604               	rlcf	(___fltol@f1+3)^(0+1280),f,c
  5650   013BF4  060A               	decf	___fltol@exp1^(0+1280),f,c
  5651   013BF6                     l5123:
  5652   013BF6  500A               	movf	___fltol@exp1^(0+1280),w,c
  5653   013BF8  A4D8               	btfss	status,2,c
  5654   013BFA  EF01  F09E         	goto	u4661
  5655   013BFE  EF03  F09E         	goto	u4660
  5656   013C02                     u4661:
  5657   013C02  EFF5  F09D         	goto	l5121
  5658   013C06                     u4660:
  5659   013C06                     l5125:
  5660   013C06  5009               	movf	___fltol@sign1^(0+1280),w,c
  5661   013C08  B4D8               	btfsc	status,2,c
  5662   013C0A  EF09  F09E         	goto	u4671
  5663   013C0E  EF0B  F09E         	goto	u4670
  5664   013C12                     u4671:
  5665   013C12  EF13  F09E         	goto	l5129
  5666   013C16                     u4670:
  5667   013C16  1E04               	comf	(___fltol@f1+3)^(0+1280),f,c
  5668   013C18  1E03               	comf	(___fltol@f1+2)^(0+1280),f,c
  5669   013C1A  1E02               	comf	(___fltol@f1+1)^(0+1280),f,c
  5670   013C1C  6C01               	negf	___fltol@f1^(0+1280),c
  5671   013C1E  0E00               	movlw	0
  5672   013C20  2202               	addwfc	(___fltol@f1+1)^(0+1280),f,c
  5673   013C22  2203               	addwfc	(___fltol@f1+2)^(0+1280),f,c
  5674   013C24  2204               	addwfc	(___fltol@f1+3)^(0+1280),f,c
  5675   013C26                     l5129:
  5676   013C26  C501  F501         	movff	___fltol@f1,?___fltol
  5677   013C2A  C502  F502         	movff	___fltol@f1+1,?___fltol+1
  5678   013C2E  C503  F503         	movff	___fltol@f1+2,?___fltol+2
  5679   013C32  C504  F504         	movff	___fltol@f1+3,?___fltol+3
  5680   013C36                     l860:
  5681   013C36  0012               	return		;funcret
  5682   013C38                     __end_of___fltol:
  5683                           	callstack 0
  5684                           
  5685 ;; *************** function ___flsub *****************
  5686 ;; Defined at:
  5687 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;  b               4   25[COMRAM] long 
  5690 ;;  a               4   29[COMRAM] long 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;		None
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  4   25[COMRAM] long 
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0, cstack
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5702 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5705 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5706 ;;Total ram usage:        8 bytes
  5707 ;; Hardware stack levels used: 1
  5708 ;; Hardware stack levels required when called: 1
  5709 ;; This function calls:
  5710 ;;		___fladd
  5711 ;; This function is called by:
  5712 ;;		_efgtoa
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text18
  5717   014798                     __ptext18:
  5718                           	callstack 0
  5719   014798                     ___flsub:
  5720                           	callstack 120
  5721   014798  0E00               	movlw	0
  5722   01479A  1A1E               	xorwf	___flsub@a^(0+1280),f,c
  5723   01479C  0E00               	movlw	0
  5724   01479E  1A1F               	xorwf	(___flsub@a+1)^(0+1280),f,c
  5725   0147A0  0E00               	movlw	0
  5726   0147A2  1A20               	xorwf	(___flsub@a+2)^(0+1280),f,c
  5727   0147A4  0E80               	movlw	128
  5728   0147A6  1A21               	xorwf	(___flsub@a+3)^(0+1280),f,c
  5729   0147A8  C51A  F501         	movff	___flsub@b,___fladd@b
  5730   0147AC  C51B  F502         	movff	___flsub@b+1,___fladd@b+1
  5731   0147B0  C51C  F503         	movff	___flsub@b+2,___fladd@b+2
  5732   0147B4  C51D  F504         	movff	___flsub@b+3,___fladd@b+3
  5733   0147B8  C51E  F505         	movff	___flsub@a,___fladd@a
  5734   0147BC  C51F  F506         	movff	___flsub@a+1,___fladd@a+1
  5735   0147C0  C520  F507         	movff	___flsub@a+2,___fladd@a+2
  5736   0147C4  C521  F508         	movff	___flsub@a+3,___fladd@a+3
  5737   0147C8  ECEA  F087         	call	___fladd	;wreg free
  5738   0147CC  C501  F51A         	movff	?___fladd,?___flsub
  5739   0147D0  C502  F51B         	movff	?___fladd+1,?___flsub+1
  5740   0147D4  C503  F51C         	movff	?___fladd+2,?___flsub+2
  5741   0147D8  C504  F51D         	movff	?___fladd+3,?___flsub+3
  5742   0147DC  0012               	return		;funcret
  5743   0147DE                     __end_of___flsub:
  5744                           	callstack 0
  5745                           
  5746 ;; *************** function ___fladd *****************
  5747 ;; Defined at:
  5748 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  b               4    0[COMRAM] long 
  5751 ;;  a               4    4[COMRAM] long 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  grs             1   15[COMRAM] unsigned char 
  5754 ;;  bexp            1   14[COMRAM] unsigned char 
  5755 ;;  aexp            1   13[COMRAM] unsigned char 
  5756 ;;  signs           1   12[COMRAM] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  4    0[COMRAM] unsigned char 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5766 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5767 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5768 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5769 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5770 ;;Total ram usage:       16 bytes
  5771 ;; Hardware stack levels used: 1
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		___flsub
  5776 ;;		_efgtoa
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text19
  5781   010FD4                     __ptext19:
  5782                           	callstack 0
  5783   010FD4                     ___fladd:
  5784                           	callstack 120
  5785   010FD4  5004               	movf	(___fladd@b+3)^(0+1280),w,c
  5786   010FD6  0B80               	andlw	128
  5787   010FD8  6E0D               	movwf	___fladd@signs^(0+1280),c
  5788   010FDA  5004               	movf	(___fladd@b+3)^(0+1280),w,c
  5789   010FDC  2404               	addwf	(___fladd@b+3)^(0+1280),w,c
  5790   010FDE  6E0F               	movwf	___fladd@bexp^(0+1280),c
  5791   010FE0  AE03               	btfss	(___fladd@b+2)^(0+1280),7,c
  5792   010FE2  EFF5  F087         	goto	u3571
  5793   010FE6  EFF7  F087         	goto	u3570
  5794   010FEA                     u3571:
  5795   010FEA  EFF8  F087         	goto	l4463
  5796   010FEE                     u3570:
  5797   010FEE  800F               	bsf	___fladd@bexp^(0+1280),0,c
  5798   010FF0                     l4463:
  5799   010FF0  500F               	movf	___fladd@bexp^(0+1280),w,c
  5800   010FF2  B4D8               	btfsc	status,2,c
  5801   010FF4  EFFE  F087         	goto	u3581
  5802   010FF8  EF00  F088         	goto	u3580
  5803   010FFC                     u3581:
  5804   010FFC  EF15  F088         	goto	l4473
  5805   011000                     u3580:
  5806   011000  280F               	incf	___fladd@bexp^(0+1280),w,c
  5807   011002  A4D8               	btfss	status,2,c
  5808   011004  EF06  F088         	goto	u3591
  5809   011008  EF08  F088         	goto	u3590
  5810   01100C                     u3591:
  5811   01100C  EF10  F088         	goto	l4469
  5812   011010                     u3590:
  5813   011010  0E00               	movlw	0
  5814   011012  6E01               	movwf	___fladd@b^(0+1280),c
  5815   011014  0E00               	movlw	0
  5816   011016  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  5817   011018  0E00               	movlw	0
  5818   01101A  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  5819   01101C  0E00               	movlw	0
  5820   01101E  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  5821   011020                     l4469:
  5822   011020  8E03               	bsf	(___fladd@b+2)^(0+1280),7,c
  5823   011022  0E00               	movlw	0
  5824   011024  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  5825   011026  EF1D  F088         	goto	l4475
  5826   01102A                     l4473:
  5827   01102A  0E00               	movlw	0
  5828   01102C  6E01               	movwf	___fladd@b^(0+1280),c
  5829   01102E  0E00               	movlw	0
  5830   011030  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  5831   011032  0E00               	movlw	0
  5832   011034  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  5833   011036  0E00               	movlw	0
  5834   011038  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  5835   01103A                     l4475:
  5836   01103A  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  5837   01103C  0B80               	andlw	128
  5838   01103E  6E0E               	movwf	___fladd@aexp^(0+1280),c
  5839   011040  500D               	movf	___fladd@signs^(0+1280),w,c
  5840   011042  180E               	xorwf	___fladd@aexp^(0+1280),w,c
  5841   011044  B4D8               	btfsc	status,2,c
  5842   011046  EF27  F088         	goto	u3601
  5843   01104A  EF29  F088         	goto	u3600
  5844   01104E                     u3601:
  5845   01104E  EF2A  F088         	goto	l4481
  5846   011052                     u3600:
  5847   011052  8C0D               	bsf	___fladd@signs^(0+1280),6,c
  5848   011054                     l4481:
  5849   011054  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  5850   011056  2408               	addwf	(___fladd@a+3)^(0+1280),w,c
  5851   011058  6E0E               	movwf	___fladd@aexp^(0+1280),c
  5852   01105A  AE07               	btfss	(___fladd@a+2)^(0+1280),7,c
  5853   01105C  EF32  F088         	goto	u3611
  5854   011060  EF34  F088         	goto	u3610
  5855   011064                     u3611:
  5856   011064  EF35  F088         	goto	l4487
  5857   011068                     u3610:
  5858   011068  800E               	bsf	___fladd@aexp^(0+1280),0,c
  5859   01106A                     l4487:
  5860   01106A  500E               	movf	___fladd@aexp^(0+1280),w,c
  5861   01106C  B4D8               	btfsc	status,2,c
  5862   01106E  EF3B  F088         	goto	u3621
  5863   011072  EF3D  F088         	goto	u3620
  5864   011076                     u3621:
  5865   011076  EF52  F088         	goto	l4497
  5866   01107A                     u3620:
  5867   01107A  280E               	incf	___fladd@aexp^(0+1280),w,c
  5868   01107C  A4D8               	btfss	status,2,c
  5869   01107E  EF43  F088         	goto	u3631
  5870   011082  EF45  F088         	goto	u3630
  5871   011086                     u3631:
  5872   011086  EF4D  F088         	goto	l4493
  5873   01108A                     u3630:
  5874   01108A  0E00               	movlw	0
  5875   01108C  6E05               	movwf	___fladd@a^(0+1280),c
  5876   01108E  0E00               	movlw	0
  5877   011090  6E06               	movwf	(___fladd@a+1)^(0+1280),c
  5878   011092  0E00               	movlw	0
  5879   011094  6E07               	movwf	(___fladd@a+2)^(0+1280),c
  5880   011096  0E00               	movlw	0
  5881   011098  6E08               	movwf	(___fladd@a+3)^(0+1280),c
  5882   01109A                     l4493:
  5883   01109A  8E07               	bsf	(___fladd@a+2)^(0+1280),7,c
  5884   01109C  0E00               	movlw	0
  5885   01109E  6E08               	movwf	(___fladd@a+3)^(0+1280),c
  5886   0110A0  EF5A  F088         	goto	l4499
  5887   0110A4                     l4497:
  5888   0110A4  0E00               	movlw	0
  5889   0110A6  6E05               	movwf	___fladd@a^(0+1280),c
  5890   0110A8  0E00               	movlw	0
  5891   0110AA  6E06               	movwf	(___fladd@a+1)^(0+1280),c
  5892   0110AC  0E00               	movlw	0
  5893   0110AE  6E07               	movwf	(___fladd@a+2)^(0+1280),c
  5894   0110B0  0E00               	movlw	0
  5895   0110B2  6E08               	movwf	(___fladd@a+3)^(0+1280),c
  5896   0110B4                     l4499:
  5897   0110B4  500F               	movf	___fladd@bexp^(0+1280),w,c
  5898   0110B6  5C0E               	subwf	___fladd@aexp^(0+1280),w,c
  5899   0110B8  B0D8               	btfsc	status,0,c
  5900   0110BA  EF61  F088         	goto	u3641
  5901   0110BE  EF63  F088         	goto	u3640
  5902   0110C2                     u3641:
  5903   0110C2  EF8A  F088         	goto	l4535
  5904   0110C6                     u3640:
  5905   0110C6  AC0D               	btfss	___fladd@signs^(0+1280),6,c
  5906   0110C8  EF68  F088         	goto	u3651
  5907   0110CC  EF6A  F088         	goto	u3650
  5908   0110D0                     u3651:
  5909   0110D0  EF6C  F088         	goto	l4505
  5910   0110D4                     u3650:
  5911   0110D4  0E80               	movlw	128
  5912   0110D6  1A0D               	xorwf	___fladd@signs^(0+1280),f,c
  5913   0110D8                     l4505:
  5914   0110D8  C50F  F510         	movff	___fladd@bexp,___fladd@grs
  5915   0110DC  C50E  F50F         	movff	___fladd@aexp,___fladd@bexp
  5916   0110E0  C510  F50E         	movff	___fladd@grs,___fladd@aexp
  5917   0110E4  C501  F510         	movff	___fladd@b,___fladd@grs
  5918   0110E8  C505  F501         	movff	___fladd@a,___fladd@b
  5919   0110EC  C510  F505         	movff	___fladd@grs,___fladd@a
  5920   0110F0  C502  F510         	movff	___fladd@b+1,___fladd@grs
  5921   0110F4  C506  F502         	movff	___fladd@a+1,___fladd@b+1
  5922   0110F8  C510  F506         	movff	___fladd@grs,___fladd@a+1
  5923   0110FC  C503  F510         	movff	___fladd@b+2,___fladd@grs
  5924   011100  C507  F503         	movff	___fladd@a+2,___fladd@b+2
  5925   011104  C510  F507         	movff	___fladd@grs,___fladd@a+2
  5926   011108  C504  F510         	movff	___fladd@b+3,___fladd@grs
  5927   01110C  C508  F504         	movff	___fladd@a+3,___fladd@b+3
  5928   011110  C510  F508         	movff	___fladd@grs,___fladd@a+3
  5929   011114                     l4535:
  5930   011114  0E00               	movlw	0
  5931   011116  6E10               	movwf	___fladd@grs^(0+1280),c
  5932   011118  500F               	movf	___fladd@bexp^(0+1280),w,c
  5933   01111A  C50E  F509         	movff	___fladd@aexp,??___fladd
  5934   01111E  6A0A               	clrf	(??___fladd+1)^(0+1280),c
  5935   011120  5E09               	subwf	??___fladd^(0+1280),f,c
  5936   011122  0E00               	movlw	0
  5937   011124  5A0A               	subwfb	(??___fladd+1)^(0+1280),f,c
  5938   011126  BE0A               	btfsc	(??___fladd+1)^(0+1280),7,c
  5939   011128  EF9F  F088         	goto	u3661
  5940   01112C  500A               	movf	(??___fladd+1)^(0+1280),w,c
  5941   01112E  E109               	bnz	u3660
  5942   011130  0E1A               	movlw	26
  5943   011132  5C09               	subwf	??___fladd^(0+1280),w,c
  5944   011134  A0D8               	btfss	status,0,c
  5945   011136  EF9F  F088         	goto	u3661
  5946   01113A  EFA1  F088         	goto	u3660
  5947   01113E                     u3661:
  5948   01113E  EFD8  F088         	goto	l1092
  5949   011142                     u3660:
  5950   011142  5001               	movf	___fladd@b^(0+1280),w,c
  5951   011144  1002               	iorwf	(___fladd@b+1)^(0+1280),w,c
  5952   011146  1003               	iorwf	(___fladd@b+2)^(0+1280),w,c
  5953   011148  1004               	iorwf	(___fladd@b+3)^(0+1280),w,c
  5954   01114A  A4D8               	btfss	status,2,c
  5955   01114C  EFAA  F088         	goto	u3671
  5956   011150  EFAD  F088         	goto	u3670
  5957   011154                     u3671:
  5958   011154  0E01               	movlw	1
  5959   011156  EFAE  F088         	goto	u3680
  5960   01115A                     u3670:
  5961   01115A  0E00               	movlw	0
  5962   01115C                     u3680:
  5963   01115C  6E10               	movwf	___fladd@grs^(0+1280),c
  5964   01115E  0E00               	movlw	0
  5965   011160  6E01               	movwf	___fladd@b^(0+1280),c
  5966   011162  0E00               	movlw	0
  5967   011164  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  5968   011166  0E00               	movlw	0
  5969   011168  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  5970   01116A  0E00               	movlw	0
  5971   01116C  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  5972   01116E  C50E  F50F         	movff	___fladd@aexp,___fladd@bexp
  5973   011172  EFE1  F088         	goto	l1091
  5974   011176                     l1093:
  5975   011176  A010               	btfss	___fladd@grs^(0+1280),0,c
  5976   011178  EFC0  F088         	goto	u3691
  5977   01117C  EFC2  F088         	goto	u3690
  5978   011180                     u3691:
  5979   011180  EFC8  F088         	goto	l4547
  5980   011184                     u3690:
  5981   011184  90D8               	bcf	status,0,c
  5982   011186  3010               	rrcf	___fladd@grs^(0+1280),w,c
  5983   011188  0901               	iorlw	1
  5984   01118A  6E10               	movwf	___fladd@grs^(0+1280),c
  5985   01118C  EFCA  F088         	goto	l4549
  5986   011190                     l4547:
  5987   011190  90D8               	bcf	status,0,c
  5988   011192  3210               	rrcf	___fladd@grs^(0+1280),f,c
  5989   011194                     l4549:
  5990   011194  A001               	btfss	___fladd@b^(0+1280),0,c
  5991   011196  EFCF  F088         	goto	u3701
  5992   01119A  EFD1  F088         	goto	u3700
  5993   01119E                     u3701:
  5994   01119E  EFD2  F088         	goto	l4553
  5995   0111A2                     u3700:
  5996   0111A2  8E10               	bsf	___fladd@grs^(0+1280),7,c
  5997   0111A4                     l4553:
  5998   0111A4  3404               	rlcf	(___fladd@b+3)^(0+1280),w,c
  5999   0111A6  3204               	rrcf	(___fladd@b+3)^(0+1280),f,c
  6000   0111A8  3203               	rrcf	(___fladd@b+2)^(0+1280),f,c
  6001   0111AA  3202               	rrcf	(___fladd@b+1)^(0+1280),f,c
  6002   0111AC  3201               	rrcf	___fladd@b^(0+1280),f,c
  6003   0111AE  2A0F               	incf	___fladd@bexp^(0+1280),f,c
  6004   0111B0                     l1092:
  6005   0111B0  500E               	movf	___fladd@aexp^(0+1280),w,c
  6006   0111B2  5C0F               	subwf	___fladd@bexp^(0+1280),w,c
  6007   0111B4  A0D8               	btfss	status,0,c
  6008   0111B6  EFDF  F088         	goto	u3711
  6009   0111BA  EFE1  F088         	goto	u3710
  6010   0111BE                     u3711:
  6011   0111BE  EFBB  F088         	goto	l1093
  6012   0111C2                     u3710:
  6013   0111C2                     l1091:
  6014   0111C2  BC0D               	btfsc	___fladd@signs^(0+1280),6,c
  6015   0111C4  EFE6  F088         	goto	u3721
  6016   0111C8  EFE8  F088         	goto	u3720
  6017   0111CC                     u3721:
  6018   0111CC  EF28  F089         	goto	l4581
  6019   0111D0                     u3720:
  6020   0111D0  500F               	movf	___fladd@bexp^(0+1280),w,c
  6021   0111D2  A4D8               	btfss	status,2,c
  6022   0111D4  EFEE  F088         	goto	u3731
  6023   0111D8  EFF0  F088         	goto	u3730
  6024   0111DC                     u3731:
  6025   0111DC  EFFA  F088         	goto	l4563
  6026   0111E0                     u3730:
  6027   0111E0  0E00               	movlw	0
  6028   0111E2  6E01               	movwf	?___fladd^(0+1280),c
  6029   0111E4  0E00               	movlw	0
  6030   0111E6  6E02               	movwf	(?___fladd+1)^(0+1280),c
  6031   0111E8  0E00               	movlw	0
  6032   0111EA  6E03               	movwf	(?___fladd+2)^(0+1280),c
  6033   0111EC  0E00               	movlw	0
  6034   0111EE  6E04               	movwf	(?___fladd+3)^(0+1280),c
  6035   0111F0  EF49  F08A         	goto	l1100
  6036   0111F4                     l4563:
  6037   0111F4  5005               	movf	___fladd@a^(0+1280),w,c
  6038   0111F6  2601               	addwf	___fladd@b^(0+1280),f,c
  6039   0111F8  5006               	movf	(___fladd@a+1)^(0+1280),w,c
  6040   0111FA  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
  6041   0111FC  5007               	movf	(___fladd@a+2)^(0+1280),w,c
  6042   0111FE  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
  6043   011200  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  6044   011202  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
  6045   011204  A004               	btfss	(___fladd@b+3)^(0+1280),0,c
  6046   011206  EF07  F089         	goto	u3741
  6047   01120A  EF09  F089         	goto	u3740
  6048   01120E                     u3741:
  6049   01120E  EFB5  F089         	goto	l4617
  6050   011212                     u3740:
  6051   011212  A010               	btfss	___fladd@grs^(0+1280),0,c
  6052   011214  EF0E  F089         	goto	u3751
  6053   011218  EF10  F089         	goto	u3750
  6054   01121C                     u3751:
  6055   01121C  EF16  F089         	goto	l4571
  6056   011220                     u3750:
  6057   011220  90D8               	bcf	status,0,c
  6058   011222  3010               	rrcf	___fladd@grs^(0+1280),w,c
  6059   011224  0901               	iorlw	1
  6060   011226  6E10               	movwf	___fladd@grs^(0+1280),c
  6061   011228  EF18  F089         	goto	l4573
  6062   01122C                     l4571:
  6063   01122C  90D8               	bcf	status,0,c
  6064   01122E  3210               	rrcf	___fladd@grs^(0+1280),f,c
  6065   011230                     l4573:
  6066   011230  A001               	btfss	___fladd@b^(0+1280),0,c
  6067   011232  EF1D  F089         	goto	u3761
  6068   011236  EF1F  F089         	goto	u3760
  6069   01123A                     u3761:
  6070   01123A  EF20  F089         	goto	l4577
  6071   01123E                     u3760:
  6072   01123E  8E10               	bsf	___fladd@grs^(0+1280),7,c
  6073   011240                     l4577:
  6074   011240  3404               	rlcf	(___fladd@b+3)^(0+1280),w,c
  6075   011242  3204               	rrcf	(___fladd@b+3)^(0+1280),f,c
  6076   011244  3203               	rrcf	(___fladd@b+2)^(0+1280),f,c
  6077   011246  3202               	rrcf	(___fladd@b+1)^(0+1280),f,c
  6078   011248  3201               	rrcf	___fladd@b^(0+1280),f,c
  6079   01124A  2A0F               	incf	___fladd@bexp^(0+1280),f,c
  6080   01124C  EFB5  F089         	goto	l4617
  6081   011250                     l4581:
  6082   011250  5005               	movf	___fladd@a^(0+1280),w,c
  6083   011252  5C01               	subwf	___fladd@b^(0+1280),w,c
  6084   011254  5006               	movf	(___fladd@a+1)^(0+1280),w,c
  6085   011256  5802               	subwfb	(___fladd@b+1)^(0+1280),w,c
  6086   011258  5007               	movf	(___fladd@a+2)^(0+1280),w,c
  6087   01125A  5803               	subwfb	(___fladd@b+2)^(0+1280),w,c
  6088   01125C  5004               	movf	(___fladd@b+3)^(0+1280),w,c
  6089   01125E  0A80               	xorlw	128
  6090   011260  6E09               	movwf	??___fladd^(0+1280),c
  6091   011262  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  6092   011264  0A80               	xorlw	128
  6093   011266  5809               	subwfb	??___fladd^(0+1280),w,c
  6094   011268  B0D8               	btfsc	status,0,c
  6095   01126A  EF39  F089         	goto	u3771
  6096   01126E  EF3B  F089         	goto	u3770
  6097   011272                     u3771:
  6098   011272  EF66  F089         	goto	l4591
  6099   011276                     u3770:
  6100   011276  5001               	movf	___fladd@b^(0+1280),w,c
  6101   011278  5C05               	subwf	___fladd@a^(0+1280),w,c
  6102   01127A  6E09               	movwf	??___fladd^(0+1280),c
  6103   01127C  5002               	movf	(___fladd@b+1)^(0+1280),w,c
  6104   01127E  5806               	subwfb	(___fladd@a+1)^(0+1280),w,c
  6105   011280  6E0A               	movwf	(??___fladd+1)^(0+1280),c
  6106   011282  5003               	movf	(___fladd@b+2)^(0+1280),w,c
  6107   011284  5807               	subwfb	(___fladd@a+2)^(0+1280),w,c
  6108   011286  6E0B               	movwf	(??___fladd+2)^(0+1280),c
  6109   011288  5004               	movf	(___fladd@b+3)^(0+1280),w,c
  6110   01128A  5808               	subwfb	(___fladd@a+3)^(0+1280),w,c
  6111   01128C  6E0C               	movwf	(??___fladd+3)^(0+1280),c
  6112   01128E  0EFF               	movlw	255
  6113   011290  2409               	addwf	??___fladd^(0+1280),w,c
  6114   011292  6E01               	movwf	___fladd@b^(0+1280),c
  6115   011294  0EFF               	movlw	255
  6116   011296  200A               	addwfc	(??___fladd+1)^(0+1280),w,c
  6117   011298  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  6118   01129A  0EFF               	movlw	255
  6119   01129C  200B               	addwfc	(??___fladd+2)^(0+1280),w,c
  6120   01129E  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  6121   0112A0  0EFF               	movlw	255
  6122   0112A2  200C               	addwfc	(??___fladd+3)^(0+1280),w,c
  6123   0112A4  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  6124   0112A6  0E80               	movlw	128
  6125   0112A8  1A0D               	xorwf	___fladd@signs^(0+1280),f,c
  6126   0112AA  6C10               	negf	___fladd@grs^(0+1280),c
  6127   0112AC  5010               	movf	___fladd@grs^(0+1280),w,c
  6128   0112AE  A4D8               	btfss	status,2,c
  6129   0112B0  EF5C  F089         	goto	u3781
  6130   0112B4  EF5E  F089         	goto	u3780
  6131   0112B8                     u3781:
  6132   0112B8  EF6E  F089         	goto	l1108
  6133   0112BC                     u3780:
  6134   0112BC  0E01               	movlw	1
  6135   0112BE  2601               	addwf	___fladd@b^(0+1280),f,c
  6136   0112C0  0E00               	movlw	0
  6137   0112C2  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
  6138   0112C4  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
  6139   0112C6  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
  6140   0112C8  EF6E  F089         	goto	l1108
  6141   0112CC                     l4591:
  6142   0112CC  5005               	movf	___fladd@a^(0+1280),w,c
  6143   0112CE  5E01               	subwf	___fladd@b^(0+1280),f,c
  6144   0112D0  5006               	movf	(___fladd@a+1)^(0+1280),w,c
  6145   0112D2  5A02               	subwfb	(___fladd@b+1)^(0+1280),f,c
  6146   0112D4  5007               	movf	(___fladd@a+2)^(0+1280),w,c
  6147   0112D6  5A03               	subwfb	(___fladd@b+2)^(0+1280),f,c
  6148   0112D8  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  6149   0112DA  5A04               	subwfb	(___fladd@b+3)^(0+1280),f,c
  6150   0112DC                     l1108:
  6151   0112DC  5001               	movf	___fladd@b^(0+1280),w,c
  6152   0112DE  1002               	iorwf	(___fladd@b+1)^(0+1280),w,c
  6153   0112E0  1003               	iorwf	(___fladd@b+2)^(0+1280),w,c
  6154   0112E2  1004               	iorwf	(___fladd@b+3)^(0+1280),w,c
  6155   0112E4  A4D8               	btfss	status,2,c
  6156   0112E6  EF77  F089         	goto	u3791
  6157   0112EA  EF79  F089         	goto	u3790
  6158   0112EE                     u3791:
  6159   0112EE  EFAE  F089         	goto	l4615
  6160   0112F2                     u3790:
  6161   0112F2  5010               	movf	___fladd@grs^(0+1280),w,c
  6162   0112F4  A4D8               	btfss	status,2,c
  6163   0112F6  EF7F  F089         	goto	u3801
  6164   0112FA  EF81  F089         	goto	u3800
  6165   0112FE                     u3801:
  6166   0112FE  EFAE  F089         	goto	l4615
  6167   011302                     u3800:
  6168   011302  0E00               	movlw	0
  6169   011304  6E01               	movwf	?___fladd^(0+1280),c
  6170   011306  0E00               	movlw	0
  6171   011308  6E02               	movwf	(?___fladd+1)^(0+1280),c
  6172   01130A  0E00               	movlw	0
  6173   01130C  6E03               	movwf	(?___fladd+2)^(0+1280),c
  6174   01130E  0E00               	movlw	0
  6175   011310  6E04               	movwf	(?___fladd+3)^(0+1280),c
  6176   011312  EF49  F08A         	goto	l1100
  6177   011316                     l4599:
  6178   011316  90D8               	bcf	status,0,c
  6179   011318  3601               	rlcf	___fladd@b^(0+1280),f,c
  6180   01131A  3602               	rlcf	(___fladd@b+1)^(0+1280),f,c
  6181   01131C  3603               	rlcf	(___fladd@b+2)^(0+1280),f,c
  6182   01131E  3604               	rlcf	(___fladd@b+3)^(0+1280),f,c
  6183   011320  AE10               	btfss	___fladd@grs^(0+1280),7,c
  6184   011322  EF95  F089         	goto	u3811
  6185   011326  EF97  F089         	goto	u3810
  6186   01132A                     u3811:
  6187   01132A  EF98  F089         	goto	l4605
  6188   01132E                     u3810:
  6189   01132E  8001               	bsf	___fladd@b^(0+1280),0,c
  6190   011330                     l4605:
  6191   011330  A010               	btfss	___fladd@grs^(0+1280),0,c
  6192   011332  EF9D  F089         	goto	u3821
  6193   011336  EF9F  F089         	goto	u3820
  6194   01133A                     u3821:
  6195   01133A  EFA3  F089         	goto	l4609
  6196   01133E                     u3820:
  6197   01133E  80D8               	bsf	status,0,c
  6198   011340  3610               	rlcf	___fladd@grs^(0+1280),f,c
  6199   011342  EFA5  F089         	goto	l4611
  6200   011346                     l4609:
  6201   011346  90D8               	bcf	status,0,c
  6202   011348  3610               	rlcf	___fladd@grs^(0+1280),f,c
  6203   01134A                     l4611:
  6204   01134A  500F               	movf	___fladd@bexp^(0+1280),w,c
  6205   01134C  B4D8               	btfsc	status,2,c
  6206   01134E  EFAB  F089         	goto	u3831
  6207   011352  EFAD  F089         	goto	u3830
  6208   011356                     u3831:
  6209   011356  EFAE  F089         	goto	l4615
  6210   01135A                     u3830:
  6211   01135A  060F               	decf	___fladd@bexp^(0+1280),f,c
  6212   01135C                     l4615:
  6213   01135C  AE03               	btfss	(___fladd@b+2)^(0+1280),7,c
  6214   01135E  EFB3  F089         	goto	u3841
  6215   011362  EFB5  F089         	goto	u3840
  6216   011366                     u3841:
  6217   011366  EF8B  F089         	goto	l4599
  6218   01136A                     u3840:
  6219   01136A                     l4617:
  6220   01136A  0E00               	movlw	0
  6221   01136C  6E0E               	movwf	___fladd@aexp^(0+1280),c
  6222   01136E  AE10               	btfss	___fladd@grs^(0+1280),7,c
  6223   011370  EFBC  F089         	goto	u3851
  6224   011374  EFBE  F089         	goto	u3850
  6225   011378                     u3851:
  6226   011378  EFD6  F089         	goto	l1117
  6227   01137C                     u3850:
  6228   01137C  C510  F509         	movff	___fladd@grs,??___fladd
  6229   011380  0E7F               	movlw	127
  6230   011382  1609               	andwf	??___fladd^(0+1280),f,c
  6231   011384  B4D8               	btfsc	status,2,c
  6232   011386  EFC7  F089         	goto	u3861
  6233   01138A  EFC9  F089         	goto	u3860
  6234   01138E                     u3861:
  6235   01138E  EFCD  F089         	goto	l1118
  6236   011392                     u3860:
  6237   011392                     l4623:
  6238   011392  0E01               	movlw	1
  6239   011394  6E0E               	movwf	___fladd@aexp^(0+1280),c
  6240   011396  EFD6  F089         	goto	l1117
  6241   01139A                     l1118:
  6242   01139A  A001               	btfss	___fladd@b^(0+1280),0,c
  6243   01139C  EFD2  F089         	goto	u3871
  6244   0113A0  EFD4  F089         	goto	u3870
  6245   0113A4                     u3871:
  6246   0113A4  EFD6  F089         	goto	l1117
  6247   0113A8                     u3870:
  6248   0113A8  EFC9  F089         	goto	l4623
  6249   0113AC                     l1117:
  6250   0113AC  500E               	movf	___fladd@aexp^(0+1280),w,c
  6251   0113AE  B4D8               	btfsc	status,2,c
  6252   0113B0  EFDC  F089         	goto	u3881
  6253   0113B4  EFDE  F089         	goto	u3880
  6254   0113B8                     u3881:
  6255   0113B8  EF09  F08A         	goto	l4635
  6256   0113BC                     u3880:
  6257   0113BC  0E01               	movlw	1
  6258   0113BE  2601               	addwf	___fladd@b^(0+1280),f,c
  6259   0113C0  0E00               	movlw	0
  6260   0113C2  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
  6261   0113C4  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
  6262   0113C6  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
  6263   0113C8  A004               	btfss	(___fladd@b+3)^(0+1280),0,c
  6264   0113CA  EFE9  F089         	goto	u3891
  6265   0113CE  EFEB  F089         	goto	u3890
  6266   0113D2                     u3891:
  6267   0113D2  EF09  F08A         	goto	l4635
  6268   0113D6                     u3890:
  6269   0113D6  C501  F509         	movff	___fladd@b,??___fladd
  6270   0113DA  C502  F50A         	movff	___fladd@b+1,??___fladd+1
  6271   0113DE  C503  F50B         	movff	___fladd@b+2,??___fladd+2
  6272   0113E2  C504  F50C         	movff	___fladd@b+3,??___fladd+3
  6273   0113E6  340C               	rlcf	(??___fladd+3)^(0+1280),w,c
  6274   0113E8  320C               	rrcf	(??___fladd+3)^(0+1280),f,c
  6275   0113EA  320B               	rrcf	(??___fladd+2)^(0+1280),f,c
  6276   0113EC  320A               	rrcf	(??___fladd+1)^(0+1280),f,c
  6277   0113EE  3209               	rrcf	??___fladd^(0+1280),f,c
  6278   0113F0  C509  F501         	movff	??___fladd,___fladd@b
  6279   0113F4  C50A  F502         	movff	??___fladd+1,___fladd@b+1
  6280   0113F8  C50B  F503         	movff	??___fladd+2,___fladd@b+2
  6281   0113FC  C50C  F504         	movff	??___fladd+3,___fladd@b+3
  6282   011400  280F               	incf	___fladd@bexp^(0+1280),w,c
  6283   011402  B4D8               	btfsc	status,2,c
  6284   011404  EF06  F08A         	goto	u3901
  6285   011408  EF08  F08A         	goto	u3900
  6286   01140C                     u3901:
  6287   01140C  EF09  F08A         	goto	l4635
  6288   011410                     u3900:
  6289   011410  2A0F               	incf	___fladd@bexp^(0+1280),f,c
  6290   011412                     l4635:
  6291   011412  280F               	incf	___fladd@bexp^(0+1280),w,c
  6292   011414  B4D8               	btfsc	status,2,c
  6293   011416  EF0F  F08A         	goto	u3911
  6294   01141A  EF11  F08A         	goto	u3910
  6295   01141E                     u3911:
  6296   01141E  EF19  F08A         	goto	l4639
  6297   011422                     u3910:
  6298   011422  500F               	movf	___fladd@bexp^(0+1280),w,c
  6299   011424  A4D8               	btfss	status,2,c
  6300   011426  EF17  F08A         	goto	u3921
  6301   01142A  EF19  F08A         	goto	u3920
  6302   01142E                     u3921:
  6303   01142E  EF2B  F08A         	goto	l4643
  6304   011432                     u3920:
  6305   011432                     l4639:
  6306   011432  0E00               	movlw	0
  6307   011434  6E01               	movwf	___fladd@b^(0+1280),c
  6308   011436  0E00               	movlw	0
  6309   011438  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  6310   01143A  0E00               	movlw	0
  6311   01143C  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  6312   01143E  0E00               	movlw	0
  6313   011440  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  6314   011442  500F               	movf	___fladd@bexp^(0+1280),w,c
  6315   011444  A4D8               	btfss	status,2,c
  6316   011446  EF27  F08A         	goto	u3931
  6317   01144A  EF29  F08A         	goto	u3930
  6318   01144E                     u3931:
  6319   01144E  EF2B  F08A         	goto	l4643
  6320   011452                     u3930:
  6321   011452  0E00               	movlw	0
  6322   011454  6E0D               	movwf	___fladd@signs^(0+1280),c
  6323   011456                     l4643:
  6324   011456  A00F               	btfss	___fladd@bexp^(0+1280),0,c
  6325   011458  EF30  F08A         	goto	u3941
  6326   01145C  EF32  F08A         	goto	u3940
  6327   011460                     u3941:
  6328   011460  EF35  F08A         	goto	l4647
  6329   011464                     u3940:
  6330   011464  8E03               	bsf	(___fladd@b+2)^(0+1280),7,c
  6331   011466  EF36  F08A         	goto	l4649
  6332   01146A                     l4647:
  6333   01146A  9E03               	bcf	(___fladd@b+2)^(0+1280),7,c
  6334   01146C                     l4649:
  6335   01146C  90D8               	bcf	status,0,c
  6336   01146E  300F               	rrcf	___fladd@bexp^(0+1280),w,c
  6337   011470  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  6338   011472  AE0D               	btfss	___fladd@signs^(0+1280),7,c
  6339   011474  EF3E  F08A         	goto	u3951
  6340   011478  EF40  F08A         	goto	u3950
  6341   01147C                     u3951:
  6342   01147C  EF41  F08A         	goto	l4655
  6343   011480                     u3950:
  6344   011480  8E04               	bsf	(___fladd@b+3)^(0+1280),7,c
  6345   011482                     l4655:
  6346   011482  C501  F501         	movff	___fladd@b,?___fladd
  6347   011486  C502  F502         	movff	___fladd@b+1,?___fladd+1
  6348   01148A  C503  F503         	movff	___fladd@b+2,?___fladd+2
  6349   01148E  C504  F504         	movff	___fladd@b+3,?___fladd+3
  6350   011492                     l1100:
  6351   011492  0012               	return		;funcret
  6352   011494                     __end_of___fladd:
  6353                           	callstack 0
  6354                           
  6355 ;; *************** function ___flneg *****************
  6356 ;; Defined at:
  6357 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;  f1              4    0[COMRAM] unsigned char 
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;		None
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  4    0[COMRAM] unsigned char 
  6364 ;; Registers used:
  6365 ;;		wreg, status,2, status,0
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6374 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6375 ;;Total ram usage:        4 bytes
  6376 ;; Hardware stack levels used: 1
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_efgtoa
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           	psect	text20
  6385   014972                     __ptext20:
  6386                           	callstack 0
  6387   014972                     ___flneg:
  6388                           	callstack 121
  6389   014972  5001               	movf	___flneg@f1^(0+1280),w,c
  6390   014974  1002               	iorwf	(___flneg@f1+1)^(0+1280),w,c
  6391   014976  1003               	iorwf	(___flneg@f1+2)^(0+1280),w,c
  6392   014978  1004               	iorwf	(___flneg@f1+3)^(0+1280),w,c
  6393   01497A  B4D8               	btfsc	status,2,c
  6394   01497C  EFC2  F0A4         	goto	u4601
  6395   014980  EFC4  F0A4         	goto	u4600
  6396   014984                     u4601:
  6397   014984  EFCC  F0A4         	goto	l5085
  6398   014988                     u4600:
  6399   014988  0E00               	movlw	0
  6400   01498A  1A01               	xorwf	___flneg@f1^(0+1280),f,c
  6401   01498C  0E00               	movlw	0
  6402   01498E  1A02               	xorwf	(___flneg@f1+1)^(0+1280),f,c
  6403   014990  0E00               	movlw	0
  6404   014992  1A03               	xorwf	(___flneg@f1+2)^(0+1280),f,c
  6405   014994  0E80               	movlw	128
  6406   014996  1A04               	xorwf	(___flneg@f1+3)^(0+1280),f,c
  6407   014998                     l5085:
  6408   014998  C501  F501         	movff	___flneg@f1,?___flneg
  6409   01499C  C502  F502         	movff	___flneg@f1+1,?___flneg+1
  6410   0149A0  C503  F503         	movff	___flneg@f1+2,?___flneg+2
  6411   0149A4  C504  F504         	movff	___flneg@f1+3,?___flneg+3
  6412   0149A8  0012               	return		;funcret
  6413   0149AA                     __end_of___flneg:
  6414                           	callstack 0
  6415                           
  6416 ;; *************** function ___flmul *****************
  6417 ;; Defined at:
  6418 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  b               4    0[COMRAM] unsigned char 
  6421 ;;  a               4    4[COMRAM] unsigned char 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;  prod            4   19[COMRAM] struct .
  6424 ;;  grs             4   13[COMRAM] unsigned long 
  6425 ;;  temp            2   23[COMRAM] struct .
  6426 ;;  bexp            1   18[COMRAM] unsigned char 
  6427 ;;  aexp            1   17[COMRAM] unsigned char 
  6428 ;;  sign            1   12[COMRAM] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  4    0[COMRAM] unsigned char 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0, prodl, prodh
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6438 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6439 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6440 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6441 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6442 ;;Total ram usage:       25 bytes
  6443 ;; Hardware stack levels used: 1
  6444 ;; This function calls:
  6445 ;;		Nothing
  6446 ;; This function is called by:
  6447 ;;		_main
  6448 ;;		_efgtoa
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text21
  6453   011494                     __ptext21:
  6454                           	callstack 0
  6455   011494                     ___flmul:
  6456                           	callstack 126
  6457   011494  5004               	movf	(___flmul@b+3)^(0+1280),w,c
  6458   011496  0B80               	andlw	128
  6459   011498  6E0D               	movwf	___flmul@sign^(0+1280),c
  6460   01149A  5004               	movf	(___flmul@b+3)^(0+1280),w,c
  6461   01149C  2404               	addwf	(___flmul@b+3)^(0+1280),w,c
  6462   01149E  6E13               	movwf	___flmul@bexp^(0+1280),c
  6463   0114A0  AE03               	btfss	(___flmul@b+2)^(0+1280),7,c
  6464   0114A2  EF55  F08A         	goto	u4331
  6465   0114A6  EF57  F08A         	goto	u4330
  6466   0114AA                     u4331:
  6467   0114AA  EF58  F08A         	goto	l4913
  6468   0114AE                     u4330:
  6469   0114AE  8013               	bsf	___flmul@bexp^(0+1280),0,c
  6470   0114B0                     l4913:
  6471   0114B0  5013               	movf	___flmul@bexp^(0+1280),w,c
  6472   0114B2  B4D8               	btfsc	status,2,c
  6473   0114B4  EF5E  F08A         	goto	u4341
  6474   0114B8  EF60  F08A         	goto	u4340
  6475   0114BC                     u4341:
  6476   0114BC  EF73  F08A         	goto	l4921
  6477   0114C0                     u4340:
  6478   0114C0  2813               	incf	___flmul@bexp^(0+1280),w,c
  6479   0114C2  A4D8               	btfss	status,2,c
  6480   0114C4  EF66  F08A         	goto	u4351
  6481   0114C8  EF68  F08A         	goto	u4350
  6482   0114CC                     u4351:
  6483   0114CC  EF70  F08A         	goto	l4919
  6484   0114D0                     u4350:
  6485   0114D0  0E00               	movlw	0
  6486   0114D2  6E01               	movwf	___flmul@b^(0+1280),c
  6487   0114D4  0E00               	movlw	0
  6488   0114D6  6E02               	movwf	(___flmul@b+1)^(0+1280),c
  6489   0114D8  0E00               	movlw	0
  6490   0114DA  6E03               	movwf	(___flmul@b+2)^(0+1280),c
  6491   0114DC  0E00               	movlw	0
  6492   0114DE  6E04               	movwf	(___flmul@b+3)^(0+1280),c
  6493   0114E0                     l4919:
  6494   0114E0  8E03               	bsf	(___flmul@b+2)^(0+1280),7,c
  6495   0114E2  EF7B  F08A         	goto	l4923
  6496   0114E6                     l4921:
  6497   0114E6  0E00               	movlw	0
  6498   0114E8  6E01               	movwf	___flmul@b^(0+1280),c
  6499   0114EA  0E00               	movlw	0
  6500   0114EC  6E02               	movwf	(___flmul@b+1)^(0+1280),c
  6501   0114EE  0E00               	movlw	0
  6502   0114F0  6E03               	movwf	(___flmul@b+2)^(0+1280),c
  6503   0114F2  0E00               	movlw	0
  6504   0114F4  6E04               	movwf	(___flmul@b+3)^(0+1280),c
  6505   0114F6                     l4923:
  6506   0114F6  5008               	movf	(___flmul@a+3)^(0+1280),w,c
  6507   0114F8  0B80               	andlw	128
  6508   0114FA  1A0D               	xorwf	___flmul@sign^(0+1280),f,c
  6509   0114FC  5008               	movf	(___flmul@a+3)^(0+1280),w,c
  6510   0114FE  2408               	addwf	(___flmul@a+3)^(0+1280),w,c
  6511   011500  6E12               	movwf	___flmul@aexp^(0+1280),c
  6512   011502  AE07               	btfss	(___flmul@a+2)^(0+1280),7,c
  6513   011504  EF86  F08A         	goto	u4361
  6514   011508  EF88  F08A         	goto	u4360
  6515   01150C                     u4361:
  6516   01150C  EF89  F08A         	goto	l4931
  6517   011510                     u4360:
  6518   011510  8012               	bsf	___flmul@aexp^(0+1280),0,c
  6519   011512                     l4931:
  6520   011512  5012               	movf	___flmul@aexp^(0+1280),w,c
  6521   011514  B4D8               	btfsc	status,2,c
  6522   011516  EF8F  F08A         	goto	u4371
  6523   01151A  EF91  F08A         	goto	u4370
  6524   01151E                     u4371:
  6525   01151E  EFA4  F08A         	goto	l4939
  6526   011522                     u4370:
  6527   011522  2812               	incf	___flmul@aexp^(0+1280),w,c
  6528   011524  A4D8               	btfss	status,2,c
  6529   011526  EF97  F08A         	goto	u4381
  6530   01152A  EF99  F08A         	goto	u4380
  6531   01152E                     u4381:
  6532   01152E  EFA1  F08A         	goto	l4937
  6533   011532                     u4380:
  6534   011532  0E00               	movlw	0
  6535   011534  6E05               	movwf	___flmul@a^(0+1280),c
  6536   011536  0E00               	movlw	0
  6537   011538  6E06               	movwf	(___flmul@a+1)^(0+1280),c
  6538   01153A  0E00               	movlw	0
  6539   01153C  6E07               	movwf	(___flmul@a+2)^(0+1280),c
  6540   01153E  0E00               	movlw	0
  6541   011540  6E08               	movwf	(___flmul@a+3)^(0+1280),c
  6542   011542                     l4937:
  6543   011542  8E07               	bsf	(___flmul@a+2)^(0+1280),7,c
  6544   011544  EFAC  F08A         	goto	l1177
  6545   011548                     l4939:
  6546   011548  0E00               	movlw	0
  6547   01154A  6E05               	movwf	___flmul@a^(0+1280),c
  6548   01154C  0E00               	movlw	0
  6549   01154E  6E06               	movwf	(___flmul@a+1)^(0+1280),c
  6550   011550  0E00               	movlw	0
  6551   011552  6E07               	movwf	(___flmul@a+2)^(0+1280),c
  6552   011554  0E00               	movlw	0
  6553   011556  6E08               	movwf	(___flmul@a+3)^(0+1280),c
  6554   011558                     l1177:
  6555   011558  5012               	movf	___flmul@aexp^(0+1280),w,c
  6556   01155A  B4D8               	btfsc	status,2,c
  6557   01155C  EFB2  F08A         	goto	u4391
  6558   011560  EFB4  F08A         	goto	u4390
  6559   011564                     u4391:
  6560   011564  EFBC  F08A         	goto	l4943
  6561   011568                     u4390:
  6562   011568  5013               	movf	___flmul@bexp^(0+1280),w,c
  6563   01156A  A4D8               	btfss	status,2,c
  6564   01156C  EFBA  F08A         	goto	u4401
  6565   011570  EFBC  F08A         	goto	u4400
  6566   011574                     u4401:
  6567   011574  EFC6  F08A         	goto	l4947
  6568   011578                     u4400:
  6569   011578                     l4943:
  6570   011578  0E00               	movlw	0
  6571   01157A  6E01               	movwf	?___flmul^(0+1280),c
  6572   01157C  0E00               	movlw	0
  6573   01157E  6E02               	movwf	(?___flmul+1)^(0+1280),c
  6574   011580  0E00               	movlw	0
  6575   011582  6E03               	movwf	(?___flmul+2)^(0+1280),c
  6576   011584  0E00               	movlw	0
  6577   011586  6E04               	movwf	(?___flmul+3)^(0+1280),c
  6578   011588  EF5E  F08C         	goto	l1181
  6579   01158C                     l4947:
  6580   01158C  5007               	movf	(___flmul@a+2)^(0+1280),w,c
  6581   01158E  0201               	mulwf	___flmul@b^(0+1280),c
  6582   011590  C4F3 F518          	movff	prodl,___flmul@temp
  6583   011594  C4F4 F519          	movff	prodh,___flmul@temp+1
  6584   011598  5018               	movf	___flmul@temp^(0+1280),w,c
  6585   01159A  6E0E               	movwf	___flmul@grs^(0+1280),c
  6586   01159C  6A0F               	clrf	(___flmul@grs+1)^(0+1280),c
  6587   01159E  6A10               	clrf	(___flmul@grs+2)^(0+1280),c
  6588   0115A0  6A11               	clrf	(___flmul@grs+3)^(0+1280),c
  6589   0115A2  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
  6590   0115A4  6E14               	movwf	___flmul@prod^(0+1280),c
  6591   0115A6  6A15               	clrf	(___flmul@prod+1)^(0+1280),c
  6592   0115A8  6A16               	clrf	(___flmul@prod+2)^(0+1280),c
  6593   0115AA  6A17               	clrf	(___flmul@prod+3)^(0+1280),c
  6594   0115AC  5006               	movf	(___flmul@a+1)^(0+1280),w,c
  6595   0115AE  0202               	mulwf	(___flmul@b+1)^(0+1280),c
  6596   0115B0  C4F3 F518          	movff	prodl,___flmul@temp
  6597   0115B4  C4F4 F519          	movff	prodh,___flmul@temp+1
  6598   0115B8  5018               	movf	___flmul@temp^(0+1280),w,c
  6599   0115BA  260E               	addwf	___flmul@grs^(0+1280),f,c
  6600   0115BC  0E00               	movlw	0
  6601   0115BE  220F               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  6602   0115C0  2210               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  6603   0115C2  2211               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  6604   0115C4  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
  6605   0115C6  2614               	addwf	___flmul@prod^(0+1280),f,c
  6606   0115C8  0E00               	movlw	0
  6607   0115CA  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6608   0115CC  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6609   0115CE  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6610   0115D0  5005               	movf	___flmul@a^(0+1280),w,c
  6611   0115D2  0203               	mulwf	(___flmul@b+2)^(0+1280),c
  6612   0115D4  C4F3 F518          	movff	prodl,___flmul@temp
  6613   0115D8  C4F4 F519          	movff	prodh,___flmul@temp+1
  6614   0115DC  5018               	movf	___flmul@temp^(0+1280),w,c
  6615   0115DE  260E               	addwf	___flmul@grs^(0+1280),f,c
  6616   0115E0  0E00               	movlw	0
  6617   0115E2  220F               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  6618   0115E4  2210               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  6619   0115E6  2211               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  6620   0115E8  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
  6621   0115EA  2614               	addwf	___flmul@prod^(0+1280),f,c
  6622   0115EC  0E00               	movlw	0
  6623   0115EE  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6624   0115F0  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6625   0115F2  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6626   0115F4  C510  F511         	movff	___flmul@grs+2,___flmul@grs+3
  6627   0115F8  C50F  F510         	movff	___flmul@grs+1,___flmul@grs+2
  6628   0115FC  C50E  F50F         	movff	___flmul@grs,___flmul@grs+1
  6629   011600  6A0E               	clrf	___flmul@grs^(0+1280),c
  6630   011602  5005               	movf	___flmul@a^(0+1280),w,c
  6631   011604  0202               	mulwf	(___flmul@b+1)^(0+1280),c
  6632   011606  C4F3 F518          	movff	prodl,___flmul@temp
  6633   01160A  C4F4 F519          	movff	prodh,___flmul@temp+1
  6634   01160E  5018               	movf	___flmul@temp^(0+1280),w,c
  6635   011610  260E               	addwf	___flmul@grs^(0+1280),f,c
  6636   011612  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
  6637   011614  220F               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  6638   011616  0E00               	movlw	0
  6639   011618  2210               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  6640   01161A  0E00               	movlw	0
  6641   01161C  2211               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  6642   01161E  5006               	movf	(___flmul@a+1)^(0+1280),w,c
  6643   011620  0201               	mulwf	___flmul@b^(0+1280),c
  6644   011622  C4F3 F518          	movff	prodl,___flmul@temp
  6645   011626  C4F4 F519          	movff	prodh,___flmul@temp+1
  6646   01162A  5018               	movf	___flmul@temp^(0+1280),w,c
  6647   01162C  260E               	addwf	___flmul@grs^(0+1280),f,c
  6648   01162E  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
  6649   011630  220F               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  6650   011632  0E00               	movlw	0
  6651   011634  2210               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  6652   011636  0E00               	movlw	0
  6653   011638  2211               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  6654   01163A  C510  F511         	movff	___flmul@grs+2,___flmul@grs+3
  6655   01163E  C50F  F510         	movff	___flmul@grs+1,___flmul@grs+2
  6656   011642  C50E  F50F         	movff	___flmul@grs,___flmul@grs+1
  6657   011646  6A0E               	clrf	___flmul@grs^(0+1280),c
  6658   011648  5005               	movf	___flmul@a^(0+1280),w,c
  6659   01164A  0201               	mulwf	___flmul@b^(0+1280),c
  6660   01164C  C4F3 F518          	movff	prodl,___flmul@temp
  6661   011650  C4F4 F519          	movff	prodh,___flmul@temp+1
  6662   011654  5018               	movf	___flmul@temp^(0+1280),w,c
  6663   011656  260E               	addwf	___flmul@grs^(0+1280),f,c
  6664   011658  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
  6665   01165A  220F               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  6666   01165C  0E00               	movlw	0
  6667   01165E  2210               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  6668   011660  0E00               	movlw	0
  6669   011662  2211               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  6670   011664  5007               	movf	(___flmul@a+2)^(0+1280),w,c
  6671   011666  0202               	mulwf	(___flmul@b+1)^(0+1280),c
  6672   011668  C4F3 F518          	movff	prodl,___flmul@temp
  6673   01166C  C4F4 F519          	movff	prodh,___flmul@temp+1
  6674   011670  5018               	movf	___flmul@temp^(0+1280),w,c
  6675   011672  2614               	addwf	___flmul@prod^(0+1280),f,c
  6676   011674  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
  6677   011676  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6678   011678  0E00               	movlw	0
  6679   01167A  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6680   01167C  0E00               	movlw	0
  6681   01167E  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6682   011680  5006               	movf	(___flmul@a+1)^(0+1280),w,c
  6683   011682  0203               	mulwf	(___flmul@b+2)^(0+1280),c
  6684   011684  C4F3 F518          	movff	prodl,___flmul@temp
  6685   011688  C4F4 F519          	movff	prodh,___flmul@temp+1
  6686   01168C  5018               	movf	___flmul@temp^(0+1280),w,c
  6687   01168E  2614               	addwf	___flmul@prod^(0+1280),f,c
  6688   011690  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
  6689   011692  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6690   011694  0E00               	movlw	0
  6691   011696  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6692   011698  0E00               	movlw	0
  6693   01169A  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6694   01169C  5007               	movf	(___flmul@a+2)^(0+1280),w,c
  6695   01169E  0203               	mulwf	(___flmul@b+2)^(0+1280),c
  6696   0116A0  C4F3 F518          	movff	prodl,___flmul@temp
  6697   0116A4  C4F4 F519          	movff	prodh,___flmul@temp+1
  6698   0116A8  5018               	movf	___flmul@temp^(0+1280),w,c
  6699   0116AA  6E09               	movwf	??___flmul^(0+1280),c
  6700   0116AC  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
  6701   0116AE  6E0A               	movwf	(??___flmul+1)^(0+1280),c
  6702   0116B0  6A0B               	clrf	(??___flmul+2)^(0+1280),c
  6703   0116B2  6A0C               	clrf	(??___flmul+3)^(0+1280),c
  6704   0116B4  C50B  F50C         	movff	??___flmul+2,??___flmul+3
  6705   0116B8  C50A  F50B         	movff	??___flmul+1,??___flmul+2
  6706   0116BC  C509  F50A         	movff	??___flmul,??___flmul+1
  6707   0116C0  6A09               	clrf	??___flmul^(0+1280),c
  6708   0116C2  5009               	movf	??___flmul^(0+1280),w,c
  6709   0116C4  2614               	addwf	___flmul@prod^(0+1280),f,c
  6710   0116C6  500A               	movf	(??___flmul+1)^(0+1280),w,c
  6711   0116C8  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6712   0116CA  500B               	movf	(??___flmul+2)^(0+1280),w,c
  6713   0116CC  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6714   0116CE  500C               	movf	(??___flmul+3)^(0+1280),w,c
  6715   0116D0  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6716   0116D2  C50E  F509         	movff	___flmul@grs,??___flmul
  6717   0116D6  C50F  F50A         	movff	___flmul@grs+1,??___flmul+1
  6718   0116DA  C510  F50B         	movff	___flmul@grs+2,??___flmul+2
  6719   0116DE  C511  F50C         	movff	___flmul@grs+3,??___flmul+3
  6720   0116E2  0E19               	movlw	25
  6721   0116E4  EF79  F08B         	goto	u4410
  6722   0116E8                     u4415:
  6723   0116E8  90D8               	bcf	status,0,c
  6724   0116EA  320C               	rrcf	(??___flmul+3)^(0+1280),f,c
  6725   0116EC  320B               	rrcf	(??___flmul+2)^(0+1280),f,c
  6726   0116EE  320A               	rrcf	(??___flmul+1)^(0+1280),f,c
  6727   0116F0  3209               	rrcf	??___flmul^(0+1280),f,c
  6728   0116F2                     u4410:
  6729   0116F2  2EE8               	decfsz	wreg,f,c
  6730   0116F4  EF74  F08B         	goto	u4415
  6731   0116F8  5009               	movf	??___flmul^(0+1280),w,c
  6732   0116FA  2614               	addwf	___flmul@prod^(0+1280),f,c
  6733   0116FC  500A               	movf	(??___flmul+1)^(0+1280),w,c
  6734   0116FE  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6735   011700  500B               	movf	(??___flmul+2)^(0+1280),w,c
  6736   011702  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6737   011704  500C               	movf	(??___flmul+3)^(0+1280),w,c
  6738   011706  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6739   011708  C510  F511         	movff	___flmul@grs+2,___flmul@grs+3
  6740   01170C  C50F  F510         	movff	___flmul@grs+1,___flmul@grs+2
  6741   011710  C50E  F50F         	movff	___flmul@grs,___flmul@grs+1
  6742   011714  6A0E               	clrf	___flmul@grs^(0+1280),c
  6743   011716  5012               	movf	___flmul@aexp^(0+1280),w,c
  6744   011718  C513  F509         	movff	___flmul@bexp,??___flmul
  6745   01171C  6A0A               	clrf	(??___flmul+1)^(0+1280),c
  6746   01171E  2609               	addwf	??___flmul^(0+1280),f,c
  6747   011720  0E00               	movlw	0
  6748   011722  220A               	addwfc	(??___flmul+1)^(0+1280),f,c
  6749   011724  0E82               	movlw	130
  6750   011726  2409               	addwf	??___flmul^(0+1280),w,c
  6751   011728  6E18               	movwf	___flmul@temp^(0+1280),c
  6752   01172A  0EFF               	movlw	255
  6753   01172C  200A               	addwfc	(??___flmul+1)^(0+1280),w,c
  6754   01172E  6E19               	movwf	(___flmul@temp+1)^(0+1280),c
  6755   011730  EFAF  F08B         	goto	l4995
  6756   011734                     l4989:
  6757   011734  90D8               	bcf	status,0,c
  6758   011736  3614               	rlcf	___flmul@prod^(0+1280),f,c
  6759   011738  3615               	rlcf	(___flmul@prod+1)^(0+1280),f,c
  6760   01173A  3616               	rlcf	(___flmul@prod+2)^(0+1280),f,c
  6761   01173C  3617               	rlcf	(___flmul@prod+3)^(0+1280),f,c
  6762   01173E  AE11               	btfss	(___flmul@grs+3)^(0+1280),7,c
  6763   011740  EFA4  F08B         	goto	u4421
  6764   011744  EFA6  F08B         	goto	u4420
  6765   011748                     u4421:
  6766   011748  EFA7  F08B         	goto	l1184
  6767   01174C                     u4420:
  6768   01174C  8014               	bsf	___flmul@prod^(0+1280),0,c
  6769   01174E                     l1184:
  6770   01174E  90D8               	bcf	status,0,c
  6771   011750  360E               	rlcf	___flmul@grs^(0+1280),f,c
  6772   011752  360F               	rlcf	(___flmul@grs+1)^(0+1280),f,c
  6773   011754  3610               	rlcf	(___flmul@grs+2)^(0+1280),f,c
  6774   011756  3611               	rlcf	(___flmul@grs+3)^(0+1280),f,c
  6775   011758  0618               	decf	___flmul@temp^(0+1280),f,c
  6776   01175A  A0D8               	btfss	status,0,c
  6777   01175C  0619               	decf	(___flmul@temp+1)^(0+1280),f,c
  6778   01175E                     l4995:
  6779   01175E  AE16               	btfss	(___flmul@prod+2)^(0+1280),7,c
  6780   011760  EFB4  F08B         	goto	u4431
  6781   011764  EFB6  F08B         	goto	u4430
  6782   011768                     u4431:
  6783   011768  EF9A  F08B         	goto	l4989
  6784   01176C                     u4430:
  6785   01176C  0E00               	movlw	0
  6786   01176E  6E12               	movwf	___flmul@aexp^(0+1280),c
  6787   011770  AE11               	btfss	(___flmul@grs+3)^(0+1280),7,c
  6788   011772  EFBD  F08B         	goto	u4441
  6789   011776  EFBF  F08B         	goto	u4440
  6790   01177A                     u4441:
  6791   01177A  EFE3  F08B         	goto	l1186
  6792   01177E                     u4440:
  6793   01177E  0EFF               	movlw	255
  6794   011780  140E               	andwf	___flmul@grs^(0+1280),w,c
  6795   011782  6E09               	movwf	??___flmul^(0+1280),c
  6796   011784  0EFF               	movlw	255
  6797   011786  140F               	andwf	(___flmul@grs+1)^(0+1280),w,c
  6798   011788  6E0A               	movwf	(??___flmul+1)^(0+1280),c
  6799   01178A  0EFF               	movlw	255
  6800   01178C  1410               	andwf	(___flmul@grs+2)^(0+1280),w,c
  6801   01178E  6E0B               	movwf	(??___flmul+2)^(0+1280),c
  6802   011790  0E7F               	movlw	127
  6803   011792  1411               	andwf	(___flmul@grs+3)^(0+1280),w,c
  6804   011794  6E0C               	movwf	(??___flmul+3)^(0+1280),c
  6805   011796  5009               	movf	??___flmul^(0+1280),w,c
  6806   011798  100A               	iorwf	(??___flmul+1)^(0+1280),w,c
  6807   01179A  100B               	iorwf	(??___flmul+2)^(0+1280),w,c
  6808   01179C  100C               	iorwf	(??___flmul+3)^(0+1280),w,c
  6809   01179E  B4D8               	btfsc	status,2,c
  6810   0117A0  EFD4  F08B         	goto	u4451
  6811   0117A4  EFD6  F08B         	goto	u4450
  6812   0117A8                     u4451:
  6813   0117A8  EFDA  F08B         	goto	l1187
  6814   0117AC                     u4450:
  6815   0117AC                     l5003:
  6816   0117AC  0E01               	movlw	1
  6817   0117AE  6E12               	movwf	___flmul@aexp^(0+1280),c
  6818   0117B0  EFE3  F08B         	goto	l1186
  6819   0117B4                     l1187:
  6820   0117B4  A014               	btfss	___flmul@prod^(0+1280),0,c
  6821   0117B6  EFDF  F08B         	goto	u4461
  6822   0117BA  EFE1  F08B         	goto	u4460
  6823   0117BE                     u4461:
  6824   0117BE  EFE3  F08B         	goto	l1186
  6825   0117C2                     u4460:
  6826   0117C2  EFD6  F08B         	goto	l5003
  6827   0117C6                     l1186:
  6828   0117C6  5012               	movf	___flmul@aexp^(0+1280),w,c
  6829   0117C8  B4D8               	btfsc	status,2,c
  6830   0117CA  EFE9  F08B         	goto	u4471
  6831   0117CE  EFEB  F08B         	goto	u4470
  6832   0117D2                     u4471:
  6833   0117D2  EF0F  F08C         	goto	l5015
  6834   0117D6                     u4470:
  6835   0117D6  0E01               	movlw	1
  6836   0117D8  2614               	addwf	___flmul@prod^(0+1280),f,c
  6837   0117DA  0E00               	movlw	0
  6838   0117DC  2215               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  6839   0117DE  2216               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  6840   0117E0  2217               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  6841   0117E2  A017               	btfss	(___flmul@prod+3)^(0+1280),0,c
  6842   0117E4  EFF6  F08B         	goto	u4481
  6843   0117E8  EFF8  F08B         	goto	u4480
  6844   0117EC                     u4481:
  6845   0117EC  EF0F  F08C         	goto	l5015
  6846   0117F0                     u4480:
  6847   0117F0  C514  F509         	movff	___flmul@prod,??___flmul
  6848   0117F4  C515  F50A         	movff	___flmul@prod+1,??___flmul+1
  6849   0117F8  C516  F50B         	movff	___flmul@prod+2,??___flmul+2
  6850   0117FC  C517  F50C         	movff	___flmul@prod+3,??___flmul+3
  6851   011800  340C               	rlcf	(??___flmul+3)^(0+1280),w,c
  6852   011802  320C               	rrcf	(??___flmul+3)^(0+1280),f,c
  6853   011804  320B               	rrcf	(??___flmul+2)^(0+1280),f,c
  6854   011806  320A               	rrcf	(??___flmul+1)^(0+1280),f,c
  6855   011808  3209               	rrcf	??___flmul^(0+1280),f,c
  6856   01180A  C509  F514         	movff	??___flmul,___flmul@prod
  6857   01180E  C50A  F515         	movff	??___flmul+1,___flmul@prod+1
  6858   011812  C50B  F516         	movff	??___flmul+2,___flmul@prod+2
  6859   011816  C50C  F517         	movff	??___flmul+3,___flmul@prod+3
  6860   01181A  4A18               	infsnz	___flmul@temp^(0+1280),f,c
  6861   01181C  2A19               	incf	(___flmul@temp+1)^(0+1280),f,c
  6862   01181E                     l5015:
  6863   01181E  BE19               	btfsc	(___flmul@temp+1)^(0+1280),7,c
  6864   011820  EF1A  F08C         	goto	u4491
  6865   011824  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
  6866   011826  E108               	bnz	u4490
  6867   011828  2818               	incf	___flmul@temp^(0+1280),w,c
  6868   01182A  A0D8               	btfss	status,0,c
  6869   01182C  EF1A  F08C         	goto	u4491
  6870   011830  EF1C  F08C         	goto	u4490
  6871   011834                     u4491:
  6872   011834  EF26  F08C         	goto	l5019
  6873   011838                     u4490:
  6874   011838  0E00               	movlw	0
  6875   01183A  6E14               	movwf	___flmul@prod^(0+1280),c
  6876   01183C  0E00               	movlw	0
  6877   01183E  6E15               	movwf	(___flmul@prod+1)^(0+1280),c
  6878   011840  0E80               	movlw	128
  6879   011842  6E16               	movwf	(___flmul@prod+2)^(0+1280),c
  6880   011844  0E7F               	movlw	127
  6881   011846  6E17               	movwf	(___flmul@prod+3)^(0+1280),c
  6882   011848  EF54  F08C         	goto	l5031
  6883   01184C                     l5019:
  6884   01184C  BE19               	btfsc	(___flmul@temp+1)^(0+1280),7,c
  6885   01184E  EF33  F08C         	goto	u4500
  6886   011852  5019               	movf	(___flmul@temp+1)^(0+1280),w,c
  6887   011854  E106               	bnz	u4501
  6888   011856  0418               	decf	___flmul@temp^(0+1280),w,c
  6889   011858  B0D8               	btfsc	status,0,c
  6890   01185A  EF31  F08C         	goto	u4501
  6891   01185E  EF33  F08C         	goto	u4500
  6892   011862                     u4501:
  6893   011862  EF3F  F08C         	goto	l1194
  6894   011866                     u4500:
  6895   011866  0E00               	movlw	0
  6896   011868  6E14               	movwf	___flmul@prod^(0+1280),c
  6897   01186A  0E00               	movlw	0
  6898   01186C  6E15               	movwf	(___flmul@prod+1)^(0+1280),c
  6899   01186E  0E00               	movlw	0
  6900   011870  6E16               	movwf	(___flmul@prod+2)^(0+1280),c
  6901   011872  0E00               	movlw	0
  6902   011874  6E17               	movwf	(___flmul@prod+3)^(0+1280),c
  6903   011876  0E00               	movlw	0
  6904   011878  6E0D               	movwf	___flmul@sign^(0+1280),c
  6905   01187A  EF54  F08C         	goto	l5031
  6906   01187E                     l1194:
  6907   01187E  C518  F513         	movff	___flmul@temp,___flmul@bexp
  6908   011882  0EFF               	movlw	255
  6909   011884  1614               	andwf	___flmul@prod^(0+1280),f,c
  6910   011886  0EFF               	movlw	255
  6911   011888  1615               	andwf	(___flmul@prod+1)^(0+1280),f,c
  6912   01188A  0E7F               	movlw	127
  6913   01188C  1616               	andwf	(___flmul@prod+2)^(0+1280),f,c
  6914   01188E  0E00               	movlw	0
  6915   011890  1617               	andwf	(___flmul@prod+3)^(0+1280),f,c
  6916   011892  A013               	btfss	___flmul@bexp^(0+1280),0,c
  6917   011894  EF4E  F08C         	goto	u4511
  6918   011898  EF50  F08C         	goto	u4510
  6919   01189C                     u4511:
  6920   01189C  EF51  F08C         	goto	l5029
  6921   0118A0                     u4510:
  6922   0118A0  8E16               	bsf	(___flmul@prod+2)^(0+1280),7,c
  6923   0118A2                     l5029:
  6924   0118A2  90D8               	bcf	status,0,c
  6925   0118A4  3013               	rrcf	___flmul@bexp^(0+1280),w,c
  6926   0118A6  6E17               	movwf	(___flmul@prod+3)^(0+1280),c
  6927   0118A8                     l5031:
  6928   0118A8  500D               	movf	___flmul@sign^(0+1280),w,c
  6929   0118AA  1217               	iorwf	(___flmul@prod+3)^(0+1280),f,c
  6930   0118AC  C514  F501         	movff	___flmul@prod,?___flmul
  6931   0118B0  C515  F502         	movff	___flmul@prod+1,?___flmul+1
  6932   0118B4  C516  F503         	movff	___flmul@prod+2,?___flmul+2
  6933   0118B8  C517  F504         	movff	___flmul@prod+3,?___flmul+3
  6934   0118BC                     l1181:
  6935   0118BC  0012               	return		;funcret
  6936   0118BE                     __end_of___flmul:
  6937                           	callstack 0
  6938                           
  6939 ;; *************** function ___fleq *****************
  6940 ;; Defined at:
  6941 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  ff1             4    0[COMRAM] unsigned char 
  6944 ;;  ff2             4    4[COMRAM] unsigned char 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;		None
  6947 ;; Return value:  Size  Location     Type
  6948 ;;		None               void
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  6956 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6958 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6959 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6960 ;;Total ram usage:       12 bytes
  6961 ;; Hardware stack levels used: 1
  6962 ;; This function calls:
  6963 ;;		Nothing
  6964 ;; This function is called by:
  6965 ;;		_efgtoa
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text22
  6970   01408A                     __ptext22:
  6971                           	callstack 0
  6972   01408A                     ___fleq:
  6973                           	callstack 121
  6974   01408A  0E00               	movlw	0
  6975   01408C  1401               	andwf	___fleq@ff1^(0+1280),w,c
  6976   01408E  6E09               	movwf	??___fleq^(0+1280),c
  6977   014090  0E00               	movlw	0
  6978   014092  1402               	andwf	(___fleq@ff1+1)^(0+1280),w,c
  6979   014094  6E0A               	movwf	(??___fleq+1)^(0+1280),c
  6980   014096  0E80               	movlw	128
  6981   014098  1403               	andwf	(___fleq@ff1+2)^(0+1280),w,c
  6982   01409A  6E0B               	movwf	(??___fleq+2)^(0+1280),c
  6983   01409C  0E7F               	movlw	127
  6984   01409E  1404               	andwf	(___fleq@ff1+3)^(0+1280),w,c
  6985   0140A0  6E0C               	movwf	(??___fleq+3)^(0+1280),c
  6986   0140A2  5009               	movf	??___fleq^(0+1280),w,c
  6987   0140A4  100A               	iorwf	(??___fleq+1)^(0+1280),w,c
  6988   0140A6  100B               	iorwf	(??___fleq+2)^(0+1280),w,c
  6989   0140A8  100C               	iorwf	(??___fleq+3)^(0+1280),w,c
  6990   0140AA  A4D8               	btfss	status,2,c
  6991   0140AC  EF5A  F0A0         	goto	u4521
  6992   0140B0  EF5C  F0A0         	goto	u4520
  6993   0140B4                     u4521:
  6994   0140B4  EF64  F0A0         	goto	l5047
  6995   0140B8                     u4520:
  6996   0140B8  0E00               	movlw	0
  6997   0140BA  6E01               	movwf	___fleq@ff1^(0+1280),c
  6998   0140BC  0E00               	movlw	0
  6999   0140BE  6E02               	movwf	(___fleq@ff1+1)^(0+1280),c
  7000   0140C0  0E00               	movlw	0
  7001   0140C2  6E03               	movwf	(___fleq@ff1+2)^(0+1280),c
  7002   0140C4  0E00               	movlw	0
  7003   0140C6  6E04               	movwf	(___fleq@ff1+3)^(0+1280),c
  7004   0140C8                     l5047:
  7005   0140C8  0E00               	movlw	0
  7006   0140CA  1405               	andwf	___fleq@ff2^(0+1280),w,c
  7007   0140CC  6E09               	movwf	??___fleq^(0+1280),c
  7008   0140CE  0E00               	movlw	0
  7009   0140D0  1406               	andwf	(___fleq@ff2+1)^(0+1280),w,c
  7010   0140D2  6E0A               	movwf	(??___fleq+1)^(0+1280),c
  7011   0140D4  0E80               	movlw	128
  7012   0140D6  1407               	andwf	(___fleq@ff2+2)^(0+1280),w,c
  7013   0140D8  6E0B               	movwf	(??___fleq+2)^(0+1280),c
  7014   0140DA  0E7F               	movlw	127
  7015   0140DC  1408               	andwf	(___fleq@ff2+3)^(0+1280),w,c
  7016   0140DE  6E0C               	movwf	(??___fleq+3)^(0+1280),c
  7017   0140E0  5009               	movf	??___fleq^(0+1280),w,c
  7018   0140E2  100A               	iorwf	(??___fleq+1)^(0+1280),w,c
  7019   0140E4  100B               	iorwf	(??___fleq+2)^(0+1280),w,c
  7020   0140E6  100C               	iorwf	(??___fleq+3)^(0+1280),w,c
  7021   0140E8  A4D8               	btfss	status,2,c
  7022   0140EA  EF79  F0A0         	goto	u4531
  7023   0140EE  EF7B  F0A0         	goto	u4530
  7024   0140F2                     u4531:
  7025   0140F2  EF83  F0A0         	goto	l5051
  7026   0140F6                     u4530:
  7027   0140F6  0E00               	movlw	0
  7028   0140F8  6E05               	movwf	___fleq@ff2^(0+1280),c
  7029   0140FA  0E00               	movlw	0
  7030   0140FC  6E06               	movwf	(___fleq@ff2+1)^(0+1280),c
  7031   0140FE  0E00               	movlw	0
  7032   014100  6E07               	movwf	(___fleq@ff2+2)^(0+1280),c
  7033   014102  0E00               	movlw	0
  7034   014104  6E08               	movwf	(___fleq@ff2+3)^(0+1280),c
  7035   014106                     l5051:
  7036   014106  5005               	movf	___fleq@ff2^(0+1280),w,c
  7037   014108  1801               	xorwf	___fleq@ff1^(0+1280),w,c
  7038   01410A  E10F               	bnz	u4540
  7039   01410C  5006               	movf	(___fleq@ff2+1)^(0+1280),w,c
  7040   01410E  1802               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
  7041   014110  E10C               	bnz	u4540
  7042   014112  5007               	movf	(___fleq@ff2+2)^(0+1280),w,c
  7043   014114  1803               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
  7044   014116  E109               	bnz	u4540
  7045   014118  5008               	movf	(___fleq@ff2+3)^(0+1280),w,c
  7046   01411A  1804               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
  7047   01411C  B4D8               	btfsc	status,2,c
  7048   01411E  EF93  F0A0         	goto	u4541
  7049   014122  EF95  F0A0         	goto	u4540
  7050   014126                     u4541:
  7051   014126  EF98  F0A0         	goto	l5055
  7052   01412A                     u4540:
  7053   01412A  90D8               	bcf	status,0,c
  7054   01412C  EF99  F0A0         	goto	l822
  7055   014130                     l5055:
  7056   014130  80D8               	bsf	status,0,c
  7057   014132                     l822:
  7058   014132  0012               	return		;funcret
  7059   014134                     __end_of___fleq:
  7060                           	callstack 0
  7061                           
  7062 ;; *************** function ___fldiv *****************
  7063 ;; Defined at:
  7064 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;  b               4    0[COMRAM] unsigned char 
  7067 ;;  a               4    4[COMRAM] unsigned char 
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;  grs             4   19[COMRAM] unsigned long 
  7070 ;;  rem             4   12[COMRAM] unsigned long 
  7071 ;;  new_exp         2   17[COMRAM] short 
  7072 ;;  aexp            1   24[COMRAM] unsigned char 
  7073 ;;  bexp            1   23[COMRAM] unsigned char 
  7074 ;;  sign            1   16[COMRAM] unsigned char 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  4    0[COMRAM] unsigned char 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7084 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7085 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7086 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7087 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7088 ;;Total ram usage:       25 bytes
  7089 ;; Hardware stack levels used: 1
  7090 ;; This function calls:
  7091 ;;		Nothing
  7092 ;; This function is called by:
  7093 ;;		_efgtoa
  7094 ;; This function uses a non-reentrant model
  7095 ;;
  7096                           
  7097                           	psect	text23
  7098   011CA6                     __ptext23:
  7099                           	callstack 0
  7100   011CA6                     ___fldiv:
  7101                           	callstack 121
  7102   011CA6  5004               	movf	(___fldiv@b+3)^(0+1280),w,c
  7103   011CA8  0B80               	andlw	128
  7104   011CAA  6E11               	movwf	___fldiv@sign^(0+1280),c
  7105   011CAC  5004               	movf	(___fldiv@b+3)^(0+1280),w,c
  7106   011CAE  2404               	addwf	(___fldiv@b+3)^(0+1280),w,c
  7107   011CB0  6E18               	movwf	___fldiv@bexp^(0+1280),c
  7108   011CB2  AE03               	btfss	(___fldiv@b+2)^(0+1280),7,c
  7109   011CB4  EF5E  F08E         	goto	u4101
  7110   011CB8  EF60  F08E         	goto	u4100
  7111   011CBC                     u4101:
  7112   011CBC  EF61  F08E         	goto	l4775
  7113   011CC0                     u4100:
  7114   011CC0  8018               	bsf	___fldiv@bexp^(0+1280),0,c
  7115   011CC2                     l4775:
  7116   011CC2  5018               	movf	___fldiv@bexp^(0+1280),w,c
  7117   011CC4  B4D8               	btfsc	status,2,c
  7118   011CC6  EF67  F08E         	goto	u4111
  7119   011CCA  EF69  F08E         	goto	u4110
  7120   011CCE                     u4111:
  7121   011CCE  EF7E  F08E         	goto	l4785
  7122   011CD2                     u4110:
  7123   011CD2  2818               	incf	___fldiv@bexp^(0+1280),w,c
  7124   011CD4  A4D8               	btfss	status,2,c
  7125   011CD6  EF6F  F08E         	goto	u4121
  7126   011CDA  EF71  F08E         	goto	u4120
  7127   011CDE                     u4121:
  7128   011CDE  EF79  F08E         	goto	l4781
  7129   011CE2                     u4120:
  7130   011CE2  0E00               	movlw	0
  7131   011CE4  6E01               	movwf	___fldiv@b^(0+1280),c
  7132   011CE6  0E00               	movlw	0
  7133   011CE8  6E02               	movwf	(___fldiv@b+1)^(0+1280),c
  7134   011CEA  0E00               	movlw	0
  7135   011CEC  6E03               	movwf	(___fldiv@b+2)^(0+1280),c
  7136   011CEE  0E00               	movlw	0
  7137   011CF0  6E04               	movwf	(___fldiv@b+3)^(0+1280),c
  7138   011CF2                     l4781:
  7139   011CF2  8E03               	bsf	(___fldiv@b+2)^(0+1280),7,c
  7140   011CF4  0E00               	movlw	0
  7141   011CF6  6E04               	movwf	(___fldiv@b+3)^(0+1280),c
  7142   011CF8  EF86  F08E         	goto	l4787
  7143   011CFC                     l4785:
  7144   011CFC  0E00               	movlw	0
  7145   011CFE  6E01               	movwf	___fldiv@b^(0+1280),c
  7146   011D00  0E00               	movlw	0
  7147   011D02  6E02               	movwf	(___fldiv@b+1)^(0+1280),c
  7148   011D04  0E00               	movlw	0
  7149   011D06  6E03               	movwf	(___fldiv@b+2)^(0+1280),c
  7150   011D08  0E00               	movlw	0
  7151   011D0A  6E04               	movwf	(___fldiv@b+3)^(0+1280),c
  7152   011D0C                     l4787:
  7153   011D0C  5008               	movf	(___fldiv@a+3)^(0+1280),w,c
  7154   011D0E  0B80               	andlw	128
  7155   011D10  1A11               	xorwf	___fldiv@sign^(0+1280),f,c
  7156   011D12  5008               	movf	(___fldiv@a+3)^(0+1280),w,c
  7157   011D14  2408               	addwf	(___fldiv@a+3)^(0+1280),w,c
  7158   011D16  6E19               	movwf	___fldiv@aexp^(0+1280),c
  7159   011D18  AE07               	btfss	(___fldiv@a+2)^(0+1280),7,c
  7160   011D1A  EF91  F08E         	goto	u4131
  7161   011D1E  EF93  F08E         	goto	u4130
  7162   011D22                     u4131:
  7163   011D22  EF94  F08E         	goto	l4795
  7164   011D26                     u4130:
  7165   011D26  8019               	bsf	___fldiv@aexp^(0+1280),0,c
  7166   011D28                     l4795:
  7167   011D28  5019               	movf	___fldiv@aexp^(0+1280),w,c
  7168   011D2A  B4D8               	btfsc	status,2,c
  7169   011D2C  EF9A  F08E         	goto	u4141
  7170   011D30  EF9C  F08E         	goto	u4140
  7171   011D34                     u4141:
  7172   011D34  EFB1  F08E         	goto	l4805
  7173   011D38                     u4140:
  7174   011D38  2819               	incf	___fldiv@aexp^(0+1280),w,c
  7175   011D3A  A4D8               	btfss	status,2,c
  7176   011D3C  EFA2  F08E         	goto	u4151
  7177   011D40  EFA4  F08E         	goto	u4150
  7178   011D44                     u4151:
  7179   011D44  EFAC  F08E         	goto	l4801
  7180   011D48                     u4150:
  7181   011D48  0E00               	movlw	0
  7182   011D4A  6E05               	movwf	___fldiv@a^(0+1280),c
  7183   011D4C  0E00               	movlw	0
  7184   011D4E  6E06               	movwf	(___fldiv@a+1)^(0+1280),c
  7185   011D50  0E00               	movlw	0
  7186   011D52  6E07               	movwf	(___fldiv@a+2)^(0+1280),c
  7187   011D54  0E00               	movlw	0
  7188   011D56  6E08               	movwf	(___fldiv@a+3)^(0+1280),c
  7189   011D58                     l4801:
  7190   011D58  8E07               	bsf	(___fldiv@a+2)^(0+1280),7,c
  7191   011D5A  0E00               	movlw	0
  7192   011D5C  6E08               	movwf	(___fldiv@a+3)^(0+1280),c
  7193   011D5E  EFB9  F08E         	goto	l4807
  7194   011D62                     l4805:
  7195   011D62  0E00               	movlw	0
  7196   011D64  6E05               	movwf	___fldiv@a^(0+1280),c
  7197   011D66  0E00               	movlw	0
  7198   011D68  6E06               	movwf	(___fldiv@a+1)^(0+1280),c
  7199   011D6A  0E00               	movlw	0
  7200   011D6C  6E07               	movwf	(___fldiv@a+2)^(0+1280),c
  7201   011D6E  0E00               	movlw	0
  7202   011D70  6E08               	movwf	(___fldiv@a+3)^(0+1280),c
  7203   011D72                     l4807:
  7204   011D72  5005               	movf	___fldiv@a^(0+1280),w,c
  7205   011D74  1006               	iorwf	(___fldiv@a+1)^(0+1280),w,c
  7206   011D76  1007               	iorwf	(___fldiv@a+2)^(0+1280),w,c
  7207   011D78  1008               	iorwf	(___fldiv@a+3)^(0+1280),w,c
  7208   011D7A  A4D8               	btfss	status,2,c
  7209   011D7C  EFC2  F08E         	goto	u4161
  7210   011D80  EFC4  F08E         	goto	u4160
  7211   011D84                     u4161:
  7212   011D84  EFDC  F08E         	goto	l4819
  7213   011D88                     u4160:
  7214   011D88  0E00               	movlw	0
  7215   011D8A  6E01               	movwf	___fldiv@b^(0+1280),c
  7216   011D8C  0E00               	movlw	0
  7217   011D8E  6E02               	movwf	(___fldiv@b+1)^(0+1280),c
  7218   011D90  0E00               	movlw	0
  7219   011D92  6E03               	movwf	(___fldiv@b+2)^(0+1280),c
  7220   011D94  0E00               	movlw	0
  7221   011D96  6E04               	movwf	(___fldiv@b+3)^(0+1280),c
  7222   011D98  0E80               	movlw	128
  7223   011D9A  1203               	iorwf	(___fldiv@b+2)^(0+1280),f,c
  7224   011D9C  0E7F               	movlw	127
  7225   011D9E  1204               	iorwf	(___fldiv@b+3)^(0+1280),f,c
  7226   011DA0                     l4813:
  7227   011DA0  5011               	movf	___fldiv@sign^(0+1280),w,c
  7228   011DA2  1204               	iorwf	(___fldiv@b+3)^(0+1280),f,c
  7229   011DA4  C501  F501         	movff	___fldiv@b,?___fldiv
  7230   011DA8  C502  F502         	movff	___fldiv@b+1,?___fldiv+1
  7231   011DAC  C503  F503         	movff	___fldiv@b+2,?___fldiv+2
  7232   011DB0  C504  F504         	movff	___fldiv@b+3,?___fldiv+3
  7233   011DB4  EF1F  F090         	goto	l1145
  7234   011DB8                     l4819:
  7235   011DB8  5018               	movf	___fldiv@bexp^(0+1280),w,c
  7236   011DBA  A4D8               	btfss	status,2,c
  7237   011DBC  EFE2  F08E         	goto	u4171
  7238   011DC0  EFE4  F08E         	goto	u4170
  7239   011DC4                     u4171:
  7240   011DC4  EFEE  F08E         	goto	l4827
  7241   011DC8                     u4170:
  7242   011DC8  0E00               	movlw	0
  7243   011DCA  6E01               	movwf	?___fldiv^(0+1280),c
  7244   011DCC  0E00               	movlw	0
  7245   011DCE  6E02               	movwf	(?___fldiv+1)^(0+1280),c
  7246   011DD0  0E00               	movlw	0
  7247   011DD2  6E03               	movwf	(?___fldiv+2)^(0+1280),c
  7248   011DD4  0E00               	movlw	0
  7249   011DD6  6E04               	movwf	(?___fldiv+3)^(0+1280),c
  7250   011DD8  EF1F  F090         	goto	l1145
  7251   011DDC                     l4827:
  7252   011DDC  5019               	movf	___fldiv@aexp^(0+1280),w,c
  7253   011DDE  C518  F509         	movff	___fldiv@bexp,??___fldiv
  7254   011DE2  6A0A               	clrf	(??___fldiv+1)^(0+1280),c
  7255   011DE4  5E09               	subwf	??___fldiv^(0+1280),f,c
  7256   011DE6  0E00               	movlw	0
  7257   011DE8  5A0A               	subwfb	(??___fldiv+1)^(0+1280),f,c
  7258   011DEA  0E7F               	movlw	127
  7259   011DEC  2409               	addwf	??___fldiv^(0+1280),w,c
  7260   011DEE  6E12               	movwf	___fldiv@new_exp^(0+1280),c
  7261   011DF0  0E00               	movlw	0
  7262   011DF2  200A               	addwfc	(??___fldiv+1)^(0+1280),w,c
  7263   011DF4  6E13               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  7264   011DF6  C501  F50D         	movff	___fldiv@b,___fldiv@rem
  7265   011DFA  C502  F50E         	movff	___fldiv@b+1,___fldiv@rem+1
  7266   011DFE  C503  F50F         	movff	___fldiv@b+2,___fldiv@rem+2
  7267   011E02  C504  F510         	movff	___fldiv@b+3,___fldiv@rem+3
  7268   011E06  0E00               	movlw	0
  7269   011E08  6E01               	movwf	___fldiv@b^(0+1280),c
  7270   011E0A  0E00               	movlw	0
  7271   011E0C  6E02               	movwf	(___fldiv@b+1)^(0+1280),c
  7272   011E0E  0E00               	movlw	0
  7273   011E10  6E03               	movwf	(___fldiv@b+2)^(0+1280),c
  7274   011E12  0E00               	movlw	0
  7275   011E14  6E04               	movwf	(___fldiv@b+3)^(0+1280),c
  7276   011E16  0E00               	movlw	0
  7277   011E18  6E14               	movwf	___fldiv@grs^(0+1280),c
  7278   011E1A  0E00               	movlw	0
  7279   011E1C  6E15               	movwf	(___fldiv@grs+1)^(0+1280),c
  7280   011E1E  0E00               	movlw	0
  7281   011E20  6E16               	movwf	(___fldiv@grs+2)^(0+1280),c
  7282   011E22  0E00               	movlw	0
  7283   011E24  6E17               	movwf	(___fldiv@grs+3)^(0+1280),c
  7284   011E26  0E00               	movlw	0
  7285   011E28  6E19               	movwf	___fldiv@aexp^(0+1280),c
  7286   011E2A  EF4F  F08F         	goto	l1147
  7287   011E2E                     l4837:
  7288   011E2E  5019               	movf	___fldiv@aexp^(0+1280),w,c
  7289   011E30  B4D8               	btfsc	status,2,c
  7290   011E32  EF1D  F08F         	goto	u4181
  7291   011E36  EF1F  F08F         	goto	u4180
  7292   011E3A                     u4181:
  7293   011E3A  EF36  F08F         	goto	l4845
  7294   011E3E                     u4180:
  7295   011E3E  90D8               	bcf	status,0,c
  7296   011E40  360D               	rlcf	___fldiv@rem^(0+1280),f,c
  7297   011E42  360E               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
  7298   011E44  360F               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
  7299   011E46  3610               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
  7300   011E48  90D8               	bcf	status,0,c
  7301   011E4A  3601               	rlcf	___fldiv@b^(0+1280),f,c
  7302   011E4C  3602               	rlcf	(___fldiv@b+1)^(0+1280),f,c
  7303   011E4E  3603               	rlcf	(___fldiv@b+2)^(0+1280),f,c
  7304   011E50  3604               	rlcf	(___fldiv@b+3)^(0+1280),f,c
  7305   011E52  AE17               	btfss	(___fldiv@grs+3)^(0+1280),7,c
  7306   011E54  EF2E  F08F         	goto	u4191
  7307   011E58  EF30  F08F         	goto	u4190
  7308   011E5C                     u4191:
  7309   011E5C  EF31  F08F         	goto	l1150
  7310   011E60                     u4190:
  7311   011E60  8001               	bsf	___fldiv@b^(0+1280),0,c
  7312   011E62                     l1150:
  7313   011E62  90D8               	bcf	status,0,c
  7314   011E64  3614               	rlcf	___fldiv@grs^(0+1280),f,c
  7315   011E66  3615               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
  7316   011E68  3616               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
  7317   011E6A  3617               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
  7318   011E6C                     l4845:
  7319   011E6C  5005               	movf	___fldiv@a^(0+1280),w,c
  7320   011E6E  5C0D               	subwf	___fldiv@rem^(0+1280),w,c
  7321   011E70  5006               	movf	(___fldiv@a+1)^(0+1280),w,c
  7322   011E72  580E               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
  7323   011E74  5007               	movf	(___fldiv@a+2)^(0+1280),w,c
  7324   011E76  580F               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
  7325   011E78  5008               	movf	(___fldiv@a+3)^(0+1280),w,c
  7326   011E7A  5810               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
  7327   011E7C  A0D8               	btfss	status,0,c
  7328   011E7E  EF43  F08F         	goto	u4201
  7329   011E82  EF45  F08F         	goto	u4200
  7330   011E86                     u4201:
  7331   011E86  EF4E  F08F         	goto	l4851
  7332   011E8A                     u4200:
  7333   011E8A  8C17               	bsf	(___fldiv@grs+3)^(0+1280),6,c
  7334   011E8C  5005               	movf	___fldiv@a^(0+1280),w,c
  7335   011E8E  5E0D               	subwf	___fldiv@rem^(0+1280),f,c
  7336   011E90  5006               	movf	(___fldiv@a+1)^(0+1280),w,c
  7337   011E92  5A0E               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
  7338   011E94  5007               	movf	(___fldiv@a+2)^(0+1280),w,c
  7339   011E96  5A0F               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
  7340   011E98  5008               	movf	(___fldiv@a+3)^(0+1280),w,c
  7341   011E9A  5A10               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
  7342   011E9C                     l4851:
  7343   011E9C  2A19               	incf	___fldiv@aexp^(0+1280),f,c
  7344   011E9E                     l1147:
  7345   011E9E  0E19               	movlw	25
  7346   011EA0  6419               	cpfsgt	___fldiv@aexp^(0+1280),c
  7347   011EA2  EF55  F08F         	goto	u4211
  7348   011EA6  EF57  F08F         	goto	u4210
  7349   011EAA                     u4211:
  7350   011EAA  EF17  F08F         	goto	l4837
  7351   011EAE                     u4210:
  7352   011EAE  500D               	movf	___fldiv@rem^(0+1280),w,c
  7353   011EB0  100E               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
  7354   011EB2  100F               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
  7355   011EB4  1010               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
  7356   011EB6  B4D8               	btfsc	status,2,c
  7357   011EB8  EF60  F08F         	goto	u4221
  7358   011EBC  EF62  F08F         	goto	u4220
  7359   011EC0                     u4221:
  7360   011EC0  EF7A  F08F         	goto	l4863
  7361   011EC4                     u4220:
  7362   011EC4  8014               	bsf	___fldiv@grs^(0+1280),0,c
  7363   011EC6  EF7A  F08F         	goto	l4863
  7364   011ECA                     l4857:
  7365   011ECA  90D8               	bcf	status,0,c
  7366   011ECC  3601               	rlcf	___fldiv@b^(0+1280),f,c
  7367   011ECE  3602               	rlcf	(___fldiv@b+1)^(0+1280),f,c
  7368   011ED0  3603               	rlcf	(___fldiv@b+2)^(0+1280),f,c
  7369   011ED2  3604               	rlcf	(___fldiv@b+3)^(0+1280),f,c
  7370   011ED4  AE17               	btfss	(___fldiv@grs+3)^(0+1280),7,c
  7371   011ED6  EF6F  F08F         	goto	u4231
  7372   011EDA  EF71  F08F         	goto	u4230
  7373   011EDE                     u4231:
  7374   011EDE  EF72  F08F         	goto	l1156
  7375   011EE2                     u4230:
  7376   011EE2  8001               	bsf	___fldiv@b^(0+1280),0,c
  7377   011EE4                     l1156:
  7378   011EE4  90D8               	bcf	status,0,c
  7379   011EE6  3614               	rlcf	___fldiv@grs^(0+1280),f,c
  7380   011EE8  3615               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
  7381   011EEA  3616               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
  7382   011EEC  3617               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
  7383   011EEE  0612               	decf	___fldiv@new_exp^(0+1280),f,c
  7384   011EF0  A0D8               	btfss	status,0,c
  7385   011EF2  0613               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
  7386   011EF4                     l4863:
  7387   011EF4  AE03               	btfss	(___fldiv@b+2)^(0+1280),7,c
  7388   011EF6  EF7F  F08F         	goto	u4241
  7389   011EFA  EF81  F08F         	goto	u4240
  7390   011EFE                     u4241:
  7391   011EFE  EF65  F08F         	goto	l4857
  7392   011F02                     u4240:
  7393   011F02  0E00               	movlw	0
  7394   011F04  6E19               	movwf	___fldiv@aexp^(0+1280),c
  7395   011F06  AE17               	btfss	(___fldiv@grs+3)^(0+1280),7,c
  7396   011F08  EF88  F08F         	goto	u4251
  7397   011F0C  EF8A  F08F         	goto	u4250
  7398   011F10                     u4251:
  7399   011F10  EFAE  F08F         	goto	l1158
  7400   011F14                     u4250:
  7401   011F14  0EFF               	movlw	255
  7402   011F16  1414               	andwf	___fldiv@grs^(0+1280),w,c
  7403   011F18  6E09               	movwf	??___fldiv^(0+1280),c
  7404   011F1A  0EFF               	movlw	255
  7405   011F1C  1415               	andwf	(___fldiv@grs+1)^(0+1280),w,c
  7406   011F1E  6E0A               	movwf	(??___fldiv+1)^(0+1280),c
  7407   011F20  0EFF               	movlw	255
  7408   011F22  1416               	andwf	(___fldiv@grs+2)^(0+1280),w,c
  7409   011F24  6E0B               	movwf	(??___fldiv+2)^(0+1280),c
  7410   011F26  0E7F               	movlw	127
  7411   011F28  1417               	andwf	(___fldiv@grs+3)^(0+1280),w,c
  7412   011F2A  6E0C               	movwf	(??___fldiv+3)^(0+1280),c
  7413   011F2C  5009               	movf	??___fldiv^(0+1280),w,c
  7414   011F2E  100A               	iorwf	(??___fldiv+1)^(0+1280),w,c
  7415   011F30  100B               	iorwf	(??___fldiv+2)^(0+1280),w,c
  7416   011F32  100C               	iorwf	(??___fldiv+3)^(0+1280),w,c
  7417   011F34  B4D8               	btfsc	status,2,c
  7418   011F36  EF9F  F08F         	goto	u4261
  7419   011F3A  EFA1  F08F         	goto	u4260
  7420   011F3E                     u4261:
  7421   011F3E  EFA5  F08F         	goto	l1159
  7422   011F42                     u4260:
  7423   011F42                     l4871:
  7424   011F42  0E01               	movlw	1
  7425   011F44  6E19               	movwf	___fldiv@aexp^(0+1280),c
  7426   011F46  EFAE  F08F         	goto	l1158
  7427   011F4A                     l1159:
  7428   011F4A  A001               	btfss	___fldiv@b^(0+1280),0,c
  7429   011F4C  EFAA  F08F         	goto	u4271
  7430   011F50  EFAC  F08F         	goto	u4270
  7431   011F54                     u4271:
  7432   011F54  EFAE  F08F         	goto	l1158
  7433   011F58                     u4270:
  7434   011F58  EFA1  F08F         	goto	l4871
  7435   011F5C                     l1158:
  7436   011F5C  5019               	movf	___fldiv@aexp^(0+1280),w,c
  7437   011F5E  B4D8               	btfsc	status,2,c
  7438   011F60  EFB4  F08F         	goto	u4281
  7439   011F64  EFB6  F08F         	goto	u4280
  7440   011F68                     u4281:
  7441   011F68  EFDA  F08F         	goto	l4883
  7442   011F6C                     u4280:
  7443   011F6C  0E01               	movlw	1
  7444   011F6E  2601               	addwf	___fldiv@b^(0+1280),f,c
  7445   011F70  0E00               	movlw	0
  7446   011F72  2202               	addwfc	(___fldiv@b+1)^(0+1280),f,c
  7447   011F74  2203               	addwfc	(___fldiv@b+2)^(0+1280),f,c
  7448   011F76  2204               	addwfc	(___fldiv@b+3)^(0+1280),f,c
  7449   011F78  A004               	btfss	(___fldiv@b+3)^(0+1280),0,c
  7450   011F7A  EFC1  F08F         	goto	u4291
  7451   011F7E  EFC3  F08F         	goto	u4290
  7452   011F82                     u4291:
  7453   011F82  EFDA  F08F         	goto	l4883
  7454   011F86                     u4290:
  7455   011F86  C501  F509         	movff	___fldiv@b,??___fldiv
  7456   011F8A  C502  F50A         	movff	___fldiv@b+1,??___fldiv+1
  7457   011F8E  C503  F50B         	movff	___fldiv@b+2,??___fldiv+2
  7458   011F92  C504  F50C         	movff	___fldiv@b+3,??___fldiv+3
  7459   011F96  340C               	rlcf	(??___fldiv+3)^(0+1280),w,c
  7460   011F98  320C               	rrcf	(??___fldiv+3)^(0+1280),f,c
  7461   011F9A  320B               	rrcf	(??___fldiv+2)^(0+1280),f,c
  7462   011F9C  320A               	rrcf	(??___fldiv+1)^(0+1280),f,c
  7463   011F9E  3209               	rrcf	??___fldiv^(0+1280),f,c
  7464   011FA0  C509  F501         	movff	??___fldiv,___fldiv@b
  7465   011FA4  C50A  F502         	movff	??___fldiv+1,___fldiv@b+1
  7466   011FA8  C50B  F503         	movff	??___fldiv+2,___fldiv@b+2
  7467   011FAC  C50C  F504         	movff	??___fldiv+3,___fldiv@b+3
  7468   011FB0  4A12               	infsnz	___fldiv@new_exp^(0+1280),f,c
  7469   011FB2  2A13               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
  7470   011FB4                     l4883:
  7471   011FB4  BE13               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
  7472   011FB6  EFE5  F08F         	goto	u4301
  7473   011FBA  5013               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
  7474   011FBC  E108               	bnz	u4300
  7475   011FBE  2812               	incf	___fldiv@new_exp^(0+1280),w,c
  7476   011FC0  A0D8               	btfss	status,0,c
  7477   011FC2  EFE5  F08F         	goto	u4301
  7478   011FC6  EFE7  F08F         	goto	u4300
  7479   011FCA                     u4301:
  7480   011FCA  EFF2  F08F         	goto	l4887
  7481   011FCE                     u4300:
  7482   011FCE  0E00               	movlw	0
  7483   011FD0  6E13               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  7484   011FD2  6812               	setf	___fldiv@new_exp^(0+1280),c
  7485   011FD4  0E00               	movlw	0
  7486   011FD6  6E01               	movwf	___fldiv@b^(0+1280),c
  7487   011FD8  0E00               	movlw	0
  7488   011FDA  6E02               	movwf	(___fldiv@b+1)^(0+1280),c
  7489   011FDC  0E00               	movlw	0
  7490   011FDE  6E03               	movwf	(___fldiv@b+2)^(0+1280),c
  7491   011FE0  0E00               	movlw	0
  7492   011FE2  6E04               	movwf	(___fldiv@b+3)^(0+1280),c
  7493   011FE4                     l4887:
  7494   011FE4  BE13               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
  7495   011FE6  EFFF  F08F         	goto	u4310
  7496   011FEA  5013               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
  7497   011FEC  E106               	bnz	u4311
  7498   011FEE  0412               	decf	___fldiv@new_exp^(0+1280),w,c
  7499   011FF0  B0D8               	btfsc	status,0,c
  7500   011FF2  EFFD  F08F         	goto	u4311
  7501   011FF6  EFFF  F08F         	goto	u4310
  7502   011FFA                     u4311:
  7503   011FFA  EF0D  F090         	goto	l4891
  7504   011FFE                     u4310:
  7505   011FFE  0E00               	movlw	0
  7506   012000  6E13               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  7507   012002  0E00               	movlw	0
  7508   012004  6E12               	movwf	___fldiv@new_exp^(0+1280),c
  7509   012006  0E00               	movlw	0
  7510   012008  6E01               	movwf	___fldiv@b^(0+1280),c
  7511   01200A  0E00               	movlw	0
  7512   01200C  6E02               	movwf	(___fldiv@b+1)^(0+1280),c
  7513   01200E  0E00               	movlw	0
  7514   012010  6E03               	movwf	(___fldiv@b+2)^(0+1280),c
  7515   012012  0E00               	movlw	0
  7516   012014  6E04               	movwf	(___fldiv@b+3)^(0+1280),c
  7517   012016  0E00               	movlw	0
  7518   012018  6E11               	movwf	___fldiv@sign^(0+1280),c
  7519   01201A                     l4891:
  7520   01201A  C512  F518         	movff	___fldiv@new_exp,___fldiv@bexp
  7521   01201E  A018               	btfss	___fldiv@bexp^(0+1280),0,c
  7522   012020  EF14  F090         	goto	u4321
  7523   012024  EF16  F090         	goto	u4320
  7524   012028                     u4321:
  7525   012028  EF19  F090         	goto	l4897
  7526   01202C                     u4320:
  7527   01202C  8E03               	bsf	(___fldiv@b+2)^(0+1280),7,c
  7528   01202E  EF1A  F090         	goto	l4899
  7529   012032                     l4897:
  7530   012032  9E03               	bcf	(___fldiv@b+2)^(0+1280),7,c
  7531   012034                     l4899:
  7532   012034  90D8               	bcf	status,0,c
  7533   012036  3018               	rrcf	___fldiv@bexp^(0+1280),w,c
  7534   012038  6E04               	movwf	(___fldiv@b+3)^(0+1280),c
  7535   01203A  EFD0  F08E         	goto	l4813
  7536   01203E                     l1145:
  7537   01203E  0012               	return		;funcret
  7538   012040                     __end_of___fldiv:
  7539                           	callstack 0
  7540                           
  7541 ;; *************** function _dtoa *****************
  7542 ;; Defined at:
  7543 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7544 ;; Parameters:    Size  Location     Type
  7545 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7546 ;;		 -> sprintf@f(11), 
  7547 ;;  d               8   29[COMRAM] long long 
  7548 ;; Auto vars:     Size  Location     Type
  7549 ;;  n               8   51[COMRAM] long long 
  7550 ;;  i               2   59[COMRAM] int 
  7551 ;;  w               2   49[COMRAM] int 
  7552 ;;  p               2   47[COMRAM] int 
  7553 ;;  s               1   61[COMRAM] unsigned char 
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  1    wreg      void 
  7556 ;; Registers used:
  7557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7563 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7564 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7565 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7566 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7567 ;;Total ram usage:       35 bytes
  7568 ;; Hardware stack levels used: 1
  7569 ;; Hardware stack levels required when called: 4
  7570 ;; This function calls:
  7571 ;;		___aodiv
  7572 ;;		___aomod
  7573 ;;		_abs
  7574 ;;		_pad
  7575 ;; This function is called by:
  7576 ;;		_vfpfcnvrt
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           	psect	text24
  7581   0123C6                     __ptext24:
  7582                           	callstack 0
  7583   0123C6                     _dtoa:
  7584                           	callstack 118
  7585   0123C6                     
  7586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  7587   0123C6  C51E  F534         	movff	dtoa@d,dtoa@n
  7588   0123CA  C51F  F535         	movff	dtoa@d+1,dtoa@n+1
  7589   0123CE  C520  F536         	movff	dtoa@d+2,dtoa@n+2
  7590   0123D2  C521  F537         	movff	dtoa@d+3,dtoa@n+3
  7591   0123D6  C522  F538         	movff	dtoa@d+4,dtoa@n+4
  7592   0123DA  C523  F539         	movff	dtoa@d+5,dtoa@n+5
  7593   0123DE  C524  F53A         	movff	dtoa@d+6,dtoa@n+6
  7594   0123E2  C525  F53B         	movff	dtoa@d+7,dtoa@n+7
  7595   0123E6                     
  7596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  7597   0123E6  BE3B               	btfsc	(dtoa@n+7)^(0+1280),7,c
  7598   0123E8  EFF8  F091         	goto	u4971
  7599   0123EC  EFFB  F091         	goto	u4970
  7600   0123F0                     u4971:
  7601   0123F0  0E01               	movlw	1
  7602   0123F2  EFFC  F091         	goto	u4980
  7603   0123F6                     u4970:
  7604   0123F6  0E00               	movlw	0
  7605   0123F8                     u4980:
  7606   0123F8  6E3E               	movwf	dtoa@s^(0+1280),c
  7607   0123FA                     
  7608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  7609   0123FA  503E               	movf	dtoa@s^(0+1280),w,c
  7610   0123FC  B4D8               	btfsc	status,2,c
  7611   0123FE  EF03  F092         	goto	u4991
  7612   012402  EF05  F092         	goto	u4990
  7613   012406                     u4991:
  7614   012406  EF15  F092         	goto	l5251
  7615   01240A                     u4990:
  7616   01240A                     
  7617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  7618   01240A  1E3B               	comf	(dtoa@n+7)^(0+1280),f,c
  7619   01240C  1E3A               	comf	(dtoa@n+6)^(0+1280),f,c
  7620   01240E  1E39               	comf	(dtoa@n+5)^(0+1280),f,c
  7621   012410  1E38               	comf	(dtoa@n+4)^(0+1280),f,c
  7622   012412  1E37               	comf	(dtoa@n+3)^(0+1280),f,c
  7623   012414  1E36               	comf	(dtoa@n+2)^(0+1280),f,c
  7624   012416  1E35               	comf	(dtoa@n+1)^(0+1280),f,c
  7625   012418  6C34               	negf	dtoa@n^(0+1280),c
  7626   01241A  0E00               	movlw	0
  7627   01241C  2235               	addwfc	(dtoa@n+1)^(0+1280),f,c
  7628   01241E  2236               	addwfc	(dtoa@n+2)^(0+1280),f,c
  7629   012420  2237               	addwfc	(dtoa@n+3)^(0+1280),f,c
  7630   012422  2238               	addwfc	(dtoa@n+4)^(0+1280),f,c
  7631   012424  2239               	addwfc	(dtoa@n+5)^(0+1280),f,c
  7632   012426  223A               	addwfc	(dtoa@n+6)^(0+1280),f,c
  7633   012428  223B               	addwfc	(dtoa@n+7)^(0+1280),f,c
  7634   01242A                     l5251:
  7635                           
  7636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 458:     if (!(pr
      +                          ec < 0)) {
  7637   01242A  0105               	movlb	5	; () banked
  7638   01242C  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  7639   01242E  EF1B  F092         	goto	u5001
  7640   012432  EF1D  F092         	goto	u5000
  7641   012436                     u5001:
  7642   012436  EF1E  F092         	goto	l5255
  7643   01243A                     u5000:
  7644   01243A                     
  7645                           ; BSR set to: 5
  7646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 459:         flag
      +                          s &= ~(1 << 1);
  7647   01243A  93E3               	bcf	_flags& (0+255),1,b
  7648   01243C                     l5255:
  7649                           
  7650                           ; BSR set to: 5
  7651                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  7652   01243C  BFDC               	btfsc	(_prec+1)& (0+255),7,b
  7653   01243E  EF2B  F092         	goto	u5010
  7654   012442  51DC               	movf	(_prec+1)& (0+255),w,b
  7655   012444  E106               	bnz	u5011
  7656   012446  05DB               	decf	_prec& (0+255),w,b
  7657   012448  B0D8               	btfsc	status,0,c
  7658   01244A  EF29  F092         	goto	u5011
  7659   01244E  EF2B  F092         	goto	u5010
  7660   012452                     u5011:
  7661   012452  EF31  F092         	goto	l1289
  7662   012456                     u5010:
  7663   012456                     
  7664                           ; BSR set to: 5
  7665   012456  0E00               	movlw	0
  7666   012458  6E31               	movwf	(dtoa@p+1)^(0+1280),c
  7667   01245A  0E01               	movlw	1
  7668   01245C  6E30               	movwf	dtoa@p^(0+1280),c
  7669   01245E  EF35  F092         	goto	l1291
  7670   012462                     l1289:
  7671                           
  7672                           ; BSR set to: 5
  7673   012462  C5DB  F530         	movff	_prec,dtoa@p
  7674   012466  C5DC  F531         	movff	_prec+1,dtoa@p+1
  7675   01246A                     l1291:
  7676                           
  7677                           ; BSR set to: 5
  7678                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  7679   01246A  C5D9  F532         	movff	_width,dtoa@w
  7680   01246E  C5DA  F533         	movff	_width+1,dtoa@w+1
  7681   012472                     
  7682                           ; BSR set to: 5
  7683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  7684   012472  503E               	movf	dtoa@s^(0+1280),w,c
  7685   012474  B4D8               	btfsc	status,2,c
  7686   012476  EF3F  F092         	goto	u5021
  7687   01247A  EF41  F092         	goto	u5020
  7688   01247E                     u5021:
  7689   01247E  EF58  F092         	goto	l1292
  7690   012482                     u5020:
  7691   012482                     
  7692                           ; BSR set to: 5
  7693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  7694   012482  0632               	decf	dtoa@w^(0+1280),f,c
  7695   012484  A0D8               	btfss	status,0,c
  7696   012486  0633               	decf	(dtoa@w+1)^(0+1280),f,c
  7697   012488                     
  7698                           ; BSR set to: 5
  7699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  7700   012488  503E               	movf	dtoa@s^(0+1280),w,c
  7701   01248A  A4D8               	btfss	status,2,c
  7702   01248C  EF4A  F092         	goto	u5031
  7703   012490  EF4C  F092         	goto	u5030
  7704   012494                     u5031:
  7705   012494  EF52  F092         	goto	l5267
  7706   012498                     u5030:
  7707   012498                     
  7708                           ; BSR set to: 5
  7709   012498  0E00               	movlw	0
  7710   01249A  6E2F               	movwf	(_dtoa$1479+1)^(0+1280),c
  7711   01249C  0E2B               	movlw	43
  7712   01249E  6E2E               	movwf	_dtoa$1479^(0+1280),c
  7713   0124A0  EF56  F092         	goto	l5269
  7714   0124A4                     l5267:
  7715                           
  7716                           ; BSR set to: 5
  7717   0124A4  0E00               	movlw	0
  7718   0124A6  6E2F               	movwf	(_dtoa$1479+1)^(0+1280),c
  7719   0124A8  0E2D               	movlw	45
  7720   0124AA  6E2E               	movwf	_dtoa$1479^(0+1280),c
  7721   0124AC                     l5269:
  7722                           
  7723                           ; BSR set to: 5
  7724   0124AC  C52E  F53E         	movff	_dtoa$1479,dtoa@s
  7725   0124B0                     l1292:
  7726                           
  7727                           ; BSR set to: 5
  7728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  7729   0124B0  0E00               	movlw	0
  7730   0124B2  6E3D               	movwf	(dtoa@i+1)^(0+1280),c
  7731   0124B4  0E4F               	movlw	79
  7732   0124B6  6E3C               	movwf	dtoa@i^(0+1280),c
  7733   0124B8                     
  7734                           ; BSR set to: 5
  7735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  7736   0124B8  0E00               	movlw	0
  7737   0124BA  0106               	movlb	6	; () banked
  7738   0124BC  6F4F               	movwf	(_dbuf+79)& (0+255),b
  7739                           
  7740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7741   0124BE  EFDD  F092         	goto	l5283
  7742   0124C2                     l5273:
  7743                           
  7744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  7745   0124C2  063C               	decf	dtoa@i^(0+1280),f,c
  7746   0124C4  A0D8               	btfss	status,0,c
  7747   0124C6  063D               	decf	(dtoa@i+1)^(0+1280),f,c
  7748   0124C8                     
  7749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7750   0124C8  0E00               	movlw	low _dbuf
  7751   0124CA  243C               	addwf	dtoa@i^(0+1280),w,c
  7752   0124CC  6ED9               	movwf	fsr2l,c
  7753   0124CE  0E06               	movlw	high _dbuf
  7754   0124D0  203D               	addwfc	(dtoa@i+1)^(0+1280),w,c
  7755   0124D2  6EDA               	movwf	fsr2h,c
  7756   0124D4  C534  F501         	movff	dtoa@n,___aomod@dividend
  7757   0124D8  C535  F502         	movff	dtoa@n+1,___aomod@dividend+1
  7758   0124DC  C536  F503         	movff	dtoa@n+2,___aomod@dividend+2
  7759   0124E0  C537  F504         	movff	dtoa@n+3,___aomod@dividend+3
  7760   0124E4  C538  F505         	movff	dtoa@n+4,___aomod@dividend+4
  7761   0124E8  C539  F506         	movff	dtoa@n+5,___aomod@dividend+5
  7762   0124EC  C53A  F507         	movff	dtoa@n+6,___aomod@dividend+6
  7763   0124F0  C53B  F508         	movff	dtoa@n+7,___aomod@dividend+7
  7764   0124F4  0E0A               	movlw	10
  7765   0124F6  6E09               	movwf	___aomod@divisor^(0+1280),c
  7766   0124F8  0E00               	movlw	0
  7767   0124FA  6E0A               	movwf	(___aomod@divisor+1)^(0+1280),c
  7768   0124FC  0E00               	movlw	0
  7769   0124FE  6E0B               	movwf	(___aomod@divisor+2)^(0+1280),c
  7770   012500  0E00               	movlw	0
  7771   012502  6E0C               	movwf	(___aomod@divisor+3)^(0+1280),c
  7772   012504  0E00               	movlw	0
  7773   012506  6E0D               	movwf	(___aomod@divisor+4)^(0+1280),c
  7774   012508  0E00               	movlw	0
  7775   01250A  6E0E               	movwf	(___aomod@divisor+5)^(0+1280),c
  7776   01250C  0E00               	movlw	0
  7777   01250E  6E0F               	movwf	(___aomod@divisor+6)^(0+1280),c
  7778   012510  0E00               	movlw	0
  7779   012512  6E10               	movwf	(___aomod@divisor+7)^(0+1280),c
  7780   012514  EC38  F09C         	call	___aomod	;wreg free
  7781   012518  C501  F526         	movff	?___aomod,??_dtoa
  7782   01251C  C502  F527         	movff	?___aomod+1,??_dtoa+1
  7783   012520  C503  F528         	movff	?___aomod+2,??_dtoa+2
  7784   012524  C504  F529         	movff	?___aomod+3,??_dtoa+3
  7785   012528  C505  F52A         	movff	?___aomod+4,??_dtoa+4
  7786   01252C  C506  F52B         	movff	?___aomod+5,??_dtoa+5
  7787   012530  C507  F52C         	movff	?___aomod+6,??_dtoa+6
  7788   012534  C508  F52D         	movff	?___aomod+7,??_dtoa+7
  7789   012538  C526  F513         	movff	??_dtoa,abs@a
  7790   01253C  C527  F514         	movff	??_dtoa+1,abs@a+1
  7791   012540  EC99  F0A4         	call	_abs	;wreg free
  7792   012544  5013               	movf	?_abs^(0+1280),w,c
  7793   012546  0F30               	addlw	48
  7794   012548  6EDF               	movwf	indf2,c
  7795   01254A                     
  7796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  7797   01254A  0630               	decf	dtoa@p^(0+1280),f,c
  7798   01254C  A0D8               	btfss	status,0,c
  7799   01254E  0631               	decf	(dtoa@p+1)^(0+1280),f,c
  7800   012550                     
  7801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  7802   012550  0632               	decf	dtoa@w^(0+1280),f,c
  7803   012552  A0D8               	btfss	status,0,c
  7804   012554  0633               	decf	(dtoa@w+1)^(0+1280),f,c
  7805   012556                     
  7806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  7807   012556  C534  F501         	movff	dtoa@n,___aodiv@dividend
  7808   01255A  C535  F502         	movff	dtoa@n+1,___aodiv@dividend+1
  7809   01255E  C536  F503         	movff	dtoa@n+2,___aodiv@dividend+2
  7810   012562  C537  F504         	movff	dtoa@n+3,___aodiv@dividend+3
  7811   012566  C538  F505         	movff	dtoa@n+4,___aodiv@dividend+4
  7812   01256A  C539  F506         	movff	dtoa@n+5,___aodiv@dividend+5
  7813   01256E  C53A  F507         	movff	dtoa@n+6,___aodiv@dividend+6
  7814   012572  C53B  F508         	movff	dtoa@n+7,___aodiv@dividend+7
  7815   012576  0E0A               	movlw	10
  7816   012578  6E09               	movwf	___aodiv@divisor^(0+1280),c
  7817   01257A  0E00               	movlw	0
  7818   01257C  6E0A               	movwf	(___aodiv@divisor+1)^(0+1280),c
  7819   01257E  0E00               	movlw	0
  7820   012580  6E0B               	movwf	(___aodiv@divisor+2)^(0+1280),c
  7821   012582  0E00               	movlw	0
  7822   012584  6E0C               	movwf	(___aodiv@divisor+3)^(0+1280),c
  7823   012586  0E00               	movlw	0
  7824   012588  6E0D               	movwf	(___aodiv@divisor+4)^(0+1280),c
  7825   01258A  0E00               	movlw	0
  7826   01258C  6E0E               	movwf	(___aodiv@divisor+5)^(0+1280),c
  7827   01258E  0E00               	movlw	0
  7828   012590  6E0F               	movwf	(___aodiv@divisor+6)^(0+1280),c
  7829   012592  0E00               	movlw	0
  7830   012594  6E10               	movwf	(___aodiv@divisor+7)^(0+1280),c
  7831   012596  EC74  F09B         	call	___aodiv	;wreg free
  7832   01259A  C501  F534         	movff	?___aodiv,dtoa@n
  7833   01259E  C502  F535         	movff	?___aodiv+1,dtoa@n+1
  7834   0125A2  C503  F536         	movff	?___aodiv+2,dtoa@n+2
  7835   0125A6  C504  F537         	movff	?___aodiv+3,dtoa@n+3
  7836   0125AA  C505  F538         	movff	?___aodiv+4,dtoa@n+4
  7837   0125AE  C506  F539         	movff	?___aodiv+5,dtoa@n+5
  7838   0125B2  C507  F53A         	movff	?___aodiv+6,dtoa@n+6
  7839   0125B6  C508  F53B         	movff	?___aodiv+7,dtoa@n+7
  7840   0125BA                     l5283:
  7841                           
  7842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  7843   0125BA  BE3D               	btfsc	(dtoa@i+1)^(0+1280),7,c
  7844   0125BC  EFE8  F092         	goto	u5041
  7845   0125C0  503D               	movf	(dtoa@i+1)^(0+1280),w,c
  7846   0125C2  E108               	bnz	u5040
  7847   0125C4  043C               	decf	dtoa@i^(0+1280),w,c
  7848   0125C6  A0D8               	btfss	status,0,c
  7849   0125C8  EFE8  F092         	goto	u5041
  7850   0125CC  EFEA  F092         	goto	u5040
  7851   0125D0                     u5041:
  7852   0125D0  EF1B  F093         	goto	l5293
  7853   0125D4                     u5040:
  7854   0125D4  5034               	movf	dtoa@n^(0+1280),w,c
  7855   0125D6  1035               	iorwf	(dtoa@n+1)^(0+1280),w,c
  7856   0125D8  1036               	iorwf	(dtoa@n+2)^(0+1280),w,c
  7857   0125DA  1037               	iorwf	(dtoa@n+3)^(0+1280),w,c
  7858   0125DC  1038               	iorwf	(dtoa@n+4)^(0+1280),w,c
  7859   0125DE  1039               	iorwf	(dtoa@n+5)^(0+1280),w,c
  7860   0125E0  103A               	iorwf	(dtoa@n+6)^(0+1280),w,c
  7861   0125E2  103B               	iorwf	(dtoa@n+7)^(0+1280),w,c
  7862   0125E4  A4D8               	btfss	status,2,c
  7863   0125E6  EFF7  F092         	goto	u5051
  7864   0125EA  EFF9  F092         	goto	u5050
  7865   0125EE                     u5051:
  7866   0125EE  EF61  F092         	goto	l5273
  7867   0125F2                     u5050:
  7868   0125F2  BE31               	btfsc	(dtoa@p+1)^(0+1280),7,c
  7869   0125F4  EF06  F093         	goto	u5060
  7870   0125F8  5031               	movf	(dtoa@p+1)^(0+1280),w,c
  7871   0125FA  E106               	bnz	u5061
  7872   0125FC  0430               	decf	dtoa@p^(0+1280),w,c
  7873   0125FE  B0D8               	btfsc	status,0,c
  7874   012600  EF04  F093         	goto	u5061
  7875   012604  EF06  F093         	goto	u5060
  7876   012608                     u5061:
  7877   012608  EF61  F092         	goto	l5273
  7878   01260C                     u5060:
  7879   01260C  BE33               	btfsc	(dtoa@w+1)^(0+1280),7,c
  7880   01260E  EF11  F093         	goto	u5071
  7881   012612  5033               	movf	(dtoa@w+1)^(0+1280),w,c
  7882   012614  E108               	bnz	u5070
  7883   012616  0432               	decf	dtoa@w^(0+1280),w,c
  7884   012618  A0D8               	btfss	status,0,c
  7885   01261A  EF11  F093         	goto	u5071
  7886   01261E  EF13  F093         	goto	u5070
  7887   012622                     u5071:
  7888   012622  EF1B  F093         	goto	l5293
  7889   012626                     u5070:
  7890   012626  0105               	movlb	5	; () banked
  7891   012628  B3E3               	btfsc	_flags& (0+255),1,b
  7892   01262A  EF19  F093         	goto	u5081
  7893   01262E  EF1B  F093         	goto	u5080
  7894   012632                     u5081:
  7895   012632  EF61  F092         	goto	l5273
  7896   012636                     u5080:
  7897   012636                     l5293:
  7898                           
  7899                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  7900   012636  503E               	movf	dtoa@s^(0+1280),w,c
  7901   012638  B4D8               	btfsc	status,2,c
  7902   01263A  EF21  F093         	goto	u5091
  7903   01263E  EF23  F093         	goto	u5090
  7904   012642                     u5091:
  7905   012642  EF2E  F093         	goto	l5299
  7906   012646                     u5090:
  7907   012646                     
  7908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  7909   012646  063C               	decf	dtoa@i^(0+1280),f,c
  7910   012648  A0D8               	btfss	status,0,c
  7911   01264A  063D               	decf	(dtoa@i+1)^(0+1280),f,c
  7912   01264C                     
  7913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  7914   01264C  0E00               	movlw	low _dbuf
  7915   01264E  243C               	addwf	dtoa@i^(0+1280),w,c
  7916   012650  6ED9               	movwf	fsr2l,c
  7917   012652  0E06               	movlw	high _dbuf
  7918   012654  203D               	addwfc	(dtoa@i+1)^(0+1280),w,c
  7919   012656  6EDA               	movwf	fsr2h,c
  7920   012658  C53E  F4DF         	movff	dtoa@s,indf2
  7921   01265C                     l5299:
  7922                           
  7923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7924   01265C  C51C  F511         	movff	dtoa@fp,pad@fp
  7925   012660  C51D  F512         	movff	dtoa@fp+1,pad@fp+1
  7926   012664  0E00               	movlw	low _dbuf
  7927   012666  243C               	addwf	dtoa@i^(0+1280),w,c
  7928   012668  6E13               	movwf	pad@buf^(0+1280),c
  7929   01266A  0E06               	movlw	high _dbuf
  7930   01266C  203D               	addwfc	(dtoa@i+1)^(0+1280),w,c
  7931   01266E  6E14               	movwf	(pad@buf+1)^(0+1280),c
  7932   012670  C532  F515         	movff	dtoa@w,pad@p
  7933   012674  C533  F516         	movff	dtoa@w+1,pad@p+1
  7934   012678  ECEE  F09F         	call	_pad	;wreg free
  7935   01267C  0012               	return		;funcret
  7936   01267E                     __end_of_dtoa:
  7937                           	callstack 0
  7938                           
  7939 ;; *************** function _pad *****************
  7940 ;; Defined at:
  7941 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7944 ;;		 -> sprintf@f(11), 
  7945 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7946 ;;		 -> dbuf(80), 
  7947 ;;  p               2   20[COMRAM] int 
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;  w               2   25[COMRAM] int 
  7950 ;;  i               2   23[COMRAM] int 
  7951 ;; Return value:  Size  Location     Type
  7952 ;;                  1    wreg      void 
  7953 ;; Registers used:
  7954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7955 ;; Tracked objects:
  7956 ;;		On entry : 0/0
  7957 ;;		On exit  : 0/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  7960 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7961 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7963 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7964 ;;Total ram usage:       11 bytes
  7965 ;; Hardware stack levels used: 1
  7966 ;; Hardware stack levels required when called: 3
  7967 ;; This function calls:
  7968 ;;		_fputc
  7969 ;;		_fputs
  7970 ;; This function is called by:
  7971 ;;		_dtoa
  7972 ;;		_efgtoa
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text25
  7977   013FDC                     __ptext25:
  7978                           	callstack 0
  7979   013FDC                     _pad:
  7980                           	callstack 118
  7981   013FDC                     
  7982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 139:     if (flags & (1 << 0)) {
  7983   013FDC  0105               	movlb	5	; () banked
  7984   013FDE  A1E3               	btfss	_flags& (0+255),0,b
  7985   013FE0  EFF4  F09F         	goto	u4681
  7986   013FE4  EFF6  F09F         	goto	u4680
  7987   013FE8                     u4681:
  7988   013FE8  EF00  F0A0         	goto	l5137
  7989   013FEC                     u4680:
  7990   013FEC                     
  7991                           ; BSR set to: 5
  7992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 140:         fput
      +                          s((const char *)buf, fp);
  7993   013FEC  C513  F50A         	movff	pad@buf,fputs@s
  7994   013FF0  C514  F50B         	movff	pad@buf+1,fputs@s+1
  7995   013FF4  C511  F50C         	movff	pad@fp,fputs@fp
  7996   013FF8  C512  F50D         	movff	pad@fp+1,fputs@fp+1
  7997   013FFC  EC57  F0A4         	call	_fputs	;wreg free
  7998   014000                     l5137:
  7999                           
  8000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 145:     w = (p <
      +                           0) ? 0 : p;
  8001   014000  BE16               	btfsc	(pad@p+1)^(0+1280),7,c
  8002   014002  EF05  F0A0         	goto	u4691
  8003   014006  EF07  F0A0         	goto	u4690
  8004   01400A                     u4691:
  8005   01400A  EF0D  F0A0         	goto	l5141
  8006   01400E                     u4690:
  8007   01400E  C515  F51A         	movff	pad@p,pad@w
  8008   014012  C516  F51B         	movff	pad@p+1,pad@w+1
  8009   014016  EF11  F0A0         	goto	l1278
  8010   01401A                     l5141:
  8011   01401A  0E00               	movlw	0
  8012   01401C  6E1B               	movwf	(pad@w+1)^(0+1280),c
  8013   01401E  0E00               	movlw	0
  8014   014020  6E1A               	movwf	pad@w^(0+1280),c
  8015   014022                     l1278:
  8016                           
  8017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  8018   014022  0E00               	movlw	0
  8019   014024  6E19               	movwf	(pad@i+1)^(0+1280),c
  8020   014026  0E00               	movlw	0
  8021   014028  6E18               	movwf	pad@i^(0+1280),c
  8022                           
  8023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8024   01402A  EF23  F0A0         	goto	l5147
  8025   01402E                     l5143:
  8026                           
  8027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  8028   01402E  0E00               	movlw	0
  8029   014030  6E02               	movwf	(fputc@c+1)^(0+1280),c
  8030   014032  0E20               	movlw	32
  8031   014034  6E01               	movwf	fputc@c^(0+1280),c
  8032   014036  C511  F503         	movff	pad@fp,fputc@fp
  8033   01403A  C512  F504         	movff	pad@fp+1,fputc@fp+1
  8034   01403E  EC89  F09F         	call	_fputc	;wreg free
  8035   014042                     
  8036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  8037   014042  4A18               	infsnz	pad@i^(0+1280),f,c
  8038   014044  2A19               	incf	(pad@i+1)^(0+1280),f,c
  8039   014046                     l5147:
  8040                           
  8041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  8042   014046  501A               	movf	pad@w^(0+1280),w,c
  8043   014048  5C18               	subwf	pad@i^(0+1280),w,c
  8044   01404A  5019               	movf	(pad@i+1)^(0+1280),w,c
  8045   01404C  0A80               	xorlw	128
  8046   01404E  6E17               	movwf	??_pad^(0+1280),c
  8047   014050  501B               	movf	(pad@w+1)^(0+1280),w,c
  8048   014052  0A80               	xorlw	128
  8049   014054  5817               	subwfb	??_pad^(0+1280),w,c
  8050   014056  A0D8               	btfss	status,0,c
  8051   014058  EF30  F0A0         	goto	u4701
  8052   01405C  EF32  F0A0         	goto	u4700
  8053   014060                     u4701:
  8054   014060  EF17  F0A0         	goto	l5143
  8055   014064                     u4700:
  8056   014064                     
  8057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 154:     if (!(fl
      +                          ags & (1 << 0))) {
  8058   014064  0105               	movlb	5	; () banked
  8059   014066  B1E3               	btfsc	_flags& (0+255),0,b
  8060   014068  EF38  F0A0         	goto	u4711
  8061   01406C  EF3A  F0A0         	goto	u4710
  8062   014070                     u4711:
  8063   014070  EF44  F0A0         	goto	l1283
  8064   014074                     u4710:
  8065   014074                     
  8066                           ; BSR set to: 5
  8067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  8068   014074  C513  F50A         	movff	pad@buf,fputs@s
  8069   014078  C514  F50B         	movff	pad@buf+1,fputs@s+1
  8070   01407C  C511  F50C         	movff	pad@fp,fputs@fp
  8071   014080  C512  F50D         	movff	pad@fp+1,fputs@fp+1
  8072   014084  EC57  F0A4         	call	_fputs	;wreg free
  8073   014088                     l1283:
  8074   014088  0012               	return		;funcret
  8075   01408A                     __end_of_pad:
  8076                           	callstack 0
  8077                           
  8078 ;; *************** function _fputs *****************
  8079 ;; Defined at:
  8080 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8083 ;;		 -> dbuf(80), 
  8084 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8085 ;;		 -> sprintf@f(11), 
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  i               2   14[COMRAM] int 
  8088 ;;  c               1   13[COMRAM] unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  2    9[COMRAM] int 
  8091 ;; Registers used:
  8092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8099 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8101 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8102 ;;Total ram usage:        7 bytes
  8103 ;; Hardware stack levels used: 1
  8104 ;; Hardware stack levels required when called: 2
  8105 ;; This function calls:
  8106 ;;		_fputc
  8107 ;; This function is called by:
  8108 ;;		_pad
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           	psect	text26
  8113   0148AE                     __ptext26:
  8114                           	callstack 0
  8115   0148AE                     _fputs:
  8116                           	callstack 118
  8117   0148AE  0E00               	movlw	0
  8118   0148B0  6E10               	movwf	(fputs@i+1)^(0+1280),c
  8119   0148B2  0E00               	movlw	0
  8120   0148B4  6E0F               	movwf	fputs@i^(0+1280),c
  8121   0148B6  EF68  F0A4         	goto	l4665
  8122   0148BA                     l4661:
  8123   0148BA  C50E  F501         	movff	fputs@c,fputc@c
  8124   0148BE  6A02               	clrf	(fputc@c+1)^(0+1280),c
  8125   0148C0  C50C  F503         	movff	fputs@fp,fputc@fp
  8126   0148C4  C50D  F504         	movff	fputs@fp+1,fputc@fp+1
  8127   0148C8  EC89  F09F         	call	_fputc	;wreg free
  8128   0148CC  4A0F               	infsnz	fputs@i^(0+1280),f,c
  8129   0148CE  2A10               	incf	(fputs@i+1)^(0+1280),f,c
  8130   0148D0                     l4665:
  8131   0148D0  500F               	movf	fputs@i^(0+1280),w,c
  8132   0148D2  240A               	addwf	fputs@s^(0+1280),w,c
  8133   0148D4  6ED9               	movwf	fsr2l,c
  8134   0148D6  5010               	movf	(fputs@i+1)^(0+1280),w,c
  8135   0148D8  200B               	addwfc	(fputs@s+1)^(0+1280),w,c
  8136   0148DA  6EDA               	movwf	fsr2h,c
  8137   0148DC  50DF               	movf	indf2,w,c
  8138   0148DE  6E0E               	movwf	fputs@c^(0+1280),c
  8139   0148E0  500E               	movf	fputs@c^(0+1280),w,c
  8140   0148E2  A4D8               	btfss	status,2,c
  8141   0148E4  EF76  F0A4         	goto	u3961
  8142   0148E8  EF78  F0A4         	goto	u3960
  8143   0148EC                     u3961:
  8144   0148EC  EF5D  F0A4         	goto	l4661
  8145   0148F0                     u3960:
  8146   0148F0  0012               	return		;funcret
  8147   0148F2                     __end_of_fputs:
  8148                           	callstack 0
  8149                           
  8150 ;; *************** function _fputc *****************
  8151 ;; Defined at:
  8152 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  c               2    0[COMRAM] int 
  8155 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8156 ;;		 -> sprintf@f(11), 
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;		None
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  2    0[COMRAM] int 
  8161 ;; Registers used:
  8162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8168 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8170 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8171 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8172 ;;Total ram usage:        9 bytes
  8173 ;; Hardware stack levels used: 1
  8174 ;; Hardware stack levels required when called: 1
  8175 ;; This function calls:
  8176 ;;		_putch
  8177 ;; This function is called by:
  8178 ;;		_pad
  8179 ;;		_vfpfcnvrt
  8180 ;;		_fputs
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           	psect	text27
  8185   013F12                     __ptext27:
  8186                           	callstack 0
  8187   013F12                     _fputc:
  8188                           	callstack 121
  8189   013F12  5003               	movf	fputc@fp^(0+1280),w,c
  8190   013F14  1004               	iorwf	(fputc@fp+1)^(0+1280),w,c
  8191   013F16  B4D8               	btfsc	status,2,c
  8192   013F18  EF90  F09F         	goto	u3491
  8193   013F1C  EF92  F09F         	goto	u3490
  8194   013F20                     u3491:
  8195   013F20  EF9B  F09F         	goto	l4421
  8196   013F24                     u3490:
  8197   013F24  5003               	movf	fputc@fp^(0+1280),w,c
  8198   013F26  1004               	iorwf	(fputc@fp+1)^(0+1280),w,c
  8199   013F28  A4D8               	btfss	status,2,c
  8200   013F2A  EF99  F09F         	goto	u3501
  8201   013F2E  EF9B  F09F         	goto	u3500
  8202   013F32                     u3501:
  8203   013F32  EFA0  F09F         	goto	l4423
  8204   013F36                     u3500:
  8205   013F36                     l4421:
  8206   013F36  5001               	movf	fputc@c^(0+1280),w,c
  8207   013F38  EC7B  F0A5         	call	_putch
  8208   013F3C  EFED  F09F         	goto	l1510
  8209   013F40                     l4423:
  8210   013F40  EE20 F009          	lfsr	2,9
  8211   013F44  5003               	movf	fputc@fp^(0+1280),w,c
  8212   013F46  26D9               	addwf	fsr2l,f,c
  8213   013F48  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  8214   013F4A  22DA               	addwfc	fsr2h,f,c
  8215   013F4C  50DE               	movf	postinc2,w,c
  8216   013F4E  10DE               	iorwf	postinc2,w,c
  8217   013F50  B4D8               	btfsc	status,2,c
  8218   013F52  EFAD  F09F         	goto	u3511
  8219   013F56  EFAF  F09F         	goto	u3510
  8220   013F5A                     u3511:
  8221   013F5A  EFCA  F09F         	goto	l4427
  8222   013F5E                     u3510:
  8223   013F5E  EE20 F009          	lfsr	2,9
  8224   013F62  5003               	movf	fputc@fp^(0+1280),w,c
  8225   013F64  26D9               	addwf	fsr2l,f,c
  8226   013F66  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  8227   013F68  22DA               	addwfc	fsr2h,f,c
  8228   013F6A  EE10 F003          	lfsr	1,3
  8229   013F6E  5003               	movf	fputc@fp^(0+1280),w,c
  8230   013F70  26E1               	addwf	fsr1l,f,c
  8231   013F72  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  8232   013F74  22E2               	addwfc	fsr1h,f,c
  8233   013F76  50DE               	movf	postinc2,w,c
  8234   013F78  5CE6               	subwf	postinc1,w,c
  8235   013F7A  50E6               	movf	postinc1,w,c
  8236   013F7C  0A80               	xorlw	128
  8237   013F7E  6E09               	movwf	(??_fputc+4)^(0+1280),c
  8238   013F80  50DE               	movf	postinc2,w,c
  8239   013F82  0A80               	xorlw	128
  8240   013F84  5809               	subwfb	(??_fputc+4)^(0+1280),w,c
  8241   013F86  B0D8               	btfsc	status,0,c
  8242   013F88  EFC8  F09F         	goto	u3521
  8243   013F8C  EFCA  F09F         	goto	u3520
  8244   013F90                     u3521:
  8245   013F90  EFED  F09F         	goto	l1510
  8246   013F94                     u3520:
  8247   013F94                     l4427:
  8248   013F94  EE20 F003          	lfsr	2,3
  8249   013F98  5003               	movf	fputc@fp^(0+1280),w,c
  8250   013F9A  26D9               	addwf	fsr2l,f,c
  8251   013F9C  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  8252   013F9E  22DA               	addwfc	fsr2h,f,c
  8253   013FA0  C4DE F505          	movff	postinc2,??_fputc
  8254   013FA4  C4DD F506          	movff	postdec2,??_fputc+1
  8255   013FA8  C503  F4D9         	movff	fputc@fp,fsr2l
  8256   013FAC  C504  F4DA         	movff	fputc@fp+1,fsr2h
  8257   013FB0  C4DE F507          	movff	postinc2,??_fputc+2
  8258   013FB4  C4DD F508          	movff	postdec2,??_fputc+3
  8259   013FB8  5005               	movf	??_fputc^(0+1280),w,c
  8260   013FBA  2407               	addwf	(??_fputc+2)^(0+1280),w,c
  8261   013FBC  6ED9               	movwf	fsr2l,c
  8262   013FBE  5006               	movf	(??_fputc+1)^(0+1280),w,c
  8263   013FC0  2008               	addwfc	(??_fputc+3)^(0+1280),w,c
  8264   013FC2  6EDA               	movwf	fsr2h,c
  8265   013FC4  C501  F4DF         	movff	fputc@c,indf2
  8266   013FC8  EE20 F003          	lfsr	2,3
  8267   013FCC  5003               	movf	fputc@fp^(0+1280),w,c
  8268   013FCE  26D9               	addwf	fsr2l,f,c
  8269   013FD0  5004               	movf	(fputc@fp+1)^(0+1280),w,c
  8270   013FD2  22DA               	addwfc	fsr2h,f,c
  8271   013FD4  2ADE               	incf	postinc2,f,c
  8272   013FD6  0E00               	movlw	0
  8273   013FD8  22DD               	addwfc	postdec2,f,c
  8274   013FDA                     l1510:
  8275   013FDA  0012               	return		;funcret
  8276   013FDC                     __end_of_fputc:
  8277                           	callstack 0
  8278                           
  8279 ;; *************** function _putch *****************
  8280 ;; Defined at:
  8281 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  c               1    wreg     unsigned char 
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;  c               1    0[COMRAM] unsigned char 
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  1    wreg      void 
  8288 ;; Registers used:
  8289 ;;		wreg
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8299 ;;Total ram usage:        0 bytes
  8300 ;; Hardware stack levels used: 1
  8301 ;; This function calls:
  8302 ;;		Nothing
  8303 ;; This function is called by:
  8304 ;;		_fputc
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           
  8308                           	psect	text28
  8309   014AF6                     __ptext28:
  8310                           	callstack 0
  8311   014AF6                     _putch:
  8312                           	callstack 121
  8313   014AF6  0012               	return		;funcret
  8314   014AF8                     __end_of_putch:
  8315                           	callstack 0
  8316                           
  8317 ;; *************** function _abs *****************
  8318 ;; Defined at:
  8319 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;  a               2   18[COMRAM] int 
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;		None
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  2   18[COMRAM] int 
  8326 ;; Registers used:
  8327 ;;		wreg, status,2, status,0
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8337 ;;Total ram usage:        4 bytes
  8338 ;; Hardware stack levels used: 1
  8339 ;; This function calls:
  8340 ;;		Nothing
  8341 ;; This function is called by:
  8342 ;;		_dtoa
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           
  8346                           	psect	text29
  8347   014932                     __ptext29:
  8348                           	callstack 0
  8349   014932                     _abs:
  8350                           	callstack 121
  8351   014932  BE14               	btfsc	(abs@a+1)^(0+1280),7,c
  8352   014934  EFA6  F0A4         	goto	u4720
  8353   014938  5014               	movf	(abs@a+1)^(0+1280),w,c
  8354   01493A  E106               	bnz	u4721
  8355   01493C  0413               	decf	abs@a^(0+1280),w,c
  8356   01493E  B0D8               	btfsc	status,0,c
  8357   014940  EFA4  F0A4         	goto	u4721
  8358   014944  EFA6  F0A4         	goto	u4720
  8359   014948                     u4721:
  8360   014948  EFB4  F0A4         	goto	l1430
  8361   01494C                     u4720:
  8362   01494C  C513  F515         	movff	abs@a,??_abs
  8363   014950  C514  F516         	movff	abs@a+1,??_abs+1
  8364   014954  1E15               	comf	??_abs^(0+1280),f,c
  8365   014956  1E16               	comf	(??_abs+1)^(0+1280),f,c
  8366   014958  4A15               	infsnz	??_abs^(0+1280),f,c
  8367   01495A  2A16               	incf	(??_abs+1)^(0+1280),f,c
  8368   01495C  C515  F513         	movff	??_abs,?_abs
  8369   014960  C516  F514         	movff	??_abs+1,?_abs+1
  8370   014964  EFB8  F0A4         	goto	l1433
  8371   014968                     l1430:
  8372   014968  C513  F513         	movff	abs@a,?_abs
  8373   01496C  C514  F514         	movff	abs@a+1,?_abs+1
  8374   014970                     l1433:
  8375   014970  0012               	return		;funcret
  8376   014972                     __end_of_abs:
  8377                           	callstack 0
  8378                           
  8379 ;; *************** function ___aomod *****************
  8380 ;; Defined at:
  8381 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;  dividend        8    0[COMRAM] long long 
  8384 ;;  divisor         8    8[COMRAM] long long 
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  sign            1   17[COMRAM] unsigned char 
  8387 ;;  counter         1   16[COMRAM] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;                  8    0[COMRAM] long long 
  8390 ;; Registers used:
  8391 ;;		wreg, status,2, status,0
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8397 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8398 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8400 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8401 ;;Total ram usage:       18 bytes
  8402 ;; Hardware stack levels used: 1
  8403 ;; This function calls:
  8404 ;;		Nothing
  8405 ;; This function is called by:
  8406 ;;		_dtoa
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text30
  8411   013870                     __ptext30:
  8412                           	callstack 0
  8413   013870                     ___aomod:
  8414                           	callstack 121
  8415   013870  0E00               	movlw	0
  8416   013872  6E12               	movwf	___aomod@sign^(0+1280),c
  8417   013874  BE08               	btfsc	(___aomod@dividend+7)^(0+1280),7,c
  8418   013876  EF41  F09C         	goto	u4040
  8419   01387A  EF3F  F09C         	goto	u4041
  8420   01387E                     u4041:
  8421   01387E  EF53  F09C         	goto	l4741
  8422   013882                     u4040:
  8423   013882  1E08               	comf	(___aomod@dividend+7)^(0+1280),f,c
  8424   013884  1E07               	comf	(___aomod@dividend+6)^(0+1280),f,c
  8425   013886  1E06               	comf	(___aomod@dividend+5)^(0+1280),f,c
  8426   013888  1E05               	comf	(___aomod@dividend+4)^(0+1280),f,c
  8427   01388A  1E04               	comf	(___aomod@dividend+3)^(0+1280),f,c
  8428   01388C  1E03               	comf	(___aomod@dividend+2)^(0+1280),f,c
  8429   01388E  1E02               	comf	(___aomod@dividend+1)^(0+1280),f,c
  8430   013890  6C01               	negf	___aomod@dividend^(0+1280),c
  8431   013892  0E00               	movlw	0
  8432   013894  2202               	addwfc	(___aomod@dividend+1)^(0+1280),f,c
  8433   013896  2203               	addwfc	(___aomod@dividend+2)^(0+1280),f,c
  8434   013898  2204               	addwfc	(___aomod@dividend+3)^(0+1280),f,c
  8435   01389A  2205               	addwfc	(___aomod@dividend+4)^(0+1280),f,c
  8436   01389C  2206               	addwfc	(___aomod@dividend+5)^(0+1280),f,c
  8437   01389E  2207               	addwfc	(___aomod@dividend+6)^(0+1280),f,c
  8438   0138A0  2208               	addwfc	(___aomod@dividend+7)^(0+1280),f,c
  8439   0138A2  0E01               	movlw	1
  8440   0138A4  6E12               	movwf	___aomod@sign^(0+1280),c
  8441   0138A6                     l4741:
  8442   0138A6  BE10               	btfsc	(___aomod@divisor+7)^(0+1280),7,c
  8443   0138A8  EF5A  F09C         	goto	u4050
  8444   0138AC  EF58  F09C         	goto	u4051
  8445   0138B0                     u4051:
  8446   0138B0  EF6A  F09C         	goto	l4745
  8447   0138B4                     u4050:
  8448   0138B4  1E10               	comf	(___aomod@divisor+7)^(0+1280),f,c
  8449   0138B6  1E0F               	comf	(___aomod@divisor+6)^(0+1280),f,c
  8450   0138B8  1E0E               	comf	(___aomod@divisor+5)^(0+1280),f,c
  8451   0138BA  1E0D               	comf	(___aomod@divisor+4)^(0+1280),f,c
  8452   0138BC  1E0C               	comf	(___aomod@divisor+3)^(0+1280),f,c
  8453   0138BE  1E0B               	comf	(___aomod@divisor+2)^(0+1280),f,c
  8454   0138C0  1E0A               	comf	(___aomod@divisor+1)^(0+1280),f,c
  8455   0138C2  6C09               	negf	___aomod@divisor^(0+1280),c
  8456   0138C4  0E00               	movlw	0
  8457   0138C6  220A               	addwfc	(___aomod@divisor+1)^(0+1280),f,c
  8458   0138C8  220B               	addwfc	(___aomod@divisor+2)^(0+1280),f,c
  8459   0138CA  220C               	addwfc	(___aomod@divisor+3)^(0+1280),f,c
  8460   0138CC  220D               	addwfc	(___aomod@divisor+4)^(0+1280),f,c
  8461   0138CE  220E               	addwfc	(___aomod@divisor+5)^(0+1280),f,c
  8462   0138D0  220F               	addwfc	(___aomod@divisor+6)^(0+1280),f,c
  8463   0138D2  2210               	addwfc	(___aomod@divisor+7)^(0+1280),f,c
  8464   0138D4                     l4745:
  8465   0138D4  5009               	movf	___aomod@divisor^(0+1280),w,c
  8466   0138D6  100A               	iorwf	(___aomod@divisor+1)^(0+1280),w,c
  8467   0138D8  100B               	iorwf	(___aomod@divisor+2)^(0+1280),w,c
  8468   0138DA  100C               	iorwf	(___aomod@divisor+3)^(0+1280),w,c
  8469   0138DC  100D               	iorwf	(___aomod@divisor+4)^(0+1280),w,c
  8470   0138DE  100E               	iorwf	(___aomod@divisor+5)^(0+1280),w,c
  8471   0138E0  100F               	iorwf	(___aomod@divisor+6)^(0+1280),w,c
  8472   0138E2  1010               	iorwf	(___aomod@divisor+7)^(0+1280),w,c
  8473   0138E4  B4D8               	btfsc	status,2,c
  8474   0138E6  EF77  F09C         	goto	u4061
  8475   0138EA  EF79  F09C         	goto	u4060
  8476   0138EE                     u4061:
  8477   0138EE  EFC1  F09C         	goto	l4761
  8478   0138F2                     u4060:
  8479   0138F2  0E01               	movlw	1
  8480   0138F4  6E11               	movwf	___aomod@counter^(0+1280),c
  8481   0138F6  EF87  F09C         	goto	l4751
  8482   0138FA                     l4749:
  8483   0138FA  90D8               	bcf	status,0,c
  8484   0138FC  3609               	rlcf	___aomod@divisor^(0+1280),f,c
  8485   0138FE  360A               	rlcf	(___aomod@divisor+1)^(0+1280),f,c
  8486   013900  360B               	rlcf	(___aomod@divisor+2)^(0+1280),f,c
  8487   013902  360C               	rlcf	(___aomod@divisor+3)^(0+1280),f,c
  8488   013904  360D               	rlcf	(___aomod@divisor+4)^(0+1280),f,c
  8489   013906  360E               	rlcf	(___aomod@divisor+5)^(0+1280),f,c
  8490   013908  360F               	rlcf	(___aomod@divisor+6)^(0+1280),f,c
  8491   01390A  3610               	rlcf	(___aomod@divisor+7)^(0+1280),f,c
  8492   01390C  2A11               	incf	___aomod@counter^(0+1280),f,c
  8493   01390E                     l4751:
  8494   01390E  AE10               	btfss	(___aomod@divisor+7)^(0+1280),7,c
  8495   013910  EF8C  F09C         	goto	u4071
  8496   013914  EF8E  F09C         	goto	u4070
  8497   013918                     u4071:
  8498   013918  EF7D  F09C         	goto	l4749
  8499   01391C                     u4070:
  8500   01391C                     l4753:
  8501   01391C  5009               	movf	___aomod@divisor^(0+1280),w,c
  8502   01391E  5C01               	subwf	___aomod@dividend^(0+1280),w,c
  8503   013920  500A               	movf	(___aomod@divisor+1)^(0+1280),w,c
  8504   013922  5802               	subwfb	(___aomod@dividend+1)^(0+1280),w,c
  8505   013924  500B               	movf	(___aomod@divisor+2)^(0+1280),w,c
  8506   013926  5803               	subwfb	(___aomod@dividend+2)^(0+1280),w,c
  8507   013928  500C               	movf	(___aomod@divisor+3)^(0+1280),w,c
  8508   01392A  5804               	subwfb	(___aomod@dividend+3)^(0+1280),w,c
  8509   01392C  500D               	movf	(___aomod@divisor+4)^(0+1280),w,c
  8510   01392E  5805               	subwfb	(___aomod@dividend+4)^(0+1280),w,c
  8511   013930  500E               	movf	(___aomod@divisor+5)^(0+1280),w,c
  8512   013932  5806               	subwfb	(___aomod@dividend+5)^(0+1280),w,c
  8513   013934  500F               	movf	(___aomod@divisor+6)^(0+1280),w,c
  8514   013936  5807               	subwfb	(___aomod@dividend+6)^(0+1280),w,c
  8515   013938  5010               	movf	(___aomod@divisor+7)^(0+1280),w,c
  8516   01393A  5808               	subwfb	(___aomod@dividend+7)^(0+1280),w,c
  8517   01393C  A0D8               	btfss	status,0,c
  8518   01393E  EFA3  F09C         	goto	u4081
  8519   013942  EFA5  F09C         	goto	u4080
  8520   013946                     u4081:
  8521   013946  EFB5  F09C         	goto	l4757
  8522   01394A                     u4080:
  8523   01394A  5009               	movf	___aomod@divisor^(0+1280),w,c
  8524   01394C  5E01               	subwf	___aomod@dividend^(0+1280),f,c
  8525   01394E  500A               	movf	(___aomod@divisor+1)^(0+1280),w,c
  8526   013950  5A02               	subwfb	(___aomod@dividend+1)^(0+1280),f,c
  8527   013952  500B               	movf	(___aomod@divisor+2)^(0+1280),w,c
  8528   013954  5A03               	subwfb	(___aomod@dividend+2)^(0+1280),f,c
  8529   013956  500C               	movf	(___aomod@divisor+3)^(0+1280),w,c
  8530   013958  5A04               	subwfb	(___aomod@dividend+3)^(0+1280),f,c
  8531   01395A  500D               	movf	(___aomod@divisor+4)^(0+1280),w,c
  8532   01395C  5A05               	subwfb	(___aomod@dividend+4)^(0+1280),f,c
  8533   01395E  500E               	movf	(___aomod@divisor+5)^(0+1280),w,c
  8534   013960  5A06               	subwfb	(___aomod@dividend+5)^(0+1280),f,c
  8535   013962  500F               	movf	(___aomod@divisor+6)^(0+1280),w,c
  8536   013964  5A07               	subwfb	(___aomod@dividend+6)^(0+1280),f,c
  8537   013966  5010               	movf	(___aomod@divisor+7)^(0+1280),w,c
  8538   013968  5A08               	subwfb	(___aomod@dividend+7)^(0+1280),f,c
  8539   01396A                     l4757:
  8540   01396A  90D8               	bcf	status,0,c
  8541   01396C  3210               	rrcf	(___aomod@divisor+7)^(0+1280),f,c
  8542   01396E  320F               	rrcf	(___aomod@divisor+6)^(0+1280),f,c
  8543   013970  320E               	rrcf	(___aomod@divisor+5)^(0+1280),f,c
  8544   013972  320D               	rrcf	(___aomod@divisor+4)^(0+1280),f,c
  8545   013974  320C               	rrcf	(___aomod@divisor+3)^(0+1280),f,c
  8546   013976  320B               	rrcf	(___aomod@divisor+2)^(0+1280),f,c
  8547   013978  320A               	rrcf	(___aomod@divisor+1)^(0+1280),f,c
  8548   01397A  3209               	rrcf	___aomod@divisor^(0+1280),f,c
  8549   01397C  2E11               	decfsz	___aomod@counter^(0+1280),f,c
  8550   01397E  EF8E  F09C         	goto	l4753
  8551   013982                     l4761:
  8552   013982  5012               	movf	___aomod@sign^(0+1280),w,c
  8553   013984  B4D8               	btfsc	status,2,c
  8554   013986  EFC7  F09C         	goto	u4091
  8555   01398A  EFC9  F09C         	goto	u4090
  8556   01398E                     u4091:
  8557   01398E  EFD9  F09C         	goto	l4765
  8558   013992                     u4090:
  8559   013992  1E08               	comf	(___aomod@dividend+7)^(0+1280),f,c
  8560   013994  1E07               	comf	(___aomod@dividend+6)^(0+1280),f,c
  8561   013996  1E06               	comf	(___aomod@dividend+5)^(0+1280),f,c
  8562   013998  1E05               	comf	(___aomod@dividend+4)^(0+1280),f,c
  8563   01399A  1E04               	comf	(___aomod@dividend+3)^(0+1280),f,c
  8564   01399C  1E03               	comf	(___aomod@dividend+2)^(0+1280),f,c
  8565   01399E  1E02               	comf	(___aomod@dividend+1)^(0+1280),f,c
  8566   0139A0  6C01               	negf	___aomod@dividend^(0+1280),c
  8567   0139A2  0E00               	movlw	0
  8568   0139A4  2202               	addwfc	(___aomod@dividend+1)^(0+1280),f,c
  8569   0139A6  2203               	addwfc	(___aomod@dividend+2)^(0+1280),f,c
  8570   0139A8  2204               	addwfc	(___aomod@dividend+3)^(0+1280),f,c
  8571   0139AA  2205               	addwfc	(___aomod@dividend+4)^(0+1280),f,c
  8572   0139AC  2206               	addwfc	(___aomod@dividend+5)^(0+1280),f,c
  8573   0139AE  2207               	addwfc	(___aomod@dividend+6)^(0+1280),f,c
  8574   0139B0  2208               	addwfc	(___aomod@dividend+7)^(0+1280),f,c
  8575   0139B2                     l4765:
  8576   0139B2  C501  F501         	movff	___aomod@dividend,?___aomod
  8577   0139B6  C502  F502         	movff	___aomod@dividend+1,?___aomod+1
  8578   0139BA  C503  F503         	movff	___aomod@dividend+2,?___aomod+2
  8579   0139BE  C504  F504         	movff	___aomod@dividend+3,?___aomod+3
  8580   0139C2  C505  F505         	movff	___aomod@dividend+4,?___aomod+4
  8581   0139C6  C506  F506         	movff	___aomod@dividend+5,?___aomod+5
  8582   0139CA  C507  F507         	movff	___aomod@dividend+6,?___aomod+6
  8583   0139CE  C508  F508         	movff	___aomod@dividend+7,?___aomod+7
  8584   0139D2  0012               	return		;funcret
  8585   0139D4                     __end_of___aomod:
  8586                           	callstack 0
  8587                           
  8588 ;; *************** function ___aodiv *****************
  8589 ;; Defined at:
  8590 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  dividend        8    0[COMRAM] long long 
  8593 ;;  divisor         8    8[COMRAM] long long 
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;  quotient        8   18[COMRAM] long long 
  8596 ;;  sign            1   17[COMRAM] unsigned char 
  8597 ;;  counter         1   16[COMRAM] unsigned char 
  8598 ;; Return value:  Size  Location     Type
  8599 ;;                  8    0[COMRAM] long long 
  8600 ;; Registers used:
  8601 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8607 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8608 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8610 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8611 ;;Total ram usage:       26 bytes
  8612 ;; Hardware stack levels used: 1
  8613 ;; This function calls:
  8614 ;;		Nothing
  8615 ;; This function is called by:
  8616 ;;		_dtoa
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           	psect	text31
  8621   0136E8                     __ptext31:
  8622                           	callstack 0
  8623   0136E8                     ___aodiv:
  8624                           	callstack 121
  8625   0136E8  0E00               	movlw	0
  8626   0136EA  6E12               	movwf	___aodiv@sign^(0+1280),c
  8627   0136EC  BE10               	btfsc	(___aodiv@divisor+7)^(0+1280),7,c
  8628   0136EE  EF7D  F09B         	goto	u3970
  8629   0136F2  EF7B  F09B         	goto	u3971
  8630   0136F6                     u3971:
  8631   0136F6  EF8F  F09B         	goto	l4697
  8632   0136FA                     u3970:
  8633   0136FA  1E10               	comf	(___aodiv@divisor+7)^(0+1280),f,c
  8634   0136FC  1E0F               	comf	(___aodiv@divisor+6)^(0+1280),f,c
  8635   0136FE  1E0E               	comf	(___aodiv@divisor+5)^(0+1280),f,c
  8636   013700  1E0D               	comf	(___aodiv@divisor+4)^(0+1280),f,c
  8637   013702  1E0C               	comf	(___aodiv@divisor+3)^(0+1280),f,c
  8638   013704  1E0B               	comf	(___aodiv@divisor+2)^(0+1280),f,c
  8639   013706  1E0A               	comf	(___aodiv@divisor+1)^(0+1280),f,c
  8640   013708  6C09               	negf	___aodiv@divisor^(0+1280),c
  8641   01370A  0E00               	movlw	0
  8642   01370C  220A               	addwfc	(___aodiv@divisor+1)^(0+1280),f,c
  8643   01370E  220B               	addwfc	(___aodiv@divisor+2)^(0+1280),f,c
  8644   013710  220C               	addwfc	(___aodiv@divisor+3)^(0+1280),f,c
  8645   013712  220D               	addwfc	(___aodiv@divisor+4)^(0+1280),f,c
  8646   013714  220E               	addwfc	(___aodiv@divisor+5)^(0+1280),f,c
  8647   013716  220F               	addwfc	(___aodiv@divisor+6)^(0+1280),f,c
  8648   013718  2210               	addwfc	(___aodiv@divisor+7)^(0+1280),f,c
  8649   01371A  0E01               	movlw	1
  8650   01371C  6E12               	movwf	___aodiv@sign^(0+1280),c
  8651   01371E                     l4697:
  8652   01371E  BE08               	btfsc	(___aodiv@dividend+7)^(0+1280),7,c
  8653   013720  EF96  F09B         	goto	u3980
  8654   013724  EF94  F09B         	goto	u3981
  8655   013728                     u3981:
  8656   013728  EFA8  F09B         	goto	l4703
  8657   01372C                     u3980:
  8658   01372C  1E08               	comf	(___aodiv@dividend+7)^(0+1280),f,c
  8659   01372E  1E07               	comf	(___aodiv@dividend+6)^(0+1280),f,c
  8660   013730  1E06               	comf	(___aodiv@dividend+5)^(0+1280),f,c
  8661   013732  1E05               	comf	(___aodiv@dividend+4)^(0+1280),f,c
  8662   013734  1E04               	comf	(___aodiv@dividend+3)^(0+1280),f,c
  8663   013736  1E03               	comf	(___aodiv@dividend+2)^(0+1280),f,c
  8664   013738  1E02               	comf	(___aodiv@dividend+1)^(0+1280),f,c
  8665   01373A  6C01               	negf	___aodiv@dividend^(0+1280),c
  8666   01373C  0E00               	movlw	0
  8667   01373E  2202               	addwfc	(___aodiv@dividend+1)^(0+1280),f,c
  8668   013740  2203               	addwfc	(___aodiv@dividend+2)^(0+1280),f,c
  8669   013742  2204               	addwfc	(___aodiv@dividend+3)^(0+1280),f,c
  8670   013744  2205               	addwfc	(___aodiv@dividend+4)^(0+1280),f,c
  8671   013746  2206               	addwfc	(___aodiv@dividend+5)^(0+1280),f,c
  8672   013748  2207               	addwfc	(___aodiv@dividend+6)^(0+1280),f,c
  8673   01374A  2208               	addwfc	(___aodiv@dividend+7)^(0+1280),f,c
  8674   01374C  0E01               	movlw	1
  8675   01374E  1A12               	xorwf	___aodiv@sign^(0+1280),f,c
  8676   013750                     l4703:
  8677   013750  EE21  F113         	lfsr	2,___aodiv@quotient
  8678   013754  0E07               	movlw	7
  8679   013756                     u3991:
  8680   013756  6ADE               	clrf	postinc2,c
  8681   013758  06E8               	decf	wreg,f,c
  8682   01375A  E2FD               	bc	u3991
  8683   01375C  5009               	movf	___aodiv@divisor^(0+1280),w,c
  8684   01375E  100A               	iorwf	(___aodiv@divisor+1)^(0+1280),w,c
  8685   013760  100B               	iorwf	(___aodiv@divisor+2)^(0+1280),w,c
  8686   013762  100C               	iorwf	(___aodiv@divisor+3)^(0+1280),w,c
  8687   013764  100D               	iorwf	(___aodiv@divisor+4)^(0+1280),w,c
  8688   013766  100E               	iorwf	(___aodiv@divisor+5)^(0+1280),w,c
  8689   013768  100F               	iorwf	(___aodiv@divisor+6)^(0+1280),w,c
  8690   01376A  1010               	iorwf	(___aodiv@divisor+7)^(0+1280),w,c
  8691   01376C  B4D8               	btfsc	status,2,c
  8692   01376E  EFBB  F09B         	goto	u4001
  8693   013772  EFBD  F09B         	goto	u4000
  8694   013776                     u4001:
  8695   013776  EF0F  F09C         	goto	l4725
  8696   01377A                     u4000:
  8697   01377A  0E01               	movlw	1
  8698   01377C  6E11               	movwf	___aodiv@counter^(0+1280),c
  8699   01377E  EFCB  F09B         	goto	l4711
  8700   013782                     l4709:
  8701   013782  90D8               	bcf	status,0,c
  8702   013784  3609               	rlcf	___aodiv@divisor^(0+1280),f,c
  8703   013786  360A               	rlcf	(___aodiv@divisor+1)^(0+1280),f,c
  8704   013788  360B               	rlcf	(___aodiv@divisor+2)^(0+1280),f,c
  8705   01378A  360C               	rlcf	(___aodiv@divisor+3)^(0+1280),f,c
  8706   01378C  360D               	rlcf	(___aodiv@divisor+4)^(0+1280),f,c
  8707   01378E  360E               	rlcf	(___aodiv@divisor+5)^(0+1280),f,c
  8708   013790  360F               	rlcf	(___aodiv@divisor+6)^(0+1280),f,c
  8709   013792  3610               	rlcf	(___aodiv@divisor+7)^(0+1280),f,c
  8710   013794  2A11               	incf	___aodiv@counter^(0+1280),f,c
  8711   013796                     l4711:
  8712   013796  AE10               	btfss	(___aodiv@divisor+7)^(0+1280),7,c
  8713   013798  EFD0  F09B         	goto	u4011
  8714   01379C  EFD2  F09B         	goto	u4010
  8715   0137A0                     u4011:
  8716   0137A0  EFC1  F09B         	goto	l4709
  8717   0137A4                     u4010:
  8718   0137A4                     l4713:
  8719   0137A4  90D8               	bcf	status,0,c
  8720   0137A6  3613               	rlcf	___aodiv@quotient^(0+1280),f,c
  8721   0137A8  3614               	rlcf	(___aodiv@quotient+1)^(0+1280),f,c
  8722   0137AA  3615               	rlcf	(___aodiv@quotient+2)^(0+1280),f,c
  8723   0137AC  3616               	rlcf	(___aodiv@quotient+3)^(0+1280),f,c
  8724   0137AE  3617               	rlcf	(___aodiv@quotient+4)^(0+1280),f,c
  8725   0137B0  3618               	rlcf	(___aodiv@quotient+5)^(0+1280),f,c
  8726   0137B2  3619               	rlcf	(___aodiv@quotient+6)^(0+1280),f,c
  8727   0137B4  361A               	rlcf	(___aodiv@quotient+7)^(0+1280),f,c
  8728   0137B6  5009               	movf	___aodiv@divisor^(0+1280),w,c
  8729   0137B8  5C01               	subwf	___aodiv@dividend^(0+1280),w,c
  8730   0137BA  500A               	movf	(___aodiv@divisor+1)^(0+1280),w,c
  8731   0137BC  5802               	subwfb	(___aodiv@dividend+1)^(0+1280),w,c
  8732   0137BE  500B               	movf	(___aodiv@divisor+2)^(0+1280),w,c
  8733   0137C0  5803               	subwfb	(___aodiv@dividend+2)^(0+1280),w,c
  8734   0137C2  500C               	movf	(___aodiv@divisor+3)^(0+1280),w,c
  8735   0137C4  5804               	subwfb	(___aodiv@dividend+3)^(0+1280),w,c
  8736   0137C6  500D               	movf	(___aodiv@divisor+4)^(0+1280),w,c
  8737   0137C8  5805               	subwfb	(___aodiv@dividend+4)^(0+1280),w,c
  8738   0137CA  500E               	movf	(___aodiv@divisor+5)^(0+1280),w,c
  8739   0137CC  5806               	subwfb	(___aodiv@dividend+5)^(0+1280),w,c
  8740   0137CE  500F               	movf	(___aodiv@divisor+6)^(0+1280),w,c
  8741   0137D0  5807               	subwfb	(___aodiv@dividend+6)^(0+1280),w,c
  8742   0137D2  5010               	movf	(___aodiv@divisor+7)^(0+1280),w,c
  8743   0137D4  5808               	subwfb	(___aodiv@dividend+7)^(0+1280),w,c
  8744   0137D6  A0D8               	btfss	status,0,c
  8745   0137D8  EFF0  F09B         	goto	u4021
  8746   0137DC  EFF2  F09B         	goto	u4020
  8747   0137E0                     u4021:
  8748   0137E0  EF03  F09C         	goto	l4721
  8749   0137E4                     u4020:
  8750   0137E4  5009               	movf	___aodiv@divisor^(0+1280),w,c
  8751   0137E6  5E01               	subwf	___aodiv@dividend^(0+1280),f,c
  8752   0137E8  500A               	movf	(___aodiv@divisor+1)^(0+1280),w,c
  8753   0137EA  5A02               	subwfb	(___aodiv@dividend+1)^(0+1280),f,c
  8754   0137EC  500B               	movf	(___aodiv@divisor+2)^(0+1280),w,c
  8755   0137EE  5A03               	subwfb	(___aodiv@dividend+2)^(0+1280),f,c
  8756   0137F0  500C               	movf	(___aodiv@divisor+3)^(0+1280),w,c
  8757   0137F2  5A04               	subwfb	(___aodiv@dividend+3)^(0+1280),f,c
  8758   0137F4  500D               	movf	(___aodiv@divisor+4)^(0+1280),w,c
  8759   0137F6  5A05               	subwfb	(___aodiv@dividend+4)^(0+1280),f,c
  8760   0137F8  500E               	movf	(___aodiv@divisor+5)^(0+1280),w,c
  8761   0137FA  5A06               	subwfb	(___aodiv@dividend+5)^(0+1280),f,c
  8762   0137FC  500F               	movf	(___aodiv@divisor+6)^(0+1280),w,c
  8763   0137FE  5A07               	subwfb	(___aodiv@dividend+6)^(0+1280),f,c
  8764   013800  5010               	movf	(___aodiv@divisor+7)^(0+1280),w,c
  8765   013802  5A08               	subwfb	(___aodiv@dividend+7)^(0+1280),f,c
  8766   013804  8013               	bsf	___aodiv@quotient^(0+1280),0,c
  8767   013806                     l4721:
  8768   013806  90D8               	bcf	status,0,c
  8769   013808  3210               	rrcf	(___aodiv@divisor+7)^(0+1280),f,c
  8770   01380A  320F               	rrcf	(___aodiv@divisor+6)^(0+1280),f,c
  8771   01380C  320E               	rrcf	(___aodiv@divisor+5)^(0+1280),f,c
  8772   01380E  320D               	rrcf	(___aodiv@divisor+4)^(0+1280),f,c
  8773   013810  320C               	rrcf	(___aodiv@divisor+3)^(0+1280),f,c
  8774   013812  320B               	rrcf	(___aodiv@divisor+2)^(0+1280),f,c
  8775   013814  320A               	rrcf	(___aodiv@divisor+1)^(0+1280),f,c
  8776   013816  3209               	rrcf	___aodiv@divisor^(0+1280),f,c
  8777   013818  2E11               	decfsz	___aodiv@counter^(0+1280),f,c
  8778   01381A  EFD2  F09B         	goto	l4713
  8779   01381E                     l4725:
  8780   01381E  5012               	movf	___aodiv@sign^(0+1280),w,c
  8781   013820  B4D8               	btfsc	status,2,c
  8782   013822  EF15  F09C         	goto	u4031
  8783   013826  EF17  F09C         	goto	u4030
  8784   01382A                     u4031:
  8785   01382A  EF27  F09C         	goto	l4729
  8786   01382E                     u4030:
  8787   01382E  1E1A               	comf	(___aodiv@quotient+7)^(0+1280),f,c
  8788   013830  1E19               	comf	(___aodiv@quotient+6)^(0+1280),f,c
  8789   013832  1E18               	comf	(___aodiv@quotient+5)^(0+1280),f,c
  8790   013834  1E17               	comf	(___aodiv@quotient+4)^(0+1280),f,c
  8791   013836  1E16               	comf	(___aodiv@quotient+3)^(0+1280),f,c
  8792   013838  1E15               	comf	(___aodiv@quotient+2)^(0+1280),f,c
  8793   01383A  1E14               	comf	(___aodiv@quotient+1)^(0+1280),f,c
  8794   01383C  6C13               	negf	___aodiv@quotient^(0+1280),c
  8795   01383E  0E00               	movlw	0
  8796   013840  2214               	addwfc	(___aodiv@quotient+1)^(0+1280),f,c
  8797   013842  2215               	addwfc	(___aodiv@quotient+2)^(0+1280),f,c
  8798   013844  2216               	addwfc	(___aodiv@quotient+3)^(0+1280),f,c
  8799   013846  2217               	addwfc	(___aodiv@quotient+4)^(0+1280),f,c
  8800   013848  2218               	addwfc	(___aodiv@quotient+5)^(0+1280),f,c
  8801   01384A  2219               	addwfc	(___aodiv@quotient+6)^(0+1280),f,c
  8802   01384C  221A               	addwfc	(___aodiv@quotient+7)^(0+1280),f,c
  8803   01384E                     l4729:
  8804   01384E  C513  F501         	movff	___aodiv@quotient,?___aodiv
  8805   013852  C514  F502         	movff	___aodiv@quotient+1,?___aodiv+1
  8806   013856  C515  F503         	movff	___aodiv@quotient+2,?___aodiv+2
  8807   01385A  C516  F504         	movff	___aodiv@quotient+3,?___aodiv+3
  8808   01385E  C517  F505         	movff	___aodiv@quotient+4,?___aodiv+4
  8809   013862  C518  F506         	movff	___aodiv@quotient+5,?___aodiv+5
  8810   013866  C519  F507         	movff	___aodiv@quotient+6,?___aodiv+6
  8811   01386A  C51A  F508         	movff	___aodiv@quotient+7,?___aodiv+7
  8812   01386E  0012               	return		;funcret
  8813   013870                     __end_of___aodiv:
  8814                           	callstack 0
  8815                           
  8816 ;; *************** function _atoi *****************
  8817 ;; Defined at:
  8818 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\atoi.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;  s               2    6[COMRAM] PTR const unsigned char 
  8821 ;;		 -> STR_17(9), STR_15(8), 
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;  n               2   13[COMRAM] int 
  8824 ;;  neg             2   11[COMRAM] int 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  2    6[COMRAM] int 
  8827 ;; Registers used:
  8828 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  8834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8835 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8836 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8837 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8838 ;;Total ram usage:        9 bytes
  8839 ;; Hardware stack levels used: 1
  8840 ;; Hardware stack levels required when called: 1
  8841 ;; This function calls:
  8842 ;;		___wmul
  8843 ;;		_isdigit
  8844 ;;		_isspace
  8845 ;; This function is called by:
  8846 ;;		_vfpfcnvrt
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text32
  8851   0139D4                     __ptext32:
  8852                           	callstack 0
  8853   0139D4                     _atoi:
  8854                           	callstack 121
  8855   0139D4  0E00               	movlw	0
  8856   0139D6  6E0F               	movwf	(atoi@n+1)^(0+1280),c
  8857   0139D8  0E00               	movlw	0
  8858   0139DA  6E0E               	movwf	atoi@n^(0+1280),c
  8859   0139DC  0E00               	movlw	0
  8860   0139DE  6E0D               	movwf	(atoi@neg+1)^(0+1280),c
  8861   0139E0  0E00               	movlw	0
  8862   0139E2  6E0C               	movwf	atoi@neg^(0+1280),c
  8863   0139E4  EFF6  F09C         	goto	l5543
  8864   0139E8                     l5539:
  8865   0139E8  4A07               	infsnz	atoi@s^(0+1280),f,c
  8866   0139EA  2A08               	incf	(atoi@s+1)^(0+1280),f,c
  8867   0139EC                     l5543:
  8868   0139EC  C507  F4F6         	movff	atoi@s,tblptrl
  8869   0139F0  C508  F4F7         	movff	atoi@s+1,tblptrh
  8870   0139F4                     	if	0	;tblptru may be non-zero
  8871   0139F4                     	endif
  8872   0139F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8873   0139F4  0E00               	movlw	low (__mediumconst shr (0+16))
  8874   0139F6  6EF8               	movwf	tblptru,c
  8875   0139F8                     	endif
  8876   0139F8  0008               	tblrd		*
  8877   0139FA  50F5               	movf	tablat,w,c
  8878   0139FC  0A20               	xorlw	32
  8879   0139FE  B4D8               	btfsc	status,2,c
  8880   013A00  EF04  F09D         	goto	u5451
  8881   013A04  EF06  F09D         	goto	u5450
  8882   013A08                     u5451:
  8883   013A08  EFF4  F09C         	goto	l5539
  8884   013A0C                     u5450:
  8885   013A0C  C507  F4F6         	movff	atoi@s,tblptrl
  8886   013A10  C508  F4F7         	movff	atoi@s+1,tblptrh
  8887   013A14                     	if	0	;tblptru may be non-zero
  8888   013A14                     	endif
  8889   013A14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8890   013A14  0E00               	movlw	low (__mediumconst shr (0+16))
  8891   013A16  6EF8               	movwf	tblptru,c
  8892   013A18                     	endif
  8893   013A18  0008               	tblrd		*
  8894   013A1A  C4F5 F509          	movff	tablat,??_atoi
  8895   013A1E  0EF7               	movlw	247
  8896   013A20  2409               	addwf	??_atoi^(0+1280),w,c
  8897   013A22  6E0A               	movwf	(??_atoi+1)^(0+1280),c
  8898   013A24  6A0B               	clrf	(??_atoi+2)^(0+1280),c
  8899   013A26  0EFF               	movlw	255
  8900   013A28  220B               	addwfc	(??_atoi+2)^(0+1280),f,c
  8901   013A2A  500B               	movf	(??_atoi+2)^(0+1280),w,c
  8902   013A2C  E109               	bnz	u5460
  8903   013A2E  0E05               	movlw	5
  8904   013A30  5C0A               	subwf	(??_atoi+1)^(0+1280),w,c
  8905   013A32  A0D8               	btfss	status,0,c
  8906   013A34  EF1E  F09D         	goto	u5461
  8907   013A38  EF20  F09D         	goto	u5460
  8908   013A3C                     u5461:
  8909   013A3C  EFF4  F09C         	goto	l5539
  8910   013A40                     u5460:
  8911   013A40  EF2A  F09D         	goto	l5551
  8912   013A44                     l5547:
  8913   013A44  0E00               	movlw	0
  8914   013A46  6E0D               	movwf	(atoi@neg+1)^(0+1280),c
  8915   013A48  0E01               	movlw	1
  8916   013A4A  6E0C               	movwf	atoi@neg^(0+1280),c
  8917   013A4C                     l5549:
  8918   013A4C  4A07               	infsnz	atoi@s^(0+1280),f,c
  8919   013A4E  2A08               	incf	(atoi@s+1)^(0+1280),f,c
  8920   013A50  EF63  F09D         	goto	l5559
  8921   013A54                     l5551:
  8922   013A54  C507  F4F6         	movff	atoi@s,tblptrl
  8923   013A58  C508  F4F7         	movff	atoi@s+1,tblptrh
  8924   013A5C                     	if	0	;tblptru may be non-zero
  8925   013A5C                     	endif
  8926   013A5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8927   013A5C  0E00               	movlw	low (__mediumconst shr (0+16))
  8928   013A5E  6EF8               	movwf	tblptru,c
  8929   013A60                     	endif
  8930   013A60  0008               	tblrd		*
  8931   013A62  50F5               	movf	tablat,w,c
  8932   013A64  6E09               	movwf	??_atoi^(0+1280),c
  8933   013A66  6A0A               	clrf	(??_atoi+1)^(0+1280),c
  8934                           
  8935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8936                           ; Switch size 1, requested type "simple"
  8937                           ; Number of cases is 1, Range of values is 0 to 0
  8938                           ; switch strategies available:
  8939                           ; Name         Instructions Cycles
  8940                           ; simple_byte            4     3 (average)
  8941                           ;	Chosen strategy is simple_byte
  8942   013A68  500A               	movf	(??_atoi+1)^(0+1280),w,c
  8943   013A6A  0A00               	xorlw	0	; case 0
  8944   013A6C  B4D8               	btfsc	status,2,c
  8945   013A6E  EF3B  F09D         	goto	l7507
  8946   013A72  EF63  F09D         	goto	l5559
  8947   013A76                     l7507:
  8948                           
  8949                           ; Switch size 1, requested type "simple"
  8950                           ; Number of cases is 2, Range of values is 43 to 45
  8951                           ; switch strategies available:
  8952                           ; Name         Instructions Cycles
  8953                           ; simple_byte            7     4 (average)
  8954                           ;	Chosen strategy is simple_byte
  8955   013A76  5009               	movf	??_atoi^(0+1280),w,c
  8956   013A78  0A2B               	xorlw	43	; case 43
  8957   013A7A  B4D8               	btfsc	status,2,c
  8958   013A7C  EF26  F09D         	goto	l5549
  8959   013A80  0A06               	xorlw	6	; case 45
  8960   013A82  B4D8               	btfsc	status,2,c
  8961   013A84  EF22  F09D         	goto	l5547
  8962   013A88  EF63  F09D         	goto	l5559
  8963   013A8C                     l5553:
  8964   013A8C  C50E  F501         	movff	atoi@n,___wmul@multiplier
  8965   013A90  C50F  F502         	movff	atoi@n+1,___wmul@multiplier+1
  8966   013A94  0E00               	movlw	0
  8967   013A96  6E04               	movwf	(___wmul@multiplicand+1)^(0+1280),c
  8968   013A98  0E0A               	movlw	10
  8969   013A9A  6E03               	movwf	___wmul@multiplicand^(0+1280),c
  8970   013A9C  EC16  F0A5         	call	___wmul	;wreg free
  8971   013AA0  C507  F4F6         	movff	atoi@s,tblptrl
  8972   013AA4  C508  F4F7         	movff	atoi@s+1,tblptrh
  8973   013AA8                     	if	0	;tblptru may be non-zero
  8974   013AA8                     	endif
  8975   013AA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8976   013AA8  0E00               	movlw	low (__mediumconst shr (0+16))
  8977   013AAA  6EF8               	movwf	tblptru,c
  8978   013AAC                     	endif
  8979   013AAC  0008               	tblrd		*
  8980   013AAE  50F5               	movf	tablat,w,c
  8981   013AB0  5E01               	subwf	?___wmul^(0+1280),f,c
  8982   013AB2  0E00               	movlw	0
  8983   013AB4  5A02               	subwfb	(?___wmul+1)^(0+1280),f,c
  8984   013AB6  0E30               	movlw	48
  8985   013AB8  2401               	addwf	?___wmul^(0+1280),w,c
  8986   013ABA  6E0E               	movwf	atoi@n^(0+1280),c
  8987   013ABC  0E00               	movlw	0
  8988   013ABE  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
  8989   013AC0  6E0F               	movwf	(atoi@n+1)^(0+1280),c
  8990   013AC2  EF26  F09D         	goto	l5549
  8991   013AC6                     l5559:
  8992   013AC6  C507  F4F6         	movff	atoi@s,tblptrl
  8993   013ACA  C508  F4F7         	movff	atoi@s+1,tblptrh
  8994   013ACE                     	if	0	;tblptru may be non-zero
  8995   013ACE                     	endif
  8996   013ACE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8997   013ACE  0E00               	movlw	low (__mediumconst shr (0+16))
  8998   013AD0  6EF8               	movwf	tblptru,c
  8999   013AD2                     	endif
  9000   013AD2  0008               	tblrd		*
  9001   013AD4  C4F5 F509          	movff	tablat,??_atoi
  9002   013AD8  0ED0               	movlw	208
  9003   013ADA  2409               	addwf	??_atoi^(0+1280),w,c
  9004   013ADC  6E0A               	movwf	(??_atoi+1)^(0+1280),c
  9005   013ADE  6A0B               	clrf	(??_atoi+2)^(0+1280),c
  9006   013AE0  0EFF               	movlw	255
  9007   013AE2  220B               	addwfc	(??_atoi+2)^(0+1280),f,c
  9008   013AE4  500B               	movf	(??_atoi+2)^(0+1280),w,c
  9009   013AE6  E109               	bnz	u5470
  9010   013AE8  0E0A               	movlw	10
  9011   013AEA  5C0A               	subwf	(??_atoi+1)^(0+1280),w,c
  9012   013AEC  A0D8               	btfss	status,0,c
  9013   013AEE  EF7B  F09D         	goto	u5471
  9014   013AF2  EF7D  F09D         	goto	u5470
  9015   013AF6                     u5471:
  9016   013AF6  EF46  F09D         	goto	l5553
  9017   013AFA                     u5470:
  9018   013AFA  500C               	movf	atoi@neg^(0+1280),w,c
  9019   013AFC  100D               	iorwf	(atoi@neg+1)^(0+1280),w,c
  9020   013AFE  A4D8               	btfss	status,2,c
  9021   013B00  EF84  F09D         	goto	u5481
  9022   013B04  EF86  F09D         	goto	u5480
  9023   013B08                     u5481:
  9024   013B08  EF94  F09D         	goto	l1455
  9025   013B0C                     u5480:
  9026   013B0C  C50E  F509         	movff	atoi@n,??_atoi
  9027   013B10  C50F  F50A         	movff	atoi@n+1,??_atoi+1
  9028   013B14  1E09               	comf	??_atoi^(0+1280),f,c
  9029   013B16  1E0A               	comf	(??_atoi+1)^(0+1280),f,c
  9030   013B18  4A09               	infsnz	??_atoi^(0+1280),f,c
  9031   013B1A  2A0A               	incf	(??_atoi+1)^(0+1280),f,c
  9032   013B1C  C509  F507         	movff	??_atoi,?_atoi
  9033   013B20  C50A  F508         	movff	??_atoi+1,?_atoi+1
  9034   013B24  EF98  F09D         	goto	l1458
  9035   013B28                     l1455:
  9036   013B28  C50E  F507         	movff	atoi@n,?_atoi
  9037   013B2C  C50F  F508         	movff	atoi@n+1,?_atoi+1
  9038   013B30                     l1458:
  9039   013B30  0012               	return		;funcret
  9040   013B32                     __end_of_atoi:
  9041                           	callstack 0
  9042                           
  9043 ;; *************** function _isspace *****************
  9044 ;; Defined at:
  9045 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isspace.c"
  9046 ;; Parameters:    Size  Location     Type
  9047 ;;  c               2    0[COMRAM] int 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;		None
  9050 ;; Return value:  Size  Location     Type
  9051 ;;                  2    0[COMRAM] int 
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9062 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9063 ;;Total ram usage:        5 bytes
  9064 ;; Hardware stack levels used: 1
  9065 ;; This function calls:
  9066 ;;		Nothing
  9067 ;; This function is called by:
  9068 ;;		_atoi
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           	psect	text33
  9073   0147DE                     __ptext33:
  9074                           	callstack 0
  9075   0147DE                     _isspace:
  9076                           	callstack 121
  9077   0147DE  0E01               	movlw	1
  9078   0147E0  6E05               	movwf	_isspace$1590^(0+1280),c
  9079   0147E2  0E20               	movlw	32
  9080   0147E4  1801               	xorwf	isspace@c^(0+1280),w,c
  9081   0147E6  1002               	iorwf	(isspace@c+1)^(0+1280),w,c
  9082   0147E8  B4D8               	btfsc	status,2,c
  9083   0147EA  EFF9  F0A3         	goto	u4951
  9084   0147EE  EFFB  F0A3         	goto	u4950
  9085   0147F2                     u4951:
  9086   0147F2  EF0E  F0A4         	goto	l5237
  9087   0147F6                     u4950:
  9088   0147F6  0EF7               	movlw	247
  9089   0147F8  2401               	addwf	isspace@c^(0+1280),w,c
  9090   0147FA  6E03               	movwf	??_isspace^(0+1280),c
  9091   0147FC  0EFF               	movlw	255
  9092   0147FE  2002               	addwfc	(isspace@c+1)^(0+1280),w,c
  9093   014800  6E04               	movwf	(??_isspace+1)^(0+1280),c
  9094   014802  5004               	movf	(??_isspace+1)^(0+1280),w,c
  9095   014804  E109               	bnz	u4960
  9096   014806  0E05               	movlw	5
  9097   014808  5C03               	subwf	??_isspace^(0+1280),w,c
  9098   01480A  A0D8               	btfss	status,0,c
  9099   01480C  EF0A  F0A4         	goto	u4961
  9100   014810  EF0C  F0A4         	goto	u4960
  9101   014814                     u4961:
  9102   014814  EF0E  F0A4         	goto	l5237
  9103   014818                     u4960:
  9104   014818  0E00               	movlw	0
  9105   01481A  6E05               	movwf	_isspace$1590^(0+1280),c
  9106   01481C                     l5237:
  9107   01481C  C505  F501         	movff	_isspace$1590,?_isspace
  9108   014820  6A02               	clrf	(?_isspace+1)^(0+1280),c
  9109   014822  0012               	return		;funcret
  9110   014824                     __end_of_isspace:
  9111                           	callstack 0
  9112                           
  9113 ;; *************** function _isdigit *****************
  9114 ;; Defined at:
  9115 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\isdigit.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;  c               2    0[COMRAM] int 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;		None
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  2    0[COMRAM] int 
  9122 ;; Registers used:
  9123 ;;		wreg, status,2, status,0
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9133 ;;Total ram usage:        4 bytes
  9134 ;; Hardware stack levels used: 1
  9135 ;; This function calls:
  9136 ;;		Nothing
  9137 ;; This function is called by:
  9138 ;;		_vfpfcnvrt
  9139 ;;		_atoi
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           	psect	text34
  9144   0149DA                     __ptext34:
  9145                           	callstack 0
  9146   0149DA                     _isdigit:
  9147                           	callstack 122
  9148   0149DA  0ED0               	movlw	208
  9149   0149DC  2401               	addwf	isdigit@c^(0+1280),w,c
  9150   0149DE  6E03               	movwf	??_isdigit^(0+1280),c
  9151   0149E0  0EFF               	movlw	255
  9152   0149E2  2002               	addwfc	(isdigit@c+1)^(0+1280),w,c
  9153   0149E4  6E04               	movwf	(??_isdigit+1)^(0+1280),c
  9154   0149E6  5004               	movf	(??_isdigit+1)^(0+1280),w,c
  9155   0149E8  E10A               	bnz	u4930
  9156   0149EA  0E0A               	movlw	10
  9157   0149EC  5C03               	subwf	??_isdigit^(0+1280),w,c
  9158   0149EE  A0D8               	btfss	status,0,c
  9159   0149F0  EFFC  F0A4         	goto	u4931
  9160   0149F4  EFFF  F0A4         	goto	u4930
  9161   0149F8                     u4931:
  9162   0149F8  0E01               	movlw	1
  9163   0149FA  EF00  F0A5         	goto	u4940
  9164   0149FE                     u4930:
  9165   0149FE  0E00               	movlw	0
  9166   014A00                     u4940:
  9167   014A00  6E01               	movwf	?_isdigit^(0+1280),c
  9168   014A02  6A02               	clrf	(?_isdigit+1)^(0+1280),c
  9169   014A04  0012               	return		;funcret
  9170   014A06                     __end_of_isdigit:
  9171                           	callstack 0
  9172                           
  9173 ;; *************** function ___wmul *****************
  9174 ;; Defined at:
  9175 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;  multiplier      2    0[COMRAM] unsigned int 
  9178 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9179 ;; Auto vars:     Size  Location     Type
  9180 ;;  product         2    4[COMRAM] unsigned int 
  9181 ;; Return value:  Size  Location     Type
  9182 ;;                  2    0[COMRAM] unsigned int 
  9183 ;; Registers used:
  9184 ;;		wreg, status,2, status,0, prodl, prodh
  9185 ;; Tracked objects:
  9186 ;;		On entry : 0/0
  9187 ;;		On exit  : 0/0
  9188 ;;		Unchanged: 0/0
  9189 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9190 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9193 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9194 ;;Total ram usage:        6 bytes
  9195 ;; Hardware stack levels used: 1
  9196 ;; This function calls:
  9197 ;;		Nothing
  9198 ;; This function is called by:
  9199 ;;		_atoi
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text35
  9204   014A2C                     __ptext35:
  9205                           	callstack 0
  9206   014A2C                     ___wmul:
  9207                           	callstack 121
  9208   014A2C  5001               	movf	___wmul@multiplier^(0+1280),w,c
  9209   014A2E  0203               	mulwf	___wmul@multiplicand^(0+1280),c
  9210   014A30  C4F3 F505          	movff	prodl,___wmul@product
  9211   014A34  C4F4 F506          	movff	prodh,___wmul@product+1
  9212   014A38  5001               	movf	___wmul@multiplier^(0+1280),w,c
  9213   014A3A  0204               	mulwf	(___wmul@multiplicand+1)^(0+1280),c
  9214   014A3C  50F3               	movf	243,w,c
  9215   014A3E  2606               	addwf	(___wmul@product+1)^(0+1280),f,c
  9216   014A40  5002               	movf	(___wmul@multiplier+1)^(0+1280),w,c
  9217   014A42  0203               	mulwf	___wmul@multiplicand^(0+1280),c
  9218   014A44  50F3               	movf	243,w,c
  9219   014A46  2606               	addwf	(___wmul@product+1)^(0+1280),f,c
  9220   014A48  C505  F501         	movff	___wmul@product,?___wmul
  9221   014A4C  C506  F502         	movff	___wmul@product+1,?___wmul+1
  9222   014A50  0012               	return		;funcret
  9223   014A52                     __end_of___wmul:
  9224                           	callstack 0
  9225                           
  9226 ;; *************** function _MenuPrincipalCon *****************
  9227 ;; Defined at:
  9228 ;;		line 282 in file "main.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;		None
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;		None
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      void 
  9235 ;; Registers used:
  9236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9244 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9246 ;;Total ram usage:        2 bytes
  9247 ;; Hardware stack levels used: 1
  9248 ;; Hardware stack levels required when called: 5
  9249 ;; This function calls:
  9250 ;;		_lcd_char
  9251 ;;		_lcd_clear
  9252 ;;		_lcd_out
  9253 ;; This function is called by:
  9254 ;;		_main
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           	psect	text36
  9259   012BCC                     __ptext36:
  9260                           	callstack 0
  9261   012BCC                     _MenuPrincipalCon:
  9262                           	callstack 121
  9263   012BCC                     
  9264                           ;main.c: 283:     lcd_out(1,1," MENU PRINCIPAL ");
  9265   012BCC  0E01               	movlw	1
  9266   012BCE  6E0C               	movwf	lcd_out@col^(0+1280),c
  9267   012BD0  0E5D               	movlw	low STR_1
  9268   012BD2  6E0D               	movwf	lcd_out@str^(0+1280),c
  9269   012BD4  0EFF               	movlw	high STR_1
  9270   012BD6  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
  9271   012BD8  0E01               	movlw	1
  9272   012BDA  EC3E  F0A2         	call	_lcd_out
  9273                           
  9274                           ;main.c: 284:     lcd_out(2,1,"<- 3.MT  4.S    ");
  9275   012BDE  0E01               	movlw	1
  9276   012BE0  6E0C               	movwf	lcd_out@col^(0+1280),c
  9277   012BE2  0E19               	movlw	low STR_4
  9278   012BE4  6E0D               	movwf	lcd_out@str^(0+1280),c
  9279   012BE6  0EFF               	movlw	high STR_4
  9280   012BE8  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
  9281   012BEA  0E02               	movlw	2
  9282   012BEC  EC3E  F0A2         	call	_lcd_out
  9283   012BF0                     
  9284                           ;main.c: 286:     if(PORTDbits.RD0 == 0){
  9285   012BF0  B0D1               	btfsc	209,0,c	;volatile
  9286   012BF2  EFFD  F095         	goto	u5911
  9287   012BF6  EFFF  F095         	goto	u5910
  9288   012BFA                     u5911:
  9289   012BFA  EF1B  F096         	goto	l6029
  9290   012BFE                     u5910:
  9291   012BFE                     l182:
  9292   012BFE  A0D1               	btfss	209,0,c	;volatile
  9293   012C00  EF04  F096         	goto	u5921
  9294   012C04  EF06  F096         	goto	u5920
  9295   012C08                     u5921:
  9296   012C08  EFFF  F095         	goto	l182
  9297   012C0C                     u5920:
  9298   012C0C                     
  9299                           ;main.c: 288:             opSel++;
  9300   012C0C  0105               	movlb	5	; () banked
  9301   012C0E  4BA7               	infsnz	_opSel& (0+255),f,b
  9302   012C10  2BA8               	incf	(_opSel+1)& (0+255),f,b
  9303   012C12                     
  9304                           ; BSR set to: 5
  9305                           ;main.c: 289:             if(opSel>3){
  9306   012C12  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
  9307   012C14  EF15  F096         	goto	u5931
  9308   012C18  51A8               	movf	(_opSel+1)& (0+255),w,b
  9309   012C1A  E109               	bnz	u5930
  9310   012C1C  0E04               	movlw	4
  9311   012C1E  5DA7               	subwf	_opSel& (0+255),w,b
  9312   012C20  A0D8               	btfss	status,0,c
  9313   012C22  EF15  F096         	goto	u5931
  9314   012C26  EF17  F096         	goto	u5930
  9315   012C2A                     u5931:
  9316   012C2A  EF1B  F096         	goto	l6029
  9317   012C2E                     u5930:
  9318   012C2E                     
  9319                           ; BSR set to: 5
  9320                           ;main.c: 290:                 opSel=1;
  9321   012C2E  0E00               	movlw	0
  9322   012C30  6FA8               	movwf	(_opSel+1)& (0+255),b
  9323   012C32  0E01               	movlw	1
  9324   012C34  6FA7               	movwf	_opSel& (0+255),b
  9325   012C36                     l6029:
  9326                           
  9327                           ;main.c: 294:     if(PORTDbits.RD1 == 0){
  9328   012C36  B2D1               	btfsc	209,1,c	;volatile
  9329   012C38  EF20  F096         	goto	u5941
  9330   012C3C  EF22  F096         	goto	u5940
  9331   012C40                     u5941:
  9332   012C40  EFF4  F096         	goto	l6083
  9333   012C44                     u5940:
  9334   012C44                     l187:
  9335   012C44  A2D1               	btfss	209,1,c	;volatile
  9336   012C46  EF27  F096         	goto	u5951
  9337   012C4A  EF29  F096         	goto	u5950
  9338   012C4E                     u5951:
  9339   012C4E  EF22  F096         	goto	l187
  9340   012C52                     u5950:
  9341   012C52                     
  9342                           ;main.c: 296:             opSel--;
  9343   012C52  0105               	movlb	5	; () banked
  9344   012C54  07A7               	decf	_opSel& (0+255),f,b
  9345   012C56  A0D8               	btfss	status,0,c
  9346   012C58  07A8               	decf	(_opSel+1)& (0+255),f,b
  9347   012C5A  EFF4  F096         	goto	l6083
  9348   012C5E                     l6035:
  9349                           
  9350                           ; BSR set to: 5
  9351                           ;main.c: 301:                 lcd_char(2,1,'<');
  9352   012C5E  0E01               	movlw	1
  9353   012C60  6E0C               	movwf	lcd_char@col^(0+1280),c
  9354   012C62  0E3C               	movlw	60
  9355   012C64  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9356   012C66  0E02               	movlw	2
  9357   012C68  EC63  F0A5         	call	_lcd_char
  9358                           
  9359                           ;main.c: 302:                 lcd_char(2,2,'-');
  9360   012C6C  0E02               	movlw	2
  9361   012C6E  6E0C               	movwf	lcd_char@col^(0+1280),c
  9362   012C70  0E2D               	movlw	45
  9363   012C72  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9364   012C74  0E02               	movlw	2
  9365   012C76  EC63  F0A5         	call	_lcd_char
  9366   012C7A                     
  9367                           ;main.c: 303:                 _delay((unsigned long)((100)*(64000000UL/4000.0)));
  9368   012C7A  0E09               	movlw	9
  9369   012C7C  6E11               	movwf	(??_MenuPrincipalCon+1)^(0+1280),c
  9370   012C7E  0E1E               	movlw	30
  9371   012C80  6E10               	movwf	??_MenuPrincipalCon^(0+1280),c
  9372   012C82  0EE4               	movlw	228
  9373   012C84                     u7107:
  9374   012C84  2EE8               	decfsz	wreg,f,c
  9375   012C86  D7FE               	bra	u7107
  9376   012C88  2E10               	decfsz	??_MenuPrincipalCon^(0+1280),f,c
  9377   012C8A  D7FC               	bra	u7107
  9378   012C8C  2E11               	decfsz	(??_MenuPrincipalCon+1)^(0+1280),f,c
  9379   012C8E  D7FA               	bra	u7107
  9380   012C90  D000               	nop2	
  9381   012C92                     
  9382                           ;main.c: 304:                 lcd_char(2,1,' ');
  9383   012C92  0E01               	movlw	1
  9384   012C94  6E0C               	movwf	lcd_char@col^(0+1280),c
  9385   012C96  0E20               	movlw	32
  9386   012C98  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9387   012C9A  0E02               	movlw	2
  9388   012C9C  EC63  F0A5         	call	_lcd_char
  9389   012CA0                     
  9390                           ;main.c: 305:                 lcd_char(2,2,' ');
  9391   012CA0  0E02               	movlw	2
  9392   012CA2  6E0C               	movwf	lcd_char@col^(0+1280),c
  9393   012CA4  0E20               	movlw	32
  9394   012CA6  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9395   012CA8  0E02               	movlw	2
  9396   012CAA  EC63  F0A5         	call	_lcd_char
  9397   012CAE                     
  9398                           ;main.c: 306:                  _delay((unsigned long)((100)*(64000000UL/4000.0)));
  9399   012CAE  0E09               	movlw	9
  9400   012CB0  6E11               	movwf	(??_MenuPrincipalCon+1)^(0+1280),c
  9401   012CB2  0E1E               	movlw	30
  9402   012CB4  6E10               	movwf	??_MenuPrincipalCon^(0+1280),c
  9403   012CB6  0EE4               	movlw	228
  9404   012CB8                     u7117:
  9405   012CB8  2EE8               	decfsz	wreg,f,c
  9406   012CBA  D7FE               	bra	u7117
  9407   012CBC  2E10               	decfsz	??_MenuPrincipalCon^(0+1280),f,c
  9408   012CBE  D7FC               	bra	u7117
  9409   012CC0  2E11               	decfsz	(??_MenuPrincipalCon+1)^(0+1280),f,c
  9410   012CC2  D7FA               	bra	u7117
  9411   012CC4  D000               	nop2	
  9412                           
  9413                           ;main.c: 308:                 lcd_char(2,8,' ');
  9414   012CC6  0E08               	movlw	8
  9415   012CC8  6E0C               	movwf	lcd_char@col^(0+1280),c
  9416   012CCA  0E20               	movlw	32
  9417   012CCC  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9418   012CCE  0E02               	movlw	2
  9419   012CD0  EC63  F0A5         	call	_lcd_char
  9420                           
  9421                           ;main.c: 309:                 lcd_char(2,13,' ');
  9422   012CD4  0E0D               	movlw	13
  9423   012CD6  6E0C               	movwf	lcd_char@col^(0+1280),c
  9424   012CD8  0E20               	movlw	32
  9425   012CDA  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9426   012CDC  0E02               	movlw	2
  9427   012CDE  EC63  F0A5         	call	_lcd_char
  9428   012CE2                     
  9429                           ;main.c: 311:                     if(PORTDbits.RD0 == 0){
  9430   012CE2  B0D1               	btfsc	209,0,c	;volatile
  9431   012CE4  EF76  F096         	goto	u5961
  9432   012CE8  EF78  F096         	goto	u5960
  9433   012CEC                     u5961:
  9434   012CEC  EF82  F096         	goto	l6051
  9435   012CF0                     u5960:
  9436   012CF0                     l195:
  9437   012CF0  A0D1               	btfss	209,0,c	;volatile
  9438   012CF2  EF7D  F096         	goto	u5971
  9439   012CF6  EF7F  F096         	goto	u5970
  9440   012CFA                     u5971:
  9441   012CFA  EF78  F096         	goto	l195
  9442   012CFE                     u5970:
  9443   012CFE                     
  9444                           ;main.c: 313:                         opSel++;
  9445   012CFE  0105               	movlb	5	; () banked
  9446   012D00  4BA7               	infsnz	_opSel& (0+255),f,b
  9447   012D02  2BA8               	incf	(_opSel+1)& (0+255),f,b
  9448   012D04                     l6051:
  9449                           
  9450                           ;main.c: 315:                     if(PORTDbits.RD1 == 0){
  9451   012D04  B2D1               	btfsc	209,1,c	;volatile
  9452   012D06  EF87  F096         	goto	u5981
  9453   012D0A  EF89  F096         	goto	u5980
  9454   012D0E                     u5981:
  9455   012D0E  EFA5  F096         	goto	l6061
  9456   012D12                     u5980:
  9457   012D12                     l199:
  9458   012D12  A2D1               	btfss	209,1,c	;volatile
  9459   012D14  EF8E  F096         	goto	u5991
  9460   012D18  EF90  F096         	goto	u5990
  9461   012D1C                     u5991:
  9462   012D1C  EF89  F096         	goto	l199
  9463   012D20                     u5990:
  9464   012D20                     
  9465                           ;main.c: 317:                         opSel--;
  9466   012D20  0105               	movlb	5	; () banked
  9467   012D22  07A7               	decf	_opSel& (0+255),f,b
  9468   012D24  A0D8               	btfss	status,0,c
  9469   012D26  07A8               	decf	(_opSel+1)& (0+255),f,b
  9470   012D28                     
  9471                           ; BSR set to: 5
  9472                           ;main.c: 318:                         if(opSel<1){
  9473   012D28  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
  9474   012D2A  EFA1  F096         	goto	u6000
  9475   012D2E  51A8               	movf	(_opSel+1)& (0+255),w,b
  9476   012D30  E106               	bnz	u6001
  9477   012D32  05A7               	decf	_opSel& (0+255),w,b
  9478   012D34  B0D8               	btfsc	status,0,c
  9479   012D36  EF9F  F096         	goto	u6001
  9480   012D3A  EFA1  F096         	goto	u6000
  9481   012D3E                     u6001:
  9482   012D3E  EFA5  F096         	goto	l6061
  9483   012D42                     u6000:
  9484   012D42                     
  9485                           ; BSR set to: 5
  9486                           ;main.c: 319:                             opSel=3;}
  9487   012D42  0E00               	movlw	0
  9488   012D44  6FA8               	movwf	(_opSel+1)& (0+255),b
  9489   012D46  0E03               	movlw	3
  9490   012D48  6FA7               	movwf	_opSel& (0+255),b
  9491   012D4A                     l6061:
  9492                           
  9493                           ;main.c: 322:                     if(PORTBbits.RB4 == 0){
  9494   012D4A  B8CF               	btfsc	207,4,c	;volatile
  9495   012D4C  EFAA  F096         	goto	u6011
  9496   012D50  EFAC  F096         	goto	u6010
  9497   012D54                     u6011:
  9498   012D54  EFB3  F096         	goto	l6067
  9499   012D58                     u6010:
  9500   012D58                     
  9501                           ;main.c: 323:                         lcd_clear();
  9502   012D58  EC44  F0A5         	call	_lcd_clear	;wreg free
  9503   012D5C                     
  9504                           ;main.c: 324:                         menuOp = menu_principal;
  9505   012D5C  0E00               	movlw	0
  9506   012D5E  0105               	movlb	5	; () banked
  9507   012D60  6FE0               	movwf	(_menuOp+1)& (0+255),b
  9508   012D62  0E00               	movlw	0
  9509   012D64  6FDF               	movwf	_menuOp& (0+255),b
  9510   012D66                     l6067:
  9511                           
  9512                           ;main.c: 300:         case 1: while(opSel==1 && PORTBbits.RB4==1){
  9513   012D66  0105               	movlb	5	; () banked
  9514   012D68  05A7               	decf	_opSel& (0+255),w,b
  9515   012D6A  11A8               	iorwf	(_opSel+1)& (0+255),w,b
  9516   012D6C  A4D8               	btfss	status,2,c
  9517   012D6E  EFBB  F096         	goto	u6021
  9518   012D72  EFBD  F096         	goto	u6020
  9519   012D76                     u6021:
  9520   012D76  EF0E  F097         	goto	l207
  9521   012D7A                     u6020:
  9522   012D7A                     
  9523                           ; BSR set to: 5
  9524   012D7A  B8CF               	btfsc	207,4,c	;volatile
  9525   012D7C  EFC2  F096         	goto	u6031
  9526   012D80  EFC4  F096         	goto	u6030
  9527   012D84                     u6031:
  9528   012D84  EF2F  F096         	goto	l6035
  9529   012D88                     u6030:
  9530   012D88  EF0E  F097         	goto	l207
  9531   012D8C                     l6071:
  9532   012D8C  0E08               	movlw	8
  9533   012D8E  6E0C               	movwf	lcd_char@col^(0+1280),c
  9534   012D90  0E3C               	movlw	60
  9535   012D92  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9536   012D94  0E02               	movlw	2
  9537   012D96  EC63  F0A5         	call	_lcd_char
  9538                           
  9539                           ;main.c: 330:                 lcd_char(2,13,' ');
  9540   012D9A  0E0D               	movlw	13
  9541   012D9C  6E0C               	movwf	lcd_char@col^(0+1280),c
  9542   012D9E  0E20               	movlw	32
  9543   012DA0  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9544   012DA2  0E02               	movlw	2
  9545   012DA4  EC63  F0A5         	call	_lcd_char
  9546   012DA8                     
  9547                           ;main.c: 331:                 if(PORTBbits.RB4==0){
  9548   012DA8  B8CF               	btfsc	207,4,c	;volatile
  9549   012DAA  EFD9  F096         	goto	u6041
  9550   012DAE  EFDB  F096         	goto	u6040
  9551   012DB2                     u6041:
  9552   012DB2  EF0E  F097         	goto	l207
  9553   012DB6                     u6040:
  9554   012DB6                     
  9555                           ;main.c: 332:                     lcd_clear();
  9556   012DB6  EC44  F0A5         	call	_lcd_clear	;wreg free
  9557   012DBA                     
  9558                           ;main.c: 333:                     menuOp= menu_motor;
  9559   012DBA  0E00               	movlw	0
  9560   012DBC  0105               	movlb	5	; () banked
  9561   012DBE  6FE0               	movwf	(_menuOp+1)& (0+255),b
  9562   012DC0  0E05               	movlw	5
  9563   012DC2  6FDF               	movwf	_menuOp& (0+255),b
  9564   012DC4  EF0E  F097         	goto	l207
  9565   012DC8                     l6079:
  9566   012DC8  0E08               	movlw	8
  9567   012DCA  6E0C               	movwf	lcd_char@col^(0+1280),c
  9568   012DCC  0E20               	movlw	32
  9569   012DCE  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9570   012DD0  0E02               	movlw	2
  9571   012DD2  EC63  F0A5         	call	_lcd_char
  9572                           
  9573                           ;main.c: 338:                 lcd_char(2,13,'<');
  9574   012DD6  0E0D               	movlw	13
  9575   012DD8  6E0C               	movwf	lcd_char@col^(0+1280),c
  9576   012DDA  0E3C               	movlw	60
  9577   012DDC  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9578   012DDE  0E02               	movlw	2
  9579   012DE0  EC63  F0A5         	call	_lcd_char
  9580                           
  9581                           ;main.c: 339:                 break;
  9582   012DE4  EF0E  F097         	goto	l207
  9583   012DE8                     l6083:
  9584   012DE8  C5A7  F510         	movff	_opSel,??_MenuPrincipalCon
  9585   012DEC  C5A8  F511         	movff	_opSel+1,??_MenuPrincipalCon+1
  9586                           
  9587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9588                           ; Switch size 1, requested type "simple"
  9589                           ; Number of cases is 1, Range of values is 0 to 0
  9590                           ; switch strategies available:
  9591                           ; Name         Instructions Cycles
  9592                           ; simple_byte            4     3 (average)
  9593                           ;	Chosen strategy is simple_byte
  9594   012DF0  5011               	movf	(??_MenuPrincipalCon+1)^(0+1280),w,c
  9595   012DF2  0A00               	xorlw	0	; case 0
  9596   012DF4  B4D8               	btfsc	status,2,c
  9597   012DF6  EFFF  F096         	goto	l7509
  9598   012DFA  EF0E  F097         	goto	l207
  9599   012DFE                     l7509:
  9600                           
  9601                           ; Switch size 1, requested type "simple"
  9602                           ; Number of cases is 3, Range of values is 1 to 3
  9603                           ; switch strategies available:
  9604                           ; Name         Instructions Cycles
  9605                           ; simple_byte           10     6 (average)
  9606                           ;	Chosen strategy is simple_byte
  9607   012DFE  5010               	movf	??_MenuPrincipalCon^(0+1280),w,c
  9608   012E00  0A01               	xorlw	1	; case 1
  9609   012E02  B4D8               	btfsc	status,2,c
  9610   012E04  EFB3  F096         	goto	l6067
  9611   012E08  0A03               	xorlw	3	; case 2
  9612   012E0A  B4D8               	btfsc	status,2,c
  9613   012E0C  EFC6  F096         	goto	l6071
  9614   012E10  0A01               	xorlw	1	; case 3
  9615   012E12  B4D8               	btfsc	status,2,c
  9616   012E14  EFE4  F096         	goto	l6079
  9617   012E18  EF0E  F097         	goto	l207
  9618   012E1C                     l207:
  9619                           
  9620                           ;main.c: 342:     if(PORTBbits.RB4 == 0){
  9621   012E1C  B8CF               	btfsc	207,4,c	;volatile
  9622   012E1E  EF13  F097         	goto	u6051
  9623   012E22  EF15  F097         	goto	u6050
  9624   012E26                     u6051:
  9625   012E26  EF37  F097         	goto	l215
  9626   012E2A                     u6050:
  9627   012E2A                     
  9628                           ;main.c: 343:         lcd_clear();
  9629   012E2A  EC44  F0A5         	call	_lcd_clear	;wreg free
  9630                           
  9631                           ;main.c: 344:         switch(opSel){
  9632   012E2E  EF20  F097         	goto	l6089
  9633   012E32                     l6087:
  9634   012E32  0E00               	movlw	0
  9635   012E34  0105               	movlb	5	; () banked
  9636   012E36  6FE0               	movwf	(_menuOp+1)& (0+255),b
  9637   012E38  0E06               	movlw	6
  9638   012E3A  6FDF               	movwf	_menuOp& (0+255),b
  9639                           
  9640                           ;main.c: 346:         }
  9641   012E3C  EF32  F097         	goto	l6091
  9642   012E40                     l6089:
  9643   012E40  C5A7  F510         	movff	_opSel,??_MenuPrincipalCon
  9644   012E44  C5A8  F511         	movff	_opSel+1,??_MenuPrincipalCon+1
  9645                           
  9646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9647                           ; Switch size 1, requested type "simple"
  9648                           ; Number of cases is 1, Range of values is 0 to 0
  9649                           ; switch strategies available:
  9650                           ; Name         Instructions Cycles
  9651                           ; simple_byte            4     3 (average)
  9652                           ;	Chosen strategy is simple_byte
  9653   012E48  5011               	movf	(??_MenuPrincipalCon+1)^(0+1280),w,c
  9654   012E4A  0A00               	xorlw	0	; case 0
  9655   012E4C  B4D8               	btfsc	status,2,c
  9656   012E4E  EF2B  F097         	goto	l7511
  9657   012E52  EF32  F097         	goto	l6091
  9658   012E56                     l7511:
  9659                           
  9660                           ; Switch size 1, requested type "simple"
  9661                           ; Number of cases is 1, Range of values is 3 to 3
  9662                           ; switch strategies available:
  9663                           ; Name         Instructions Cycles
  9664                           ; simple_byte            4     3 (average)
  9665                           ;	Chosen strategy is simple_byte
  9666   012E56  5010               	movf	??_MenuPrincipalCon^(0+1280),w,c
  9667   012E58  0A03               	xorlw	3	; case 3
  9668   012E5A  B4D8               	btfsc	status,2,c
  9669   012E5C  EF19  F097         	goto	l6087
  9670   012E60  EF32  F097         	goto	l6091
  9671   012E64                     l6091:
  9672                           
  9673                           ;main.c: 347:         opSel = 1;
  9674   012E64  0E00               	movlw	0
  9675   012E66  0105               	movlb	5	; () banked
  9676   012E68  6FA8               	movwf	(_opSel+1)& (0+255),b
  9677   012E6A  0E01               	movlw	1
  9678   012E6C  6FA7               	movwf	_opSel& (0+255),b
  9679   012E6E                     l215:
  9680   012E6E  0012               	return		;funcret
  9681   012E70                     __end_of_MenuPrincipalCon:
  9682                           	callstack 0
  9683                           
  9684 ;; *************** function _MenuPrincipal *****************
  9685 ;; Defined at:
  9686 ;;		line 215 in file "main.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;		None
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;		None
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  1    wreg      void 
  9693 ;; Registers used:
  9694 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  9700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9702 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9703 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9704 ;;Total ram usage:        2 bytes
  9705 ;; Hardware stack levels used: 1
  9706 ;; Hardware stack levels required when called: 5
  9707 ;; This function calls:
  9708 ;;		_lcd_char
  9709 ;;		_lcd_clear
  9710 ;;		_lcd_out
  9711 ;; This function is called by:
  9712 ;;		_main
  9713 ;; This function uses a non-reentrant model
  9714 ;;
  9715                           
  9716                           	psect	text37
  9717   01267E                     __ptext37:
  9718                           	callstack 0
  9719   01267E                     _MenuPrincipal:
  9720                           	callstack 121
  9721   01267E                     
  9722                           ;main.c: 216:     lcd_out(1,1," MENU PRINCIPAL ");
  9723   01267E  0E01               	movlw	1
  9724   012680  6E0C               	movwf	lcd_out@col^(0+1280),c
  9725   012682  0E5D               	movlw	low STR_1
  9726   012684  6E0D               	movwf	lcd_out@str^(0+1280),c
  9727   012686  0EFF               	movlw	high STR_1
  9728   012688  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
  9729   01268A  0E01               	movlw	1
  9730   01268C  EC3E  F0A2         	call	_lcd_out
  9731                           
  9732                           ;main.c: 217:     lcd_out(2,1,"1.LEDS  2.C   ->");
  9733   012690  0E01               	movlw	1
  9734   012692  6E0C               	movwf	lcd_out@col^(0+1280),c
  9735   012694  0E90               	movlw	low STR_2
  9736   012696  6E0D               	movwf	lcd_out@str^(0+1280),c
  9737   012698  0EFF               	movlw	high STR_2
  9738   01269A  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
  9739   01269C  0E02               	movlw	2
  9740   01269E  EC3E  F0A2         	call	_lcd_out
  9741   0126A2                     
  9742                           ;main.c: 218:     PORTEbits.RE0 = 0;
  9743   0126A2  90D2               	bcf	210,0,c	;volatile
  9744   0126A4                     
  9745                           ;main.c: 219:     PORTCbits.RC1 = 0;
  9746   0126A4  92D0               	bcf	208,1,c	;volatile
  9747   0126A6                     
  9748                           ;main.c: 220:     LATA=0x00;
  9749   0126A6  0E00               	movlw	0
  9750   0126A8  6EBE               	movwf	190,c	;volatile
  9751   0126AA                     
  9752                           ;main.c: 222:     if(PORTDbits.RD0 == 0){
  9753   0126AA  B0D1               	btfsc	209,0,c	;volatile
  9754   0126AC  EF5A  F093         	goto	u5771
  9755   0126B0  EF5C  F093         	goto	u5770
  9756   0126B4                     u5771:
  9757   0126B4  EF66  F093         	goto	l5939
  9758   0126B8                     u5770:
  9759   0126B8                     l145:
  9760   0126B8  A0D1               	btfss	209,0,c	;volatile
  9761   0126BA  EF61  F093         	goto	u5781
  9762   0126BE  EF63  F093         	goto	u5780
  9763   0126C2                     u5781:
  9764   0126C2  EF5C  F093         	goto	l145
  9765   0126C6                     u5780:
  9766   0126C6                     
  9767                           ;main.c: 224:             opSel++;
  9768   0126C6  0105               	movlb	5	; () banked
  9769   0126C8  4BA7               	infsnz	_opSel& (0+255),f,b
  9770   0126CA  2BA8               	incf	(_opSel+1)& (0+255),f,b
  9771   0126CC                     l5939:
  9772                           
  9773                           ;main.c: 227:     if(PORTDbits.RD1 == 0){
  9774   0126CC  B2D1               	btfsc	209,1,c	;volatile
  9775   0126CE  EF6B  F093         	goto	u5791
  9776   0126D2  EF6D  F093         	goto	u5790
  9777   0126D6                     u5791:
  9778   0126D6  EF44  F094         	goto	l5991
  9779   0126DA                     u5790:
  9780   0126DA                     l149:
  9781   0126DA  A2D1               	btfss	209,1,c	;volatile
  9782   0126DC  EF72  F093         	goto	u5801
  9783   0126E0  EF74  F093         	goto	u5800
  9784   0126E4                     u5801:
  9785   0126E4  EF6D  F093         	goto	l149
  9786   0126E8                     u5800:
  9787   0126E8                     
  9788                           ;main.c: 229:             opSel--;
  9789   0126E8  0105               	movlb	5	; () banked
  9790   0126EA  07A7               	decf	_opSel& (0+255),f,b
  9791   0126EC  A0D8               	btfss	status,0,c
  9792   0126EE  07A8               	decf	(_opSel+1)& (0+255),f,b
  9793   0126F0                     
  9794                           ; BSR set to: 5
  9795                           ;main.c: 230:             if(opSel<1){
  9796   0126F0  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
  9797   0126F2  EF85  F093         	goto	u5810
  9798   0126F6  51A8               	movf	(_opSel+1)& (0+255),w,b
  9799   0126F8  E106               	bnz	u5811
  9800   0126FA  05A7               	decf	_opSel& (0+255),w,b
  9801   0126FC  B0D8               	btfsc	status,0,c
  9802   0126FE  EF83  F093         	goto	u5811
  9803   012702  EF85  F093         	goto	u5810
  9804   012706                     u5811:
  9805   012706  EF44  F094         	goto	l5991
  9806   01270A                     u5810:
  9807   01270A                     
  9808                           ; BSR set to: 5
  9809                           ;main.c: 231:                 opSel=3;
  9810   01270A  0E00               	movlw	0
  9811   01270C  6FA8               	movwf	(_opSel+1)& (0+255),b
  9812   01270E  0E03               	movlw	3
  9813   012710  6FA7               	movwf	_opSel& (0+255),b
  9814   012712  EF44  F094         	goto	l5991
  9815   012716                     l5949:
  9816   012716  0E07               	movlw	7
  9817   012718  6E0C               	movwf	lcd_char@col^(0+1280),c
  9818   01271A  0E3C               	movlw	60
  9819   01271C  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9820   01271E  0E02               	movlw	2
  9821   012720  EC63  F0A5         	call	_lcd_char
  9822                           
  9823                           ;main.c: 237:                 lcd_char(2,12,' ');
  9824   012724  0E0C               	movlw	12
  9825   012726  6E0C               	movwf	lcd_char@col^(0+1280),c
  9826   012728  0E20               	movlw	32
  9827   01272A  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9828   01272C  0E02               	movlw	2
  9829   01272E  EC63  F0A5         	call	_lcd_char
  9830                           
  9831                           ;main.c: 238:                 break;
  9832   012732  EF5E  F094         	goto	l155
  9833   012736                     l5951:
  9834   012736  0E07               	movlw	7
  9835   012738  6E0C               	movwf	lcd_char@col^(0+1280),c
  9836   01273A  0E20               	movlw	32
  9837   01273C  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9838   01273E  0E02               	movlw	2
  9839   012740  EC63  F0A5         	call	_lcd_char
  9840                           
  9841                           ;main.c: 240:                 lcd_char(2,12,'<');
  9842   012744  0E0C               	movlw	12
  9843   012746  6E0C               	movwf	lcd_char@col^(0+1280),c
  9844   012748  0E3C               	movlw	60
  9845   01274A  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9846   01274C  0E02               	movlw	2
  9847   01274E  EC63  F0A5         	call	_lcd_char
  9848                           
  9849                           ;main.c: 241:                 break;
  9850   012752  EF5E  F094         	goto	l155
  9851   012756                     l5953:
  9852                           
  9853                           ; BSR set to: 5
  9854                           ;main.c: 243:                 lcd_char(2,7,' ');
  9855   012756  0E07               	movlw	7
  9856   012758  6E0C               	movwf	lcd_char@col^(0+1280),c
  9857   01275A  0E20               	movlw	32
  9858   01275C  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9859   01275E  0E02               	movlw	2
  9860   012760  EC63  F0A5         	call	_lcd_char
  9861                           
  9862                           ;main.c: 244:                 lcd_char(2,12,' ');
  9863   012764  0E0C               	movlw	12
  9864   012766  6E0C               	movwf	lcd_char@col^(0+1280),c
  9865   012768  0E20               	movlw	32
  9866   01276A  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9867   01276C  0E02               	movlw	2
  9868   01276E  EC63  F0A5         	call	_lcd_char
  9869                           
  9870                           ;main.c: 246:                 lcd_char(2,15,' ');
  9871   012772  0E0F               	movlw	15
  9872   012774  6E0C               	movwf	lcd_char@col^(0+1280),c
  9873   012776  0E20               	movlw	32
  9874   012778  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9875   01277A  0E02               	movlw	2
  9876   01277C  EC63  F0A5         	call	_lcd_char
  9877                           
  9878                           ;main.c: 247:                 lcd_char(2,16,' ');
  9879   012780  0E10               	movlw	16
  9880   012782  6E0C               	movwf	lcd_char@col^(0+1280),c
  9881   012784  0E20               	movlw	32
  9882   012786  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9883   012788  0E02               	movlw	2
  9884   01278A  EC63  F0A5         	call	_lcd_char
  9885   01278E                     
  9886                           ;main.c: 248:                 _delay((unsigned long)((100)*(64000000UL/4000.0)));
  9887   01278E  0E09               	movlw	9
  9888   012790  6E11               	movwf	(??_MenuPrincipal+1)^(0+1280),c
  9889   012792  0E1E               	movlw	30
  9890   012794  6E10               	movwf	??_MenuPrincipal^(0+1280),c
  9891   012796  0EE4               	movlw	228
  9892   012798                     u7127:
  9893   012798  2EE8               	decfsz	wreg,f,c
  9894   01279A  D7FE               	bra	u7127
  9895   01279C  2E10               	decfsz	??_MenuPrincipal^(0+1280),f,c
  9896   01279E  D7FC               	bra	u7127
  9897   0127A0  2E11               	decfsz	(??_MenuPrincipal+1)^(0+1280),f,c
  9898   0127A2  D7FA               	bra	u7127
  9899   0127A4  D000               	nop2	
  9900   0127A6                     
  9901                           ;main.c: 249:                 lcd_char(2,15,'-');
  9902   0127A6  0E0F               	movlw	15
  9903   0127A8  6E0C               	movwf	lcd_char@col^(0+1280),c
  9904   0127AA  0E2D               	movlw	45
  9905   0127AC  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9906   0127AE  0E02               	movlw	2
  9907   0127B0  EC63  F0A5         	call	_lcd_char
  9908   0127B4                     
  9909                           ;main.c: 250:                 lcd_char(2,16,'>');
  9910   0127B4  0E10               	movlw	16
  9911   0127B6  6E0C               	movwf	lcd_char@col^(0+1280),c
  9912   0127B8  0E3E               	movlw	62
  9913   0127BA  6E0D               	movwf	lcd_char@letra^(0+1280),c
  9914   0127BC  0E02               	movlw	2
  9915   0127BE  EC63  F0A5         	call	_lcd_char
  9916   0127C2                     
  9917                           ;main.c: 251:                 _delay((unsigned long)((100)*(64000000UL/4000.0)));
  9918   0127C2  0E09               	movlw	9
  9919   0127C4  6E11               	movwf	(??_MenuPrincipal+1)^(0+1280),c
  9920   0127C6  0E1E               	movlw	30
  9921   0127C8  6E10               	movwf	??_MenuPrincipal^(0+1280),c
  9922   0127CA  0EE4               	movlw	228
  9923   0127CC                     u7137:
  9924   0127CC  2EE8               	decfsz	wreg,f,c
  9925   0127CE  D7FE               	bra	u7137
  9926   0127D0  2E10               	decfsz	??_MenuPrincipal^(0+1280),f,c
  9927   0127D2  D7FC               	bra	u7137
  9928   0127D4  2E11               	decfsz	(??_MenuPrincipal+1)^(0+1280),f,c
  9929   0127D6  D7FA               	bra	u7137
  9930   0127D8  D000               	nop2	
  9931   0127DA                     
  9932                           ;main.c: 253:                     if(PORTDbits.RD0 == 0){
  9933   0127DA  B0D1               	btfsc	209,0,c	;volatile
  9934   0127DC  EFF2  F093         	goto	u5821
  9935   0127E0  EFF4  F093         	goto	u5820
  9936   0127E4                     u5821:
  9937   0127E4  EF10  F094         	goto	l5973
  9938   0127E8                     u5820:
  9939   0127E8                     l161:
  9940   0127E8  A0D1               	btfss	209,0,c	;volatile
  9941   0127EA  EFF9  F093         	goto	u5831
  9942   0127EE  EFFB  F093         	goto	u5830
  9943   0127F2                     u5831:
  9944   0127F2  EFF4  F093         	goto	l161
  9945   0127F6                     u5830:
  9946   0127F6                     
  9947                           ;main.c: 255:                         opSel++;
  9948   0127F6  0105               	movlb	5	; () banked
  9949   0127F8  4BA7               	infsnz	_opSel& (0+255),f,b
  9950   0127FA  2BA8               	incf	(_opSel+1)& (0+255),f,b
  9951   0127FC                     
  9952                           ; BSR set to: 5
  9953                           ;main.c: 256:                         if(opSel>3){
  9954   0127FC  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
  9955   0127FE  EF0A  F094         	goto	u5841
  9956   012802  51A8               	movf	(_opSel+1)& (0+255),w,b
  9957   012804  E109               	bnz	u5840
  9958   012806  0E04               	movlw	4
  9959   012808  5DA7               	subwf	_opSel& (0+255),w,b
  9960   01280A  A0D8               	btfss	status,0,c
  9961   01280C  EF0A  F094         	goto	u5841
  9962   012810  EF0C  F094         	goto	u5840
  9963   012814                     u5841:
  9964   012814  EF10  F094         	goto	l5973
  9965   012818                     u5840:
  9966   012818                     
  9967                           ; BSR set to: 5
  9968                           ;main.c: 257:                             opSel=1;
  9969   012818  0E00               	movlw	0
  9970   01281A  6FA8               	movwf	(_opSel+1)& (0+255),b
  9971   01281C  0E01               	movlw	1
  9972   01281E  6FA7               	movwf	_opSel& (0+255),b
  9973   012820                     l5973:
  9974                           
  9975                           ;main.c: 260:                     if(PORTDbits.RD1 == 0){
  9976   012820  B2D1               	btfsc	209,1,c	;volatile
  9977   012822  EF15  F094         	goto	u5851
  9978   012826  EF17  F094         	goto	u5850
  9979   01282A                     u5851:
  9980   01282A  EF22  F094         	goto	l5979
  9981   01282E                     u5850:
  9982   01282E                     l166:
  9983   01282E  A2D1               	btfss	209,1,c	;volatile
  9984   012830  EF1C  F094         	goto	u5861
  9985   012834  EF1E  F094         	goto	u5860
  9986   012838                     u5861:
  9987   012838  EF17  F094         	goto	l166
  9988   01283C                     u5860:
  9989   01283C                     
  9990                           ;main.c: 262:                         opSel--;
  9991   01283C  0105               	movlb	5	; () banked
  9992   01283E  07A7               	decf	_opSel& (0+255),f,b
  9993   012840  A0D8               	btfss	status,0,c
  9994   012842  07A8               	decf	(_opSel+1)& (0+255),f,b
  9995   012844                     l5979:
  9996                           
  9997                           ;main.c: 264:                     if(PORTBbits.RB4 == 0){
  9998   012844  B8CF               	btfsc	207,4,c	;volatile
  9999   012846  EF27  F094         	goto	u5871
 10000   01284A  EF29  F094         	goto	u5870
 10001   01284E                     u5871:
 10002   01284E  EF30  F094         	goto	l5985
 10003   012852                     u5870:
 10004   012852                     
 10005                           ;main.c: 265:                         lcd_clear();
 10006   012852  EC44  F0A5         	call	_lcd_clear	;wreg free
 10007   012856                     
 10008                           ;main.c: 266:                         menuOp = menu_principalcon;
 10009   012856  0E00               	movlw	0
 10010   012858  0105               	movlb	5	; () banked
 10011   01285A  6FE0               	movwf	(_menuOp+1)& (0+255),b
 10012   01285C  0E01               	movlw	1
 10013   01285E  6FDF               	movwf	_menuOp& (0+255),b
 10014   012860                     l5985:
 10015                           
 10016                           ;main.c: 242:         case 3: while(opSel==3 && PORTBbits.RB4 == 1){
 10017   012860  0E03               	movlw	3
 10018   012862  0105               	movlb	5	; () banked
 10019   012864  19A7               	xorwf	_opSel& (0+255),w,b
 10020   012866  11A8               	iorwf	(_opSel+1)& (0+255),w,b
 10021   012868  A4D8               	btfss	status,2,c
 10022   01286A  EF39  F094         	goto	u5881
 10023   01286E  EF3B  F094         	goto	u5880
 10024   012872                     u5881:
 10025   012872  EF5E  F094         	goto	l155
 10026   012876                     u5880:
 10027   012876                     
 10028                           ; BSR set to: 5
 10029   012876  B8CF               	btfsc	207,4,c	;volatile
 10030   012878  EF40  F094         	goto	u5891
 10031   01287C  EF42  F094         	goto	u5890
 10032   012880                     u5891:
 10033   012880  EFAB  F093         	goto	l5953
 10034   012884                     u5890:
 10035   012884  EF5E  F094         	goto	l155
 10036   012888                     l5991:
 10037   012888  C5A7  F510         	movff	_opSel,??_MenuPrincipal
 10038   01288C  C5A8  F511         	movff	_opSel+1,??_MenuPrincipal+1
 10039                           
 10040                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10041                           ; Switch size 1, requested type "simple"
 10042                           ; Number of cases is 1, Range of values is 0 to 0
 10043                           ; switch strategies available:
 10044                           ; Name         Instructions Cycles
 10045                           ; simple_byte            4     3 (average)
 10046                           ;	Chosen strategy is simple_byte
 10047   012890  5011               	movf	(??_MenuPrincipal+1)^(0+1280),w,c
 10048   012892  0A00               	xorlw	0	; case 0
 10049   012894  B4D8               	btfsc	status,2,c
 10050   012896  EF4F  F094         	goto	l7513
 10051   01289A  EF5E  F094         	goto	l155
 10052   01289E                     l7513:
 10053                           
 10054                           ; Switch size 1, requested type "simple"
 10055                           ; Number of cases is 3, Range of values is 1 to 3
 10056                           ; switch strategies available:
 10057                           ; Name         Instructions Cycles
 10058                           ; simple_byte           10     6 (average)
 10059                           ;	Chosen strategy is simple_byte
 10060   01289E  5010               	movf	??_MenuPrincipal^(0+1280),w,c
 10061   0128A0  0A01               	xorlw	1	; case 1
 10062   0128A2  B4D8               	btfsc	status,2,c
 10063   0128A4  EF8B  F093         	goto	l5949
 10064   0128A8  0A03               	xorlw	3	; case 2
 10065   0128AA  B4D8               	btfsc	status,2,c
 10066   0128AC  EF9B  F093         	goto	l5951
 10067   0128B0  0A01               	xorlw	1	; case 3
 10068   0128B2  B4D8               	btfsc	status,2,c
 10069   0128B4  EF30  F094         	goto	l5985
 10070   0128B8  EF5E  F094         	goto	l155
 10071   0128BC                     l155:
 10072                           
 10073                           ;main.c: 272:     if(PORTBbits.RB4 == 0){
 10074   0128BC  B8CF               	btfsc	207,4,c	;volatile
 10075   0128BE  EF63  F094         	goto	u5901
 10076   0128C2  EF65  F094         	goto	u5900
 10077   0128C6                     u5901:
 10078   0128C6  EF92  F094         	goto	l178
 10079   0128CA                     u5900:
 10080   0128CA                     
 10081                           ;main.c: 273:         lcd_clear();
 10082   0128CA  EC44  F0A5         	call	_lcd_clear	;wreg free
 10083                           
 10084                           ;main.c: 274:         switch(opSel){
 10085   0128CE  EF77  F094         	goto	l6001
 10086   0128D2                     l5995:
 10087   0128D2  0E00               	movlw	0
 10088   0128D4  0105               	movlb	5	; () banked
 10089   0128D6  6FE0               	movwf	(_menuOp+1)& (0+255),b
 10090   0128D8  0E02               	movlw	2
 10091   0128DA  6FDF               	movwf	_menuOp& (0+255),b
 10092   0128DC  EF8D  F094         	goto	l6003
 10093   0128E0                     l5997:
 10094   0128E0  0E00               	movlw	0
 10095   0128E2  0105               	movlb	5	; () banked
 10096   0128E4  6FE0               	movwf	(_menuOp+1)& (0+255),b
 10097   0128E6  0E04               	movlw	4
 10098   0128E8  6FDF               	movwf	_menuOp& (0+255),b
 10099   0128EA  EF8D  F094         	goto	l6003
 10100   0128EE                     l6001:
 10101   0128EE  C5A7  F510         	movff	_opSel,??_MenuPrincipal
 10102   0128F2  C5A8  F511         	movff	_opSel+1,??_MenuPrincipal+1
 10103                           
 10104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10105                           ; Switch size 1, requested type "simple"
 10106                           ; Number of cases is 1, Range of values is 0 to 0
 10107                           ; switch strategies available:
 10108                           ; Name         Instructions Cycles
 10109                           ; simple_byte            4     3 (average)
 10110                           ;	Chosen strategy is simple_byte
 10111   0128F6  5011               	movf	(??_MenuPrincipal+1)^(0+1280),w,c
 10112   0128F8  0A00               	xorlw	0	; case 0
 10113   0128FA  B4D8               	btfsc	status,2,c
 10114   0128FC  EF82  F094         	goto	l7515
 10115   012900  EF8D  F094         	goto	l6003
 10116   012904                     l7515:
 10117                           
 10118                           ; Switch size 1, requested type "simple"
 10119                           ; Number of cases is 2, Range of values is 1 to 2
 10120                           ; switch strategies available:
 10121                           ; Name         Instructions Cycles
 10122                           ; simple_byte            7     4 (average)
 10123                           ;	Chosen strategy is simple_byte
 10124   012904  5010               	movf	??_MenuPrincipal^(0+1280),w,c
 10125   012906  0A01               	xorlw	1	; case 1
 10126   012908  B4D8               	btfsc	status,2,c
 10127   01290A  EF69  F094         	goto	l5995
 10128   01290E  0A03               	xorlw	3	; case 2
 10129   012910  B4D8               	btfsc	status,2,c
 10130   012912  EF70  F094         	goto	l5997
 10131   012916  EF8D  F094         	goto	l6003
 10132   01291A                     l6003:
 10133                           
 10134                           ;main.c: 278:         opSel = 1;
 10135   01291A  0E00               	movlw	0
 10136   01291C  0105               	movlb	5	; () banked
 10137   01291E  6FA8               	movwf	(_opSel+1)& (0+255),b
 10138   012920  0E01               	movlw	1
 10139   012922  6FA7               	movwf	_opSel& (0+255),b
 10140   012924                     l178:
 10141   012924  0012               	return		;funcret
 10142   012926                     __end_of_MenuPrincipal:
 10143                           	callstack 0
 10144                           
 10145 ;; *************** function _MenuMotor *****************
 10146 ;; Defined at:
 10147 ;;		line 707 in file "main.c"
 10148 ;; Parameters:    Size  Location     Type
 10149 ;;		None
 10150 ;; Auto vars:     Size  Location     Type
 10151 ;;		None
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  1    wreg      void 
 10154 ;; Registers used:
 10155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10163 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10164 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10165 ;;Total ram usage:        2 bytes
 10166 ;; Hardware stack levels used: 1
 10167 ;; Hardware stack levels required when called: 5
 10168 ;; This function calls:
 10169 ;;		_lcd_char
 10170 ;;		_lcd_clear
 10171 ;;		_lcd_out
 10172 ;; This function is called by:
 10173 ;;		_main
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           	psect	text38
 10178   012E70                     __ptext38:
 10179                           	callstack 0
 10180   012E70                     _MenuMotor:
 10181                           	callstack 121
 10182   012E70                     
 10183                           ;main.c: 708:     lcd_out(1,1,"   MENU MOTOR   ");
 10184   012E70  0E01               	movlw	1
 10185   012E72  6E0C               	movwf	lcd_out@col^(0+1280),c
 10186   012E74  0E2A               	movlw	low STR_12
 10187   012E76  6E0D               	movwf	lcd_out@str^(0+1280),c
 10188   012E78  0EFF               	movlw	high STR_12
 10189   012E7A  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
 10190   012E7C  0E01               	movlw	1
 10191   012E7E  EC3E  F0A2         	call	_lcd_out
 10192                           
 10193                           ;main.c: 709:     lcd_out(2,1,"1.D  2.I  3.OFF ");
 10194   012E82  0E01               	movlw	1
 10195   012E84  6E0C               	movwf	lcd_out@col^(0+1280),c
 10196   012E86  0E4C               	movlw	low STR_13
 10197   012E88  6E0D               	movwf	lcd_out@str^(0+1280),c
 10198   012E8A  0EFF               	movlw	high STR_13
 10199   012E8C  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
 10200   012E8E  0E02               	movlw	2
 10201   012E90  EC3E  F0A2         	call	_lcd_out
 10202   012E94                     
 10203                           ;main.c: 710:     lcd_char(1,16,0);
 10204   012E94  0E10               	movlw	16
 10205   012E96  6E0C               	movwf	lcd_char@col^(0+1280),c
 10206   012E98  0E00               	movlw	0
 10207   012E9A  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10208   012E9C  0E01               	movlw	1
 10209   012E9E  EC63  F0A5         	call	_lcd_char
 10210   012EA2                     
 10211                           ;main.c: 712:     if(PORTDbits.RD0 == 0){
 10212   012EA2  B0D1               	btfsc	209,0,c	;volatile
 10213   012EA4  EF56  F097         	goto	u6671
 10214   012EA8  EF58  F097         	goto	u6670
 10215   012EAC                     u6671:
 10216   012EAC  EF62  F097         	goto	l6515
 10217   012EB0                     u6670:
 10218   012EB0                     l391:
 10219   012EB0  A0D1               	btfss	209,0,c	;volatile
 10220   012EB2  EF5D  F097         	goto	u6681
 10221   012EB6  EF5F  F097         	goto	u6680
 10222   012EBA                     u6681:
 10223   012EBA  EF58  F097         	goto	l391
 10224   012EBE                     u6680:
 10225   012EBE                     
 10226                           ;main.c: 714:             opSel++;
 10227   012EBE  0105               	movlb	5	; () banked
 10228   012EC0  4BA7               	infsnz	_opSel& (0+255),f,b
 10229   012EC2  2BA8               	incf	(_opSel+1)& (0+255),f,b
 10230   012EC4                     l6515:
 10231                           
 10232                           ;main.c: 717:     if(PORTDbits.RD1 == 0){
 10233   012EC4  B2D1               	btfsc	209,1,c	;volatile
 10234   012EC6  EF67  F097         	goto	u6691
 10235   012ECA  EF69  F097         	goto	u6690
 10236   012ECE                     u6691:
 10237   012ECE  EF2F  F098         	goto	l6569
 10238   012ED2                     u6690:
 10239   012ED2                     l395:
 10240   012ED2  A2D1               	btfss	209,1,c	;volatile
 10241   012ED4  EF6E  F097         	goto	u6701
 10242   012ED8  EF70  F097         	goto	u6700
 10243   012EDC                     u6701:
 10244   012EDC  EF69  F097         	goto	l395
 10245   012EE0                     u6700:
 10246   012EE0                     
 10247                           ;main.c: 719:             opSel--;
 10248   012EE0  0105               	movlb	5	; () banked
 10249   012EE2  07A7               	decf	_opSel& (0+255),f,b
 10250   012EE4  A0D8               	btfss	status,0,c
 10251   012EE6  07A8               	decf	(_opSel+1)& (0+255),f,b
 10252   012EE8                     
 10253                           ; BSR set to: 5
 10254                           ;main.c: 720:             if(opSel<1){
 10255   012EE8  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
 10256   012EEA  EF81  F097         	goto	u6710
 10257   012EEE  51A8               	movf	(_opSel+1)& (0+255),w,b
 10258   012EF0  E106               	bnz	u6711
 10259   012EF2  05A7               	decf	_opSel& (0+255),w,b
 10260   012EF4  B0D8               	btfsc	status,0,c
 10261   012EF6  EF7F  F097         	goto	u6711
 10262   012EFA  EF81  F097         	goto	u6710
 10263   012EFE                     u6711:
 10264   012EFE  EF2F  F098         	goto	l6569
 10265   012F02                     u6710:
 10266   012F02                     
 10267                           ; BSR set to: 5
 10268                           ;main.c: 721:                 opSel=4;
 10269   012F02  0E00               	movlw	0
 10270   012F04  6FA8               	movwf	(_opSel+1)& (0+255),b
 10271   012F06  0E04               	movlw	4
 10272   012F08  6FA7               	movwf	_opSel& (0+255),b
 10273   012F0A  EF2F  F098         	goto	l6569
 10274   012F0E                     l6525:
 10275   012F0E  0E04               	movlw	4
 10276   012F10  6E0C               	movwf	lcd_char@col^(0+1280),c
 10277   012F12  0E3C               	movlw	60
 10278   012F14  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10279   012F16  0E02               	movlw	2
 10280   012F18  EC63  F0A5         	call	_lcd_char
 10281                           
 10282                           ;main.c: 727:                 lcd_char(2,9,' ');
 10283   012F1C  0E09               	movlw	9
 10284   012F1E  6E0C               	movwf	lcd_char@col^(0+1280),c
 10285   012F20  0E20               	movlw	32
 10286   012F22  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10287   012F24  0E02               	movlw	2
 10288   012F26  EC63  F0A5         	call	_lcd_char
 10289                           
 10290                           ;main.c: 728:                 break;
 10291   012F2A  EF4D  F098         	goto	l401
 10292   012F2E                     l6527:
 10293   012F2E  0E04               	movlw	4
 10294   012F30  6E0C               	movwf	lcd_char@col^(0+1280),c
 10295   012F32  0E20               	movlw	32
 10296   012F34  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10297   012F36  0E02               	movlw	2
 10298   012F38  EC63  F0A5         	call	_lcd_char
 10299                           
 10300                           ;main.c: 730:                 lcd_char(2,9,'<');
 10301   012F3C  0E09               	movlw	9
 10302   012F3E  6E0C               	movwf	lcd_char@col^(0+1280),c
 10303   012F40  0E3C               	movlw	60
 10304   012F42  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10305   012F44  0E02               	movlw	2
 10306   012F46  EC63  F0A5         	call	_lcd_char
 10307                           
 10308                           ;main.c: 731:                 break;
 10309   012F4A  EF4D  F098         	goto	l401
 10310   012F4E                     l6529:
 10311   012F4E  0E10               	movlw	16
 10312   012F50  6E0C               	movwf	lcd_char@col^(0+1280),c
 10313   012F52  0E3C               	movlw	60
 10314   012F54  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10315   012F56  0E02               	movlw	2
 10316   012F58  EC63  F0A5         	call	_lcd_char
 10317                           
 10318                           ;main.c: 733:                 break;
 10319   012F5C  EF4D  F098         	goto	l401
 10320   012F60                     l6531:
 10321                           
 10322                           ; BSR set to: 5
 10323                           ;main.c: 736:                 lcd_char(1,16,0);
 10324   012F60  0E10               	movlw	16
 10325   012F62  6E0C               	movwf	lcd_char@col^(0+1280),c
 10326   012F64  0E00               	movlw	0
 10327   012F66  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10328   012F68  0E01               	movlw	1
 10329   012F6A  EC63  F0A5         	call	_lcd_char
 10330   012F6E                     
 10331                           ;main.c: 737:                 _delay((unsigned long)((100)*(64000000UL/4000.0)));
 10332   012F6E  0E09               	movlw	9
 10333   012F70  6E11               	movwf	(??_MenuMotor+1)^(0+1280),c
 10334   012F72  0E1E               	movlw	30
 10335   012F74  6E10               	movwf	??_MenuMotor^(0+1280),c
 10336   012F76  0EE4               	movlw	228
 10337   012F78                     u7147:
 10338   012F78  2EE8               	decfsz	wreg,f,c
 10339   012F7A  D7FE               	bra	u7147
 10340   012F7C  2E10               	decfsz	??_MenuMotor^(0+1280),f,c
 10341   012F7E  D7FC               	bra	u7147
 10342   012F80  2E11               	decfsz	(??_MenuMotor+1)^(0+1280),f,c
 10343   012F82  D7FA               	bra	u7147
 10344   012F84  D000               	nop2	
 10345   012F86                     
 10346                           ;main.c: 738:                 lcd_char(1,16,' ');
 10347   012F86  0E10               	movlw	16
 10348   012F88  6E0C               	movwf	lcd_char@col^(0+1280),c
 10349   012F8A  0E20               	movlw	32
 10350   012F8C  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10351   012F8E  0E01               	movlw	1
 10352   012F90  EC63  F0A5         	call	_lcd_char
 10353                           
 10354                           ;main.c: 739:                 _delay((unsigned long)((100)*(64000000UL/4000.0)));
 10355   012F94  0E09               	movlw	9
 10356   012F96  6E11               	movwf	(??_MenuMotor+1)^(0+1280),c
 10357   012F98  0E1E               	movlw	30
 10358   012F9A  6E10               	movwf	??_MenuMotor^(0+1280),c
 10359   012F9C  0EE4               	movlw	228
 10360   012F9E                     u7157:
 10361   012F9E  2EE8               	decfsz	wreg,f,c
 10362   012FA0  D7FE               	bra	u7157
 10363   012FA2  2E10               	decfsz	??_MenuMotor^(0+1280),f,c
 10364   012FA4  D7FC               	bra	u7157
 10365   012FA6  2E11               	decfsz	(??_MenuMotor+1)^(0+1280),f,c
 10366   012FA8  D7FA               	bra	u7157
 10367   012FAA  D000               	nop2	
 10368   012FAC                     
 10369                           ;main.c: 741:                     if(PORTDbits.RD0 == 0){
 10370   012FAC  B0D1               	btfsc	209,0,c	;volatile
 10371   012FAE  EFDB  F097         	goto	u6721
 10372   012FB2  EFDD  F097         	goto	u6720
 10373   012FB6                     u6721:
 10374   012FB6  EFF9  F097         	goto	l6547
 10375   012FBA                     u6720:
 10376   012FBA                     l408:
 10377   012FBA  A0D1               	btfss	209,0,c	;volatile
 10378   012FBC  EFE2  F097         	goto	u6731
 10379   012FC0  EFE4  F097         	goto	u6730
 10380   012FC4                     u6731:
 10381   012FC4  EFDD  F097         	goto	l408
 10382   012FC8                     u6730:
 10383   012FC8                     
 10384                           ;main.c: 743:                         opSel++;
 10385   012FC8  0105               	movlb	5	; () banked
 10386   012FCA  4BA7               	infsnz	_opSel& (0+255),f,b
 10387   012FCC  2BA8               	incf	(_opSel+1)& (0+255),f,b
 10388   012FCE                     
 10389                           ; BSR set to: 5
 10390                           ;main.c: 744:                         if(opSel>4){
 10391   012FCE  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
 10392   012FD0  EFF3  F097         	goto	u6741
 10393   012FD4  51A8               	movf	(_opSel+1)& (0+255),w,b
 10394   012FD6  E109               	bnz	u6740
 10395   012FD8  0E05               	movlw	5
 10396   012FDA  5DA7               	subwf	_opSel& (0+255),w,b
 10397   012FDC  A0D8               	btfss	status,0,c
 10398   012FDE  EFF3  F097         	goto	u6741
 10399   012FE2  EFF5  F097         	goto	u6740
 10400   012FE6                     u6741:
 10401   012FE6  EFF9  F097         	goto	l6547
 10402   012FEA                     u6740:
 10403   012FEA                     
 10404                           ; BSR set to: 5
 10405                           ;main.c: 745:                             opSel=1;
 10406   012FEA  0E00               	movlw	0
 10407   012FEC  6FA8               	movwf	(_opSel+1)& (0+255),b
 10408   012FEE  0E01               	movlw	1
 10409   012FF0  6FA7               	movwf	_opSel& (0+255),b
 10410   012FF2                     l6547:
 10411                           
 10412                           ;main.c: 748:                     if(PORTDbits.RD1 == 0){
 10413   012FF2  B2D1               	btfsc	209,1,c	;volatile
 10414   012FF4  EFFE  F097         	goto	u6751
 10415   012FF8  EF00  F098         	goto	u6750
 10416   012FFC                     u6751:
 10417   012FFC  EF0B  F098         	goto	l6553
 10418   013000                     u6750:
 10419   013000                     l413:
 10420   013000  A2D1               	btfss	209,1,c	;volatile
 10421   013002  EF05  F098         	goto	u6761
 10422   013006  EF07  F098         	goto	u6760
 10423   01300A                     u6761:
 10424   01300A  EF00  F098         	goto	l413
 10425   01300E                     u6760:
 10426   01300E                     
 10427                           ;main.c: 750:                         opSel--;
 10428   01300E  0105               	movlb	5	; () banked
 10429   013010  07A7               	decf	_opSel& (0+255),f,b
 10430   013012  A0D8               	btfss	status,0,c
 10431   013014  07A8               	decf	(_opSel+1)& (0+255),f,b
 10432   013016                     l6553:
 10433                           
 10434                           ;main.c: 752:                     if(PORTBbits.RB4 == 0){
 10435   013016  B8CF               	btfsc	207,4,c	;volatile
 10436   013018  EF10  F098         	goto	u6771
 10437   01301C  EF12  F098         	goto	u6770
 10438   013020                     u6771:
 10439   013020  EF1B  F098         	goto	l6563
 10440   013024                     u6770:
 10441   013024                     
 10442                           ;main.c: 753:                         lcd_clear();
 10443   013024  EC44  F0A5         	call	_lcd_clear	;wreg free
 10444   013028                     
 10445                           ;main.c: 754:                         PORTEbits.RE0 = 0;
 10446   013028  90D2               	bcf	210,0,c	;volatile
 10447   01302A                     
 10448                           ;main.c: 755:                         PORTCbits.RC1 = 0;
 10449   01302A  92D0               	bcf	208,1,c	;volatile
 10450   01302C                     
 10451                           ;main.c: 756:                         menuOp = menu_principal;
 10452   01302C  0E00               	movlw	0
 10453   01302E  0105               	movlb	5	; () banked
 10454   013030  6FE0               	movwf	(_menuOp+1)& (0+255),b
 10455   013032  0E00               	movlw	0
 10456   013034  6FDF               	movwf	_menuOp& (0+255),b
 10457   013036                     l6563:
 10458                           
 10459                           ;main.c: 734:         case 4: while(opSel==4 && PORTBbits.RB4==1){
 10460   013036  0E04               	movlw	4
 10461   013038  0105               	movlb	5	; () banked
 10462   01303A  19A7               	xorwf	_opSel& (0+255),w,b
 10463   01303C  11A8               	iorwf	(_opSel+1)& (0+255),w,b
 10464   01303E  A4D8               	btfss	status,2,c
 10465   013040  EF24  F098         	goto	u6781
 10466   013044  EF26  F098         	goto	u6780
 10467   013048                     u6781:
 10468   013048  EF4D  F098         	goto	l401
 10469   01304C                     u6780:
 10470   01304C                     
 10471                           ; BSR set to: 5
 10472   01304C  B8CF               	btfsc	207,4,c	;volatile
 10473   01304E  EF2B  F098         	goto	u6791
 10474   013052  EF2D  F098         	goto	u6790
 10475   013056                     u6791:
 10476   013056  EFB0  F097         	goto	l6531
 10477   01305A                     u6790:
 10478   01305A  EF4D  F098         	goto	l401
 10479   01305E                     l6569:
 10480   01305E  C5A7  F510         	movff	_opSel,??_MenuMotor
 10481   013062  C5A8  F511         	movff	_opSel+1,??_MenuMotor+1
 10482                           
 10483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10484                           ; Switch size 1, requested type "simple"
 10485                           ; Number of cases is 1, Range of values is 0 to 0
 10486                           ; switch strategies available:
 10487                           ; Name         Instructions Cycles
 10488                           ; simple_byte            4     3 (average)
 10489                           ;	Chosen strategy is simple_byte
 10490   013066  5011               	movf	(??_MenuMotor+1)^(0+1280),w,c
 10491   013068  0A00               	xorlw	0	; case 0
 10492   01306A  B4D8               	btfsc	status,2,c
 10493   01306C  EF3A  F098         	goto	l7517
 10494   013070  EF4D  F098         	goto	l401
 10495   013074                     l7517:
 10496                           
 10497                           ; Switch size 1, requested type "simple"
 10498                           ; Number of cases is 4, Range of values is 1 to 4
 10499                           ; switch strategies available:
 10500                           ; Name         Instructions Cycles
 10501                           ; simple_byte           13     7 (average)
 10502                           ;	Chosen strategy is simple_byte
 10503   013074  5010               	movf	??_MenuMotor^(0+1280),w,c
 10504   013076  0A01               	xorlw	1	; case 1
 10505   013078  B4D8               	btfsc	status,2,c
 10506   01307A  EF87  F097         	goto	l6525
 10507   01307E  0A03               	xorlw	3	; case 2
 10508   013080  B4D8               	btfsc	status,2,c
 10509   013082  EF97  F097         	goto	l6527
 10510   013086  0A01               	xorlw	1	; case 3
 10511   013088  B4D8               	btfsc	status,2,c
 10512   01308A  EFA7  F097         	goto	l6529
 10513   01308E  0A07               	xorlw	7	; case 4
 10514   013090  B4D8               	btfsc	status,2,c
 10515   013092  EF1B  F098         	goto	l6563
 10516   013096  EF4D  F098         	goto	l401
 10517   01309A                     l401:
 10518                           
 10519                           ;main.c: 763:     if(PORTBbits.RB4 == 0){
 10520   01309A  B8CF               	btfsc	207,4,c	;volatile
 10521   01309C  EF52  F098         	goto	u6801
 10522   0130A0  EF54  F098         	goto	u6800
 10523   0130A4                     u6801:
 10524   0130A4  EF7C  F098         	goto	l426
 10525   0130A8                     u6800:
 10526   0130A8  EF62  F098         	goto	l6575
 10527   0130AC                     l422:
 10528   0130AC  80D2               	bsf	210,0,c	;volatile
 10529                           
 10530                           ;main.c: 766:                     PORTCbits.RC1=0;
 10531   0130AE  92D0               	bcf	208,1,c	;volatile
 10532                           
 10533                           ;main.c: 767:                     break;
 10534   0130B0  EF7C  F098         	goto	l426
 10535   0130B4                     l424:
 10536   0130B4  90D2               	bcf	210,0,c	;volatile
 10537                           
 10538                           ;main.c: 769:                     PORTCbits.RC1=1;
 10539   0130B6  82D0               	bsf	208,1,c	;volatile
 10540                           
 10541                           ;main.c: 770:                     break;
 10542   0130B8  EF7C  F098         	goto	l426
 10543   0130BC                     l425:
 10544   0130BC  90D2               	bcf	210,0,c	;volatile
 10545                           
 10546                           ;main.c: 772:                     PORTCbits.RC1=0;
 10547   0130BE  92D0               	bcf	208,1,c	;volatile
 10548                           
 10549                           ;main.c: 773:                     break;
 10550   0130C0  EF7C  F098         	goto	l426
 10551   0130C4                     l6575:
 10552   0130C4  C5A7  F510         	movff	_opSel,??_MenuMotor
 10553   0130C8  C5A8  F511         	movff	_opSel+1,??_MenuMotor+1
 10554                           
 10555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10556                           ; Switch size 1, requested type "simple"
 10557                           ; Number of cases is 1, Range of values is 0 to 0
 10558                           ; switch strategies available:
 10559                           ; Name         Instructions Cycles
 10560                           ; simple_byte            4     3 (average)
 10561                           ;	Chosen strategy is simple_byte
 10562   0130CC  5011               	movf	(??_MenuMotor+1)^(0+1280),w,c
 10563   0130CE  0A00               	xorlw	0	; case 0
 10564   0130D0  B4D8               	btfsc	status,2,c
 10565   0130D2  EF6D  F098         	goto	l7519
 10566   0130D6  EF7C  F098         	goto	l426
 10567   0130DA                     l7519:
 10568                           
 10569                           ; Switch size 1, requested type "simple"
 10570                           ; Number of cases is 3, Range of values is 1 to 3
 10571                           ; switch strategies available:
 10572                           ; Name         Instructions Cycles
 10573                           ; simple_byte           10     6 (average)
 10574                           ;	Chosen strategy is simple_byte
 10575   0130DA  5010               	movf	??_MenuMotor^(0+1280),w,c
 10576   0130DC  0A01               	xorlw	1	; case 1
 10577   0130DE  B4D8               	btfsc	status,2,c
 10578   0130E0  EF56  F098         	goto	l422
 10579   0130E4  0A03               	xorlw	3	; case 2
 10580   0130E6  B4D8               	btfsc	status,2,c
 10581   0130E8  EF5A  F098         	goto	l424
 10582   0130EC  0A01               	xorlw	1	; case 3
 10583   0130EE  B4D8               	btfsc	status,2,c
 10584   0130F0  EF5E  F098         	goto	l425
 10585   0130F4  EF7C  F098         	goto	l426
 10586   0130F8                     l426:
 10587   0130F8  0012               	return		;funcret
 10588   0130FA                     __end_of_MenuMotor:
 10589                           	callstack 0
 10590                           
 10591 ;; *************** function _MenuLedCon *****************
 10592 ;; Defined at:
 10593 ;;		line 468 in file "main.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;		None
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;		None
 10598 ;; Return value:  Size  Location     Type
 10599 ;;                  1    wreg      void 
 10600 ;; Registers used:
 10601 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 10607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10611 ;;Total ram usage:        2 bytes
 10612 ;; Hardware stack levels used: 1
 10613 ;; Hardware stack levels required when called: 6
 10614 ;; This function calls:
 10615 ;;		_Sec3Est
 10616 ;;		_lcd_char
 10617 ;;		_lcd_clear
 10618 ;;		_lcd_out
 10619 ;; This function is called by:
 10620 ;;		_main
 10621 ;; This function uses a non-reentrant model
 10622 ;;
 10623                           
 10624                           	psect	text39
 10625   0118BE                     __ptext39:
 10626                           	callstack 0
 10627   0118BE                     _MenuLedCon:
 10628                           	callstack 120
 10629   0118BE                     
 10630                           ;main.c: 470:     lcd_out(1,1," MENU SECUENCIA ");
 10631   0118BE  0E01               	movlw	1
 10632   0118C0  6E0C               	movwf	lcd_out@col^(0+1280),c
 10633   0118C2  0E3B               	movlw	low STR_5
 10634   0118C4  6E0D               	movwf	lcd_out@str^(0+1280),c
 10635   0118C6  0EFF               	movlw	high STR_5
 10636   0118C8  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
 10637   0118CA  0E01               	movlw	1
 10638   0118CC  EC3E  F0A2         	call	_lcd_out
 10639                           
 10640                           ;main.c: 471:     lcd_out(2,1,"<-    3.S3      ");
 10641   0118D0  0E01               	movlw	1
 10642   0118D2  6E0C               	movwf	lcd_out@col^(0+1280),c
 10643   0118D4  0EF7               	movlw	low STR_8
 10644   0118D6  6E0D               	movwf	lcd_out@str^(0+1280),c
 10645   0118D8  0EFE               	movlw	high STR_8
 10646   0118DA  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
 10647   0118DC  0E02               	movlw	2
 10648   0118DE  EC3E  F0A2         	call	_lcd_out
 10649   0118E2                     
 10650                           ;main.c: 472:     lcd_char(2,16,0);
 10651   0118E2  0E10               	movlw	16
 10652   0118E4  6E0C               	movwf	lcd_char@col^(0+1280),c
 10653   0118E6  0E00               	movlw	0
 10654   0118E8  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10655   0118EA  0E02               	movlw	2
 10656   0118EC  EC63  F0A5         	call	_lcd_char
 10657   0118F0                     
 10658                           ;main.c: 474:     if(PORTDbits.RD0 == 0){
 10659   0118F0  B0D1               	btfsc	209,0,c	;volatile
 10660   0118F2  EF7D  F08C         	goto	u6261
 10661   0118F6  EF7F  F08C         	goto	u6260
 10662   0118FA                     u6261:
 10663   0118FA  EF9B  F08C         	goto	l6271
 10664   0118FE                     u6260:
 10665   0118FE                     l270:
 10666   0118FE  A0D1               	btfss	209,0,c	;volatile
 10667   011900  EF84  F08C         	goto	u6271
 10668   011904  EF86  F08C         	goto	u6270
 10669   011908                     u6271:
 10670   011908  EF7F  F08C         	goto	l270
 10671   01190C                     u6270:
 10672   01190C                     
 10673                           ;main.c: 476:         opSel++;
 10674   01190C  0105               	movlb	5	; () banked
 10675   01190E  4BA7               	infsnz	_opSel& (0+255),f,b
 10676   011910  2BA8               	incf	(_opSel+1)& (0+255),f,b
 10677   011912                     
 10678                           ; BSR set to: 5
 10679                           ;main.c: 477:         if(opSel>3){
 10680   011912  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
 10681   011914  EF95  F08C         	goto	u6281
 10682   011918  51A8               	movf	(_opSel+1)& (0+255),w,b
 10683   01191A  E109               	bnz	u6280
 10684   01191C  0E04               	movlw	4
 10685   01191E  5DA7               	subwf	_opSel& (0+255),w,b
 10686   011920  A0D8               	btfss	status,0,c
 10687   011922  EF95  F08C         	goto	u6281
 10688   011926  EF97  F08C         	goto	u6280
 10689   01192A                     u6281:
 10690   01192A  EF9B  F08C         	goto	l6271
 10691   01192E                     u6280:
 10692   01192E                     
 10693                           ; BSR set to: 5
 10694                           ;main.c: 478:             opSel=1;
 10695   01192E  0E00               	movlw	0
 10696   011930  6FA8               	movwf	(_opSel+1)& (0+255),b
 10697   011932  0E01               	movlw	1
 10698   011934  6FA7               	movwf	_opSel& (0+255),b
 10699   011936                     l6271:
 10700                           
 10701                           ;main.c: 482:     if(PORTDbits.RD1 == 0){
 10702   011936  B2D1               	btfsc	209,1,c	;volatile
 10703   011938  EFA0  F08C         	goto	u6291
 10704   01193C  EFA2  F08C         	goto	u6290
 10705   011940                     u6291:
 10706   011940  EF18  F08E         	goto	l6391
 10707   011944                     u6290:
 10708   011944                     l275:
 10709   011944  A2D1               	btfss	209,1,c	;volatile
 10710   011946  EFA7  F08C         	goto	u6301
 10711   01194A  EFA9  F08C         	goto	u6300
 10712   01194E                     u6301:
 10713   01194E  EFA2  F08C         	goto	l275
 10714   011952                     u6300:
 10715   011952                     
 10716                           ;main.c: 484:         opSel--;
 10717   011952  0105               	movlb	5	; () banked
 10718   011954  07A7               	decf	_opSel& (0+255),f,b
 10719   011956  A0D8               	btfss	status,0,c
 10720   011958  07A8               	decf	(_opSel+1)& (0+255),f,b
 10721   01195A  EF18  F08E         	goto	l6391
 10722   01195E                     l6277:
 10723                           
 10724                           ; BSR set to: 5
 10725                           ;main.c: 489:                 lcd_char(2,1,'<');
 10726   01195E  0E01               	movlw	1
 10727   011960  6E0C               	movwf	lcd_char@col^(0+1280),c
 10728   011962  0E3C               	movlw	60
 10729   011964  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10730   011966  0E02               	movlw	2
 10731   011968  EC63  F0A5         	call	_lcd_char
 10732                           
 10733                           ;main.c: 490:                 lcd_char(2,2,'-');
 10734   01196C  0E02               	movlw	2
 10735   01196E  6E0C               	movwf	lcd_char@col^(0+1280),c
 10736   011970  0E2D               	movlw	45
 10737   011972  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10738   011974  0E02               	movlw	2
 10739   011976  EC63  F0A5         	call	_lcd_char
 10740   01197A                     
 10741                           ;main.c: 491:                 _delay((unsigned long)((100)*(64000000UL/4000.0)));
 10742   01197A  0E09               	movlw	9
 10743   01197C  6E12               	movwf	(??_MenuLedCon+1)^(0+1280),c
 10744   01197E  0E1E               	movlw	30
 10745   011980  6E11               	movwf	??_MenuLedCon^(0+1280),c
 10746   011982  0EE4               	movlw	228
 10747   011984                     u7167:
 10748   011984  2EE8               	decfsz	wreg,f,c
 10749   011986  D7FE               	bra	u7167
 10750   011988  2E11               	decfsz	??_MenuLedCon^(0+1280),f,c
 10751   01198A  D7FC               	bra	u7167
 10752   01198C  2E12               	decfsz	(??_MenuLedCon+1)^(0+1280),f,c
 10753   01198E  D7FA               	bra	u7167
 10754   011990  D000               	nop2	
 10755   011992                     
 10756                           ;main.c: 492:                 lcd_char(2,1,' ');
 10757   011992  0E01               	movlw	1
 10758   011994  6E0C               	movwf	lcd_char@col^(0+1280),c
 10759   011996  0E20               	movlw	32
 10760   011998  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10761   01199A  0E02               	movlw	2
 10762   01199C  EC63  F0A5         	call	_lcd_char
 10763   0119A0                     
 10764                           ;main.c: 493:                 lcd_char(2,2,' ');
 10765   0119A0  0E02               	movlw	2
 10766   0119A2  6E0C               	movwf	lcd_char@col^(0+1280),c
 10767   0119A4  0E20               	movlw	32
 10768   0119A6  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10769   0119A8  0E02               	movlw	2
 10770   0119AA  EC63  F0A5         	call	_lcd_char
 10771   0119AE                     
 10772                           ;main.c: 494:                  _delay((unsigned long)((100)*(64000000UL/4000.0)));
 10773   0119AE  0E09               	movlw	9
 10774   0119B0  6E12               	movwf	(??_MenuLedCon+1)^(0+1280),c
 10775   0119B2  0E1E               	movlw	30
 10776   0119B4  6E11               	movwf	??_MenuLedCon^(0+1280),c
 10777   0119B6  0EE4               	movlw	228
 10778   0119B8                     u7177:
 10779   0119B8  2EE8               	decfsz	wreg,f,c
 10780   0119BA  D7FE               	bra	u7177
 10781   0119BC  2E11               	decfsz	??_MenuLedCon^(0+1280),f,c
 10782   0119BE  D7FC               	bra	u7177
 10783   0119C0  2E12               	decfsz	(??_MenuLedCon+1)^(0+1280),f,c
 10784   0119C2  D7FA               	bra	u7177
 10785   0119C4  D000               	nop2	
 10786                           
 10787                           ;main.c: 496:                 lcd_char(2,11,' ');
 10788   0119C6  0E0B               	movlw	11
 10789   0119C8  6E0C               	movwf	lcd_char@col^(0+1280),c
 10790   0119CA  0E20               	movlw	32
 10791   0119CC  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10792   0119CE  0E02               	movlw	2
 10793   0119D0  EC63  F0A5         	call	_lcd_char
 10794   0119D4                     
 10795                           ;main.c: 498:                     if(PORTDbits.RD0 == 0){
 10796   0119D4  B0D1               	btfsc	209,0,c	;volatile
 10797   0119D6  EFEF  F08C         	goto	u6311
 10798   0119DA  EFF1  F08C         	goto	u6310
 10799   0119DE                     u6311:
 10800   0119DE  EFFB  F08C         	goto	l6293
 10801   0119E2                     u6310:
 10802   0119E2                     l283:
 10803   0119E2  A0D1               	btfss	209,0,c	;volatile
 10804   0119E4  EFF6  F08C         	goto	u6321
 10805   0119E8  EFF8  F08C         	goto	u6320
 10806   0119EC                     u6321:
 10807   0119EC  EFF1  F08C         	goto	l283
 10808   0119F0                     u6320:
 10809   0119F0                     
 10810                           ;main.c: 500:                         opSel++;
 10811   0119F0  0105               	movlb	5	; () banked
 10812   0119F2  4BA7               	infsnz	_opSel& (0+255),f,b
 10813   0119F4  2BA8               	incf	(_opSel+1)& (0+255),f,b
 10814   0119F6                     l6293:
 10815                           
 10816                           ;main.c: 502:                     if(PORTDbits.RD1 == 0){
 10817   0119F6  B2D1               	btfsc	209,1,c	;volatile
 10818   0119F8  EF00  F08D         	goto	u6331
 10819   0119FC  EF02  F08D         	goto	u6330
 10820   011A00                     u6331:
 10821   011A00  EF1E  F08D         	goto	l6303
 10822   011A04                     u6330:
 10823   011A04                     l287:
 10824   011A04  A2D1               	btfss	209,1,c	;volatile
 10825   011A06  EF07  F08D         	goto	u6341
 10826   011A0A  EF09  F08D         	goto	u6340
 10827   011A0E                     u6341:
 10828   011A0E  EF02  F08D         	goto	l287
 10829   011A12                     u6340:
 10830   011A12                     
 10831                           ;main.c: 504:                         opSel--;
 10832   011A12  0105               	movlb	5	; () banked
 10833   011A14  07A7               	decf	_opSel& (0+255),f,b
 10834   011A16  A0D8               	btfss	status,0,c
 10835   011A18  07A8               	decf	(_opSel+1)& (0+255),f,b
 10836   011A1A                     
 10837                           ; BSR set to: 5
 10838                           ;main.c: 505:                         if(opSel<1){
 10839   011A1A  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
 10840   011A1C  EF1A  F08D         	goto	u6350
 10841   011A20  51A8               	movf	(_opSel+1)& (0+255),w,b
 10842   011A22  E106               	bnz	u6351
 10843   011A24  05A7               	decf	_opSel& (0+255),w,b
 10844   011A26  B0D8               	btfsc	status,0,c
 10845   011A28  EF18  F08D         	goto	u6351
 10846   011A2C  EF1A  F08D         	goto	u6350
 10847   011A30                     u6351:
 10848   011A30  EF1E  F08D         	goto	l6303
 10849   011A34                     u6350:
 10850   011A34                     
 10851                           ; BSR set to: 5
 10852                           ;main.c: 506:                             opSel=3;}
 10853   011A34  0E00               	movlw	0
 10854   011A36  6FA8               	movwf	(_opSel+1)& (0+255),b
 10855   011A38  0E03               	movlw	3
 10856   011A3A  6FA7               	movwf	_opSel& (0+255),b
 10857   011A3C                     l6303:
 10858                           
 10859                           ;main.c: 509:                     if(PORTBbits.RB4 == 0){
 10860   011A3C  B8CF               	btfsc	207,4,c	;volatile
 10861   011A3E  EF23  F08D         	goto	u6361
 10862   011A42  EF25  F08D         	goto	u6360
 10863   011A46                     u6361:
 10864   011A46  EF2C  F08D         	goto	l6309
 10865   011A4A                     u6360:
 10866   011A4A                     
 10867                           ;main.c: 510:                         lcd_clear();
 10868   011A4A  EC44  F0A5         	call	_lcd_clear	;wreg free
 10869   011A4E                     
 10870                           ;main.c: 511:                         menuOp = menu_led;
 10871   011A4E  0E00               	movlw	0
 10872   011A50  0105               	movlb	5	; () banked
 10873   011A52  6FE0               	movwf	(_menuOp+1)& (0+255),b
 10874   011A54  0E02               	movlw	2
 10875   011A56  6FDF               	movwf	_menuOp& (0+255),b
 10876   011A58                     l6309:
 10877                           
 10878                           ;main.c: 488:         case 1: while(opSel==1 && PORTBbits.RB4==1){
 10879   011A58  0105               	movlb	5	; () banked
 10880   011A5A  05A7               	decf	_opSel& (0+255),w,b
 10881   011A5C  11A8               	iorwf	(_opSel+1)& (0+255),w,b
 10882   011A5E  A4D8               	btfss	status,2,c
 10883   011A60  EF34  F08D         	goto	u6371
 10884   011A64  EF36  F08D         	goto	u6370
 10885   011A68                     u6371:
 10886   011A68  EF32  F08E         	goto	l295
 10887   011A6C                     u6370:
 10888   011A6C                     
 10889                           ; BSR set to: 5
 10890   011A6C  B8CF               	btfsc	207,4,c	;volatile
 10891   011A6E  EF3B  F08D         	goto	u6381
 10892   011A72  EF3D  F08D         	goto	u6380
 10893   011A76                     u6381:
 10894   011A76  EFAF  F08C         	goto	l6277
 10895   011A7A                     u6380:
 10896   011A7A  EF32  F08E         	goto	l295
 10897   011A7E                     l6313:
 10898   011A7E  0E0B               	movlw	11
 10899   011A80  6E0C               	movwf	lcd_char@col^(0+1280),c
 10900   011A82  0E3C               	movlw	60
 10901   011A84  6E0D               	movwf	lcd_char@letra^(0+1280),c
 10902   011A86  0E02               	movlw	2
 10903   011A88  EC63  F0A5         	call	_lcd_char
 10904   011A8C                     
 10905                           ;main.c: 518:                 if(PORTBbits.RB4==0){
 10906   011A8C  B8CF               	btfsc	207,4,c	;volatile
 10907   011A8E  EF4B  F08D         	goto	u6391
 10908   011A92  EF4D  F08D         	goto	u6390
 10909   011A96                     u6391:
 10910   011A96  EF32  F08E         	goto	l295
 10911   011A9A                     u6390:
 10912   011A9A                     l298:
 10913   011A9A  A8CF               	btfss	207,4,c	;volatile
 10914   011A9C  EF52  F08D         	goto	u6401
 10915   011AA0  EF54  F08D         	goto	u6400
 10916   011AA4                     u6401:
 10917   011AA4  EF4D  F08D         	goto	l298
 10918   011AA8                     u6400:
 10919   011AA8                     
 10920                           ;main.c: 520:                     state = 1;
 10921   011AA8  0E01               	movlw	1
 10922   011AAA  0105               	movlb	5	; () banked
 10923   011AAC  6FE5               	movwf	_state& (0+255),b
 10924                           
 10925                           ;main.c: 521:                     while(state==1){
 10926   011AAE  EF89  F08D         	goto	l6355
 10927   011AB2                     l6321:
 10928                           
 10929                           ; BSR set to: 5
 10930                           ;main.c: 523:                     LATA=0b11000000;
 10931   011AB2  0EC0               	movlw	192
 10932   011AB4  6EBE               	movwf	190,c	;volatile
 10933   011AB6                     
 10934                           ; BSR set to: 5
 10935                           ;main.c: 524:                     Sec3Est();
 10936   011AB6  EC87  F0A1         	call	_Sec3Est	;wreg free
 10937   011ABA                     
 10938                           ;main.c: 525:                     LATA=0b11100000;
 10939   011ABA  0EE0               	movlw	224
 10940   011ABC  6EBE               	movwf	190,c	;volatile
 10941                           
 10942                           ;main.c: 526:                     Sec3Est();
 10943   011ABE  EC87  F0A1         	call	_Sec3Est	;wreg free
 10944   011AC2                     
 10945                           ;main.c: 527:                     LATA=0b11110000;
 10946   011AC2  0EF0               	movlw	240
 10947   011AC4  6EBE               	movwf	190,c	;volatile
 10948   011AC6                     
 10949                           ;main.c: 528:                     Sec3Est();
 10950   011AC6  EC87  F0A1         	call	_Sec3Est	;wreg free
 10951                           
 10952                           ;main.c: 529:                     LATA=0b11111000;
 10953   011ACA  0EF8               	movlw	248
 10954   011ACC  6EBE               	movwf	190,c	;volatile
 10955   011ACE                     
 10956                           ;main.c: 530:                     Sec3Est();
 10957   011ACE  EC87  F0A1         	call	_Sec3Est	;wreg free
 10958   011AD2                     
 10959                           ;main.c: 531:                     LATA=0b11111100;
 10960   011AD2  0EFC               	movlw	252
 10961   011AD4  6EBE               	movwf	190,c	;volatile
 10962                           
 10963                           ;main.c: 532:                     Sec3Est();
 10964   011AD6  EC87  F0A1         	call	_Sec3Est	;wreg free
 10965   011ADA                     
 10966                           ;main.c: 533:                     LATA=0b11111110;
 10967   011ADA  0EFE               	movlw	254
 10968   011ADC  6EBE               	movwf	190,c	;volatile
 10969   011ADE                     
 10970                           ;main.c: 534:                     Sec3Est();
 10971   011ADE  EC87  F0A1         	call	_Sec3Est	;wreg free
 10972                           
 10973                           ;main.c: 535:                     LATA=0b11111100;
 10974   011AE2  0EFC               	movlw	252
 10975   011AE4  6EBE               	movwf	190,c	;volatile
 10976   011AE6                     
 10977                           ;main.c: 536:                     Sec3Est();
 10978   011AE6  EC87  F0A1         	call	_Sec3Est	;wreg free
 10979   011AEA                     
 10980                           ;main.c: 537:                     LATA=0b11111000;
 10981   011AEA  0EF8               	movlw	248
 10982   011AEC  6EBE               	movwf	190,c	;volatile
 10983                           
 10984                           ;main.c: 538:                     Sec3Est();
 10985   011AEE  EC87  F0A1         	call	_Sec3Est	;wreg free
 10986   011AF2                     
 10987                           ;main.c: 539:                     LATA=0b11110000;
 10988   011AF2  0EF0               	movlw	240
 10989   011AF4  6EBE               	movwf	190,c	;volatile
 10990   011AF6                     
 10991                           ;main.c: 540:                     Sec3Est();
 10992   011AF6  EC87  F0A1         	call	_Sec3Est	;wreg free
 10993                           
 10994                           ;main.c: 541:                     LATA=0b11100000;
 10995   011AFA  0EE0               	movlw	224
 10996   011AFC  6EBE               	movwf	190,c	;volatile
 10997   011AFE                     
 10998                           ;main.c: 542:                     Sec3Est();
 10999   011AFE  EC87  F0A1         	call	_Sec3Est	;wreg free
 11000   011B02                     
 11001                           ;main.c: 543:                     LATA=0b11000000;
 11002   011B02  0EC0               	movlw	192
 11003   011B04  6EBE               	movwf	190,c	;volatile
 11004                           
 11005                           ;main.c: 544:                     Sec3Est();
 11006   011B06  EC87  F0A1         	call	_Sec3Est	;wreg free
 11007   011B0A                     
 11008                           ;main.c: 545:                     LATA=0b10000000;
 11009   011B0A  0E80               	movlw	128
 11010   011B0C  6EBE               	movwf	190,c	;volatile
 11011   011B0E                     
 11012                           ;main.c: 546:                     Sec3Est();
 11013   011B0E  EC87  F0A1         	call	_Sec3Est	;wreg free
 11014   011B12                     l6355:
 11015                           
 11016                           ;main.c: 521:                     while(state==1){
 11017   011B12  0105               	movlb	5	; () banked
 11018   011B14  05E5               	decf	_state& (0+255),w,b
 11019   011B16  B4D8               	btfsc	status,2,c
 11020   011B18  EF90  F08D         	goto	u6411
 11021   011B1C  EF92  F08D         	goto	u6410
 11022   011B20                     u6411:
 11023   011B20  EF59  F08D         	goto	l6321
 11024   011B24                     u6410:
 11025   011B24  EF32  F08E         	goto	l295
 11026   011B28                     l6357:
 11027                           
 11028                           ; BSR set to: 5
 11029                           ;main.c: 552:                 lcd_char(2,11,' ');
 11030   011B28  0E0B               	movlw	11
 11031   011B2A  6E0C               	movwf	lcd_char@col^(0+1280),c
 11032   011B2C  0E20               	movlw	32
 11033   011B2E  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11034   011B30  0E02               	movlw	2
 11035   011B32  EC63  F0A5         	call	_lcd_char
 11036                           
 11037                           ;main.c: 554:                 lcd_char(2,16,0);
 11038   011B36  0E10               	movlw	16
 11039   011B38  6E0C               	movwf	lcd_char@col^(0+1280),c
 11040   011B3A  0E00               	movlw	0
 11041   011B3C  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11042   011B3E  0E02               	movlw	2
 11043   011B40  EC63  F0A5         	call	_lcd_char
 11044   011B44                     
 11045                           ;main.c: 555:                 _delay((unsigned long)((100)*(64000000UL/4000.0)));
 11046   011B44  0E09               	movlw	9
 11047   011B46  6E12               	movwf	(??_MenuLedCon+1)^(0+1280),c
 11048   011B48  0E1E               	movlw	30
 11049   011B4A  6E11               	movwf	??_MenuLedCon^(0+1280),c
 11050   011B4C  0EE4               	movlw	228
 11051   011B4E                     u7187:
 11052   011B4E  2EE8               	decfsz	wreg,f,c
 11053   011B50  D7FE               	bra	u7187
 11054   011B52  2E11               	decfsz	??_MenuLedCon^(0+1280),f,c
 11055   011B54  D7FC               	bra	u7187
 11056   011B56  2E12               	decfsz	(??_MenuLedCon+1)^(0+1280),f,c
 11057   011B58  D7FA               	bra	u7187
 11058   011B5A  D000               	nop2	
 11059   011B5C                     
 11060                           ;main.c: 556:                 lcd_char(2,16,' ');
 11061   011B5C  0E10               	movlw	16
 11062   011B5E  6E0C               	movwf	lcd_char@col^(0+1280),c
 11063   011B60  0E20               	movlw	32
 11064   011B62  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11065   011B64  0E02               	movlw	2
 11066   011B66  EC63  F0A5         	call	_lcd_char
 11067                           
 11068                           ;main.c: 557:                 _delay((unsigned long)((100)*(64000000UL/4000.0)));
 11069   011B6A  0E09               	movlw	9
 11070   011B6C  6E12               	movwf	(??_MenuLedCon+1)^(0+1280),c
 11071   011B6E  0E1E               	movlw	30
 11072   011B70  6E11               	movwf	??_MenuLedCon^(0+1280),c
 11073   011B72  0EE4               	movlw	228
 11074   011B74                     u7197:
 11075   011B74  2EE8               	decfsz	wreg,f,c
 11076   011B76  D7FE               	bra	u7197
 11077   011B78  2E11               	decfsz	??_MenuLedCon^(0+1280),f,c
 11078   011B7A  D7FC               	bra	u7197
 11079   011B7C  2E12               	decfsz	(??_MenuLedCon+1)^(0+1280),f,c
 11080   011B7E  D7FA               	bra	u7197
 11081   011B80  D000               	nop2	
 11082   011B82                     
 11083                           ;main.c: 559:                     if(PORTDbits.RD0 == 0){
 11084   011B82  B0D1               	btfsc	209,0,c	;volatile
 11085   011B84  EFC6  F08D         	goto	u6421
 11086   011B88  EFC8  F08D         	goto	u6420
 11087   011B8C                     u6421:
 11088   011B8C  EFE4  F08D         	goto	l6373
 11089   011B90                     u6420:
 11090   011B90                     l308:
 11091   011B90  A0D1               	btfss	209,0,c	;volatile
 11092   011B92  EFCD  F08D         	goto	u6431
 11093   011B96  EFCF  F08D         	goto	u6430
 11094   011B9A                     u6431:
 11095   011B9A  EFC8  F08D         	goto	l308
 11096   011B9E                     u6430:
 11097   011B9E                     
 11098                           ;main.c: 561:                         opSel++;
 11099   011B9E  0105               	movlb	5	; () banked
 11100   011BA0  4BA7               	infsnz	_opSel& (0+255),f,b
 11101   011BA2  2BA8               	incf	(_opSel+1)& (0+255),f,b
 11102   011BA4                     
 11103                           ; BSR set to: 5
 11104                           ;main.c: 562:                         if(opSel>3){
 11105   011BA4  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
 11106   011BA6  EFDE  F08D         	goto	u6441
 11107   011BAA  51A8               	movf	(_opSel+1)& (0+255),w,b
 11108   011BAC  E109               	bnz	u6440
 11109   011BAE  0E04               	movlw	4
 11110   011BB0  5DA7               	subwf	_opSel& (0+255),w,b
 11111   011BB2  A0D8               	btfss	status,0,c
 11112   011BB4  EFDE  F08D         	goto	u6441
 11113   011BB8  EFE0  F08D         	goto	u6440
 11114   011BBC                     u6441:
 11115   011BBC  EFE4  F08D         	goto	l6373
 11116   011BC0                     u6440:
 11117   011BC0                     
 11118                           ; BSR set to: 5
 11119                           ;main.c: 563:                             opSel=1;
 11120   011BC0  0E00               	movlw	0
 11121   011BC2  6FA8               	movwf	(_opSel+1)& (0+255),b
 11122   011BC4  0E01               	movlw	1
 11123   011BC6  6FA7               	movwf	_opSel& (0+255),b
 11124   011BC8                     l6373:
 11125                           
 11126                           ;main.c: 566:                     if(PORTDbits.RD1 == 0){
 11127   011BC8  B2D1               	btfsc	209,1,c	;volatile
 11128   011BCA  EFE9  F08D         	goto	u6451
 11129   011BCE  EFEB  F08D         	goto	u6450
 11130   011BD2                     u6451:
 11131   011BD2  EFF6  F08D         	goto	l6379
 11132   011BD6                     u6450:
 11133   011BD6                     l313:
 11134   011BD6  A2D1               	btfss	209,1,c	;volatile
 11135   011BD8  EFF0  F08D         	goto	u6461
 11136   011BDC  EFF2  F08D         	goto	u6460
 11137   011BE0                     u6461:
 11138   011BE0  EFEB  F08D         	goto	l313
 11139   011BE4                     u6460:
 11140   011BE4                     
 11141                           ;main.c: 568:                         opSel--;
 11142   011BE4  0105               	movlb	5	; () banked
 11143   011BE6  07A7               	decf	_opSel& (0+255),f,b
 11144   011BE8  A0D8               	btfss	status,0,c
 11145   011BEA  07A8               	decf	(_opSel+1)& (0+255),f,b
 11146   011BEC                     l6379:
 11147                           
 11148                           ;main.c: 570:                     if(PORTBbits.RB4 == 0){
 11149   011BEC  B8CF               	btfsc	207,4,c	;volatile
 11150   011BEE  EFFB  F08D         	goto	u6471
 11151   011BF2  EFFD  F08D         	goto	u6470
 11152   011BF6                     u6471:
 11153   011BF6  EF04  F08E         	goto	l6385
 11154   011BFA                     u6470:
 11155   011BFA                     
 11156                           ;main.c: 571:                         lcd_clear();
 11157   011BFA  EC44  F0A5         	call	_lcd_clear	;wreg free
 11158   011BFE                     
 11159                           ;main.c: 572:                         menuOp = menu_principal;
 11160   011BFE  0E00               	movlw	0
 11161   011C00  0105               	movlb	5	; () banked
 11162   011C02  6FE0               	movwf	(_menuOp+1)& (0+255),b
 11163   011C04  0E00               	movlw	0
 11164   011C06  6FDF               	movwf	_menuOp& (0+255),b
 11165   011C08                     l6385:
 11166                           
 11167                           ;main.c: 551:         case 3: while(opSel==3 && PORTBbits.RB4==1){
 11168   011C08  0E03               	movlw	3
 11169   011C0A  0105               	movlb	5	; () banked
 11170   011C0C  19A7               	xorwf	_opSel& (0+255),w,b
 11171   011C0E  11A8               	iorwf	(_opSel+1)& (0+255),w,b
 11172   011C10  A4D8               	btfss	status,2,c
 11173   011C12  EF0D  F08E         	goto	u6481
 11174   011C16  EF0F  F08E         	goto	u6480
 11175   011C1A                     u6481:
 11176   011C1A  EF32  F08E         	goto	l295
 11177   011C1E                     u6480:
 11178   011C1E                     
 11179                           ; BSR set to: 5
 11180   011C1E  B8CF               	btfsc	207,4,c	;volatile
 11181   011C20  EF14  F08E         	goto	u6491
 11182   011C24  EF16  F08E         	goto	u6490
 11183   011C28                     u6491:
 11184   011C28  EF94  F08D         	goto	l6357
 11185   011C2C                     u6490:
 11186   011C2C  EF32  F08E         	goto	l295
 11187   011C30                     l6391:
 11188   011C30  C5A7  F511         	movff	_opSel,??_MenuLedCon
 11189   011C34  C5A8  F512         	movff	_opSel+1,??_MenuLedCon+1
 11190                           
 11191                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11192                           ; Switch size 1, requested type "simple"
 11193                           ; Number of cases is 1, Range of values is 0 to 0
 11194                           ; switch strategies available:
 11195                           ; Name         Instructions Cycles
 11196                           ; simple_byte            4     3 (average)
 11197                           ;	Chosen strategy is simple_byte
 11198   011C38  5012               	movf	(??_MenuLedCon+1)^(0+1280),w,c
 11199   011C3A  0A00               	xorlw	0	; case 0
 11200   011C3C  B4D8               	btfsc	status,2,c
 11201   011C3E  EF23  F08E         	goto	l7521
 11202   011C42  EF32  F08E         	goto	l295
 11203   011C46                     l7521:
 11204                           
 11205                           ; Switch size 1, requested type "simple"
 11206                           ; Number of cases is 3, Range of values is 1 to 3
 11207                           ; switch strategies available:
 11208                           ; Name         Instructions Cycles
 11209                           ; simple_byte           10     6 (average)
 11210                           ;	Chosen strategy is simple_byte
 11211   011C46  5011               	movf	??_MenuLedCon^(0+1280),w,c
 11212   011C48  0A01               	xorlw	1	; case 1
 11213   011C4A  B4D8               	btfsc	status,2,c
 11214   011C4C  EF2C  F08D         	goto	l6309
 11215   011C50  0A03               	xorlw	3	; case 2
 11216   011C52  B4D8               	btfsc	status,2,c
 11217   011C54  EF3F  F08D         	goto	l6313
 11218   011C58  0A01               	xorlw	1	; case 3
 11219   011C5A  B4D8               	btfsc	status,2,c
 11220   011C5C  EF04  F08E         	goto	l6385
 11221   011C60  EF32  F08E         	goto	l295
 11222   011C64                     l295:
 11223                           
 11224                           ;main.c: 578:     if(PORTBbits.RB4 == 0){
 11225   011C64  B8CF               	btfsc	207,4,c	;volatile
 11226   011C66  EF37  F08E         	goto	u6501
 11227   011C6A  EF39  F08E         	goto	u6500
 11228   011C6E                     u6501:
 11229   011C6E  EF52  F08E         	goto	l324
 11230   011C72                     u6500:
 11231   011C72                     
 11232                           ;main.c: 579:         lcd_clear();
 11233   011C72  EC44  F0A5         	call	_lcd_clear	;wreg free
 11234   011C76  C5A7  F511         	movff	_opSel,??_MenuLedCon
 11235   011C7A  C5A8  F512         	movff	_opSel+1,??_MenuLedCon+1
 11236                           
 11237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11238                           ; Switch size 1, requested type "simple"
 11239                           ; Number of cases is 1, Range of values is 0 to 0
 11240                           ; switch strategies available:
 11241                           ; Name         Instructions Cycles
 11242                           ; simple_byte            4     3 (average)
 11243                           ;	Chosen strategy is simple_byte
 11244   011C7E  5012               	movf	(??_MenuLedCon+1)^(0+1280),w,c
 11245   011C80  0A00               	xorlw	0	; case 0
 11246   011C82  B4D8               	btfsc	status,2,c
 11247   011C84  EF46  F08E         	goto	l7523
 11248   011C88  EF4D  F08E         	goto	l6399
 11249   011C8C                     l7523:
 11250                           
 11251                           ; Switch size 1, requested type "simple"
 11252                           ; Number of cases is 1, Range of values is 2 to 2
 11253                           ; switch strategies available:
 11254                           ; Name         Instructions Cycles
 11255                           ; simple_byte            4     3 (average)
 11256                           ;	Chosen strategy is simple_byte
 11257   011C8C  5011               	movf	??_MenuLedCon^(0+1280),w,c
 11258   011C8E  0A02               	xorlw	2	; case 2
 11259   011C90  B4D8               	btfsc	status,2,c
 11260   011C92  EF4D  F08E         	goto	l6399
 11261   011C96  EF4D  F08E         	goto	l6399
 11262   011C9A                     l6399:
 11263                           
 11264                           ;main.c: 583:         opSel = 1;
 11265   011C9A  0E00               	movlw	0
 11266   011C9C  0105               	movlb	5	; () banked
 11267   011C9E  6FA8               	movwf	(_opSel+1)& (0+255),b
 11268   011CA0  0E01               	movlw	1
 11269   011CA2  6FA7               	movwf	_opSel& (0+255),b
 11270   011CA4                     l324:
 11271   011CA4  0012               	return		;funcret
 11272   011CA6                     __end_of_MenuLedCon:
 11273                           	callstack 0
 11274                           
 11275 ;; *************** function _Sec3Est *****************
 11276 ;; Defined at:
 11277 ;;		line 621 in file "main.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;		None
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;		None
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  1    wreg      void 
 11284 ;; Registers used:
 11285 ;;		wreg, status,2, status,0, cstack
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11295 ;;Total ram usage:        2 bytes
 11296 ;; Hardware stack levels used: 1
 11297 ;; Hardware stack levels required when called: 5
 11298 ;; This function calls:
 11299 ;;		_lcd_char
 11300 ;; This function is called by:
 11301 ;;		_MenuLedCon
 11302 ;; This function uses a non-reentrant model
 11303 ;;
 11304                           
 11305                           	psect	text40
 11306   01430E                     __ptext40:
 11307                           	callstack 0
 11308   01430E                     _Sec3Est:
 11309                           	callstack 120
 11310   01430E                     
 11311                           ;main.c: 622:     if(PORTBbits.RB4==0){
 11312   01430E  B8CF               	btfsc	207,4,c	;volatile
 11313   014310  EF8C  F0A1         	goto	u5701
 11314   014314  EF8E  F0A1         	goto	u5700
 11315   014318                     u5701:
 11316   014318  EF9A  F0A1         	goto	l343
 11317   01431C                     u5700:
 11318   01431C                     l344:
 11319   01431C  A8CF               	btfss	207,4,c	;volatile
 11320   01431E  EF93  F0A1         	goto	u5711
 11321   014322  EF95  F0A1         	goto	u5710
 11322   014326                     u5711:
 11323   014326  EF8E  F0A1         	goto	l344
 11324   01432A                     u5710:
 11325   01432A                     
 11326                           ;main.c: 624:         state=0;
 11327   01432A  0E00               	movlw	0
 11328   01432C  0105               	movlb	5	; () banked
 11329   01432E  6FE5               	movwf	_state& (0+255),b
 11330                           
 11331                           ;main.c: 625:         LATA=0;
 11332   014330  0E00               	movlw	0
 11333   014332  6EBE               	movwf	190,c	;volatile
 11334   014334                     l343:
 11335                           
 11336                           ;main.c: 627:     if(state==0){
 11337   014334  0105               	movlb	5	; () banked
 11338   014336  51E5               	movf	_state& (0+255),w,b
 11339   014338  A4D8               	btfss	status,2,c
 11340   01433A  EFA1  F0A1         	goto	u5721
 11341   01433E  EFA3  F0A1         	goto	u5720
 11342   014342                     u5721:
 11343   014342  EFA5  F0A1         	goto	l5813
 11344   014346                     u5720:
 11345   014346                     
 11346                           ; BSR set to: 5
 11347                           ;main.c: 628:         LATA=0;
 11348   014346  0E00               	movlw	0
 11349   014348  6EBE               	movwf	190,c	;volatile
 11350   01434A                     l5813:
 11351                           
 11352                           ; BSR set to: 5
 11353                           ;main.c: 630:     lcd_char(2,11,' ');
 11354   01434A  0E0B               	movlw	11
 11355   01434C  6E0C               	movwf	lcd_char@col^(0+1280),c
 11356   01434E  0E20               	movlw	32
 11357   014350  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11358   014352  0E02               	movlw	2
 11359   014354  EC63  F0A5         	call	_lcd_char
 11360   014358                     
 11361                           ;main.c: 631:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 11362   014358  0E09               	movlw	9
 11363   01435A  6E10               	movwf	(??_Sec3Est+1)^(0+1280),c
 11364   01435C  0E1E               	movlw	30
 11365   01435E  6E0F               	movwf	??_Sec3Est^(0+1280),c
 11366   014360  0EE4               	movlw	228
 11367   014362                     u7207:
 11368   014362  2EE8               	decfsz	wreg,f,c
 11369   014364  D7FE               	bra	u7207
 11370   014366  2E0F               	decfsz	??_Sec3Est^(0+1280),f,c
 11371   014368  D7FC               	bra	u7207
 11372   01436A  2E10               	decfsz	(??_Sec3Est+1)^(0+1280),f,c
 11373   01436C  D7FA               	bra	u7207
 11374   01436E  D000               	nop2	
 11375   014370                     
 11376                           ;main.c: 632:     lcd_char(2,11,'<');
 11377   014370  0E0B               	movlw	11
 11378   014372  6E0C               	movwf	lcd_char@col^(0+1280),c
 11379   014374  0E3C               	movlw	60
 11380   014376  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11381   014378  0E02               	movlw	2
 11382   01437A  EC63  F0A5         	call	_lcd_char
 11383   01437E                     
 11384                           ;main.c: 633:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 11385   01437E  0E09               	movlw	9
 11386   014380  6E10               	movwf	(??_Sec3Est+1)^(0+1280),c
 11387   014382  0E1E               	movlw	30
 11388   014384  6E0F               	movwf	??_Sec3Est^(0+1280),c
 11389   014386  0EE4               	movlw	228
 11390   014388                     u7217:
 11391   014388  2EE8               	decfsz	wreg,f,c
 11392   01438A  D7FE               	bra	u7217
 11393   01438C  2E0F               	decfsz	??_Sec3Est^(0+1280),f,c
 11394   01438E  D7FC               	bra	u7217
 11395   014390  2E10               	decfsz	(??_Sec3Est+1)^(0+1280),f,c
 11396   014392  D7FA               	bra	u7217
 11397   014394  D000               	nop2	
 11398   014396  0012               	return		;funcret
 11399   014398                     __end_of_Sec3Est:
 11400                           	callstack 0
 11401                           
 11402 ;; *************** function _MenuLed *****************
 11403 ;; Defined at:
 11404 ;;		line 351 in file "main.c"
 11405 ;; Parameters:    Size  Location     Type
 11406 ;;		None
 11407 ;; Auto vars:     Size  Location     Type
 11408 ;;		None
 11409 ;; Return value:  Size  Location     Type
 11410 ;;                  1    wreg      void 
 11411 ;; Registers used:
 11412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11413 ;; Tracked objects:
 11414 ;;		On entry : 0/0
 11415 ;;		On exit  : 0/0
 11416 ;;		Unchanged: 0/0
 11417 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 11418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11422 ;;Total ram usage:        2 bytes
 11423 ;; Hardware stack levels used: 1
 11424 ;; Hardware stack levels required when called: 6
 11425 ;; This function calls:
 11426 ;;		_Sec1Est
 11427 ;;		_Sec2Est
 11428 ;;		_lcd_char
 11429 ;;		_lcd_clear
 11430 ;;		_lcd_out
 11431 ;; This function is called by:
 11432 ;;		_main
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           	psect	text41
 11437   012040                     __ptext41:
 11438                           	callstack 0
 11439   012040                     _MenuLed:
 11440                           	callstack 120
 11441   012040                     
 11442                           ;main.c: 352:     lcd_out(1,1," MENU SECUENCIA ");
 11443   012040  0E01               	movlw	1
 11444   012042  6E0C               	movwf	lcd_out@col^(0+1280),c
 11445   012044  0E3B               	movlw	low STR_5
 11446   012046  6E0D               	movwf	lcd_out@str^(0+1280),c
 11447   012048  0EFF               	movlw	high STR_5
 11448   01204A  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
 11449   01204C  0E01               	movlw	1
 11450   01204E  EC3E  F0A2         	call	_lcd_out
 11451                           
 11452                           ;main.c: 353:     lcd_out(2,1,"1.S1  2.S2    ->");
 11453   012052  0E01               	movlw	1
 11454   012054  6E0C               	movwf	lcd_out@col^(0+1280),c
 11455   012056  0E7F               	movlw	low STR_6
 11456   012058  6E0D               	movwf	lcd_out@str^(0+1280),c
 11457   01205A  0EFF               	movlw	high STR_6
 11458   01205C  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
 11459   01205E  0E02               	movlw	2
 11460   012060  EC3E  F0A2         	call	_lcd_out
 11461   012064                     
 11462                           ;main.c: 355:     if(PORTDbits.RD0 == 0){
 11463   012064  B0D1               	btfsc	209,0,c	;volatile
 11464   012066  EF37  F090         	goto	u6061
 11465   01206A  EF39  F090         	goto	u6060
 11466   01206E                     u6061:
 11467   01206E  EF43  F090         	goto	l6113
 11468   012072                     u6060:
 11469   012072                     l219:
 11470   012072  A0D1               	btfss	209,0,c	;volatile
 11471   012074  EF3E  F090         	goto	u6071
 11472   012078  EF40  F090         	goto	u6070
 11473   01207C                     u6071:
 11474   01207C  EF39  F090         	goto	l219
 11475   012080                     u6070:
 11476   012080                     
 11477                           ;main.c: 357:         opSel++;
 11478   012080  0105               	movlb	5	; () banked
 11479   012082  4BA7               	infsnz	_opSel& (0+255),f,b
 11480   012084  2BA8               	incf	(_opSel+1)& (0+255),f,b
 11481   012086                     l6113:
 11482                           
 11483                           ;main.c: 360:     if(PORTDbits.RD1 == 0){
 11484   012086  B2D1               	btfsc	209,1,c	;volatile
 11485   012088  EF48  F090         	goto	u6081
 11486   01208C  EF4A  F090         	goto	u6080
 11487   012090                     u6081:
 11488   012090  EFA4  F091         	goto	l6235
 11489   012094                     u6080:
 11490   012094                     l223:
 11491   012094  A2D1               	btfss	209,1,c	;volatile
 11492   012096  EF4F  F090         	goto	u6091
 11493   01209A  EF51  F090         	goto	u6090
 11494   01209E                     u6091:
 11495   01209E  EF4A  F090         	goto	l223
 11496   0120A2                     u6090:
 11497   0120A2                     
 11498                           ;main.c: 362:         opSel--;
 11499   0120A2  0105               	movlb	5	; () banked
 11500   0120A4  07A7               	decf	_opSel& (0+255),f,b
 11501   0120A6  A0D8               	btfss	status,0,c
 11502   0120A8  07A8               	decf	(_opSel+1)& (0+255),f,b
 11503   0120AA                     
 11504                           ; BSR set to: 5
 11505                           ;main.c: 363:         if(opSel<1){
 11506   0120AA  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
 11507   0120AC  EF62  F090         	goto	u6100
 11508   0120B0  51A8               	movf	(_opSel+1)& (0+255),w,b
 11509   0120B2  E106               	bnz	u6101
 11510   0120B4  05A7               	decf	_opSel& (0+255),w,b
 11511   0120B6  B0D8               	btfsc	status,0,c
 11512   0120B8  EF60  F090         	goto	u6101
 11513   0120BC  EF62  F090         	goto	u6100
 11514   0120C0                     u6101:
 11515   0120C0  EFA4  F091         	goto	l6235
 11516   0120C4                     u6100:
 11517   0120C4                     
 11518                           ; BSR set to: 5
 11519                           ;main.c: 364:             opSel=3;
 11520   0120C4  0E00               	movlw	0
 11521   0120C6  6FA8               	movwf	(_opSel+1)& (0+255),b
 11522   0120C8  0E03               	movlw	3
 11523   0120CA  6FA7               	movwf	_opSel& (0+255),b
 11524   0120CC  EFA4  F091         	goto	l6235
 11525   0120D0                     l6123:
 11526   0120D0  0E05               	movlw	5
 11527   0120D2  6E0C               	movwf	lcd_char@col^(0+1280),c
 11528   0120D4  0E3C               	movlw	60
 11529   0120D6  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11530   0120D8  0E02               	movlw	2
 11531   0120DA  EC63  F0A5         	call	_lcd_char
 11532                           
 11533                           ;main.c: 370:                 lcd_char(2,11,' ');
 11534   0120DE  0E0B               	movlw	11
 11535   0120E0  6E0C               	movwf	lcd_char@col^(0+1280),c
 11536   0120E2  0E20               	movlw	32
 11537   0120E4  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11538   0120E6  0E02               	movlw	2
 11539   0120E8  EC63  F0A5         	call	_lcd_char
 11540   0120EC                     
 11541                           ;main.c: 371:                 if(PORTBbits.RB4==0){
 11542   0120EC  B8CF               	btfsc	207,4,c	;volatile
 11543   0120EE  EF7B  F090         	goto	u6111
 11544   0120F2  EF7D  F090         	goto	u6110
 11545   0120F6                     u6111:
 11546   0120F6  EFBE  F091         	goto	l236
 11547   0120FA                     u6110:
 11548   0120FA                     l230:
 11549   0120FA  A8CF               	btfss	207,4,c	;volatile
 11550   0120FC  EF82  F090         	goto	u6121
 11551   012100  EF84  F090         	goto	u6120
 11552   012104                     u6121:
 11553   012104  EF7D  F090         	goto	l230
 11554   012108                     u6120:
 11555   012108                     
 11556                           ;main.c: 373:                     state = 1;
 11557   012108  0E01               	movlw	1
 11558   01210A  0105               	movlb	5	; () banked
 11559   01210C  6FE5               	movwf	_state& (0+255),b
 11560                           
 11561                           ;main.c: 374:                     while(state==1){
 11562   01210E  EFAC  F090         	goto	l6157
 11563   012112                     l6131:
 11564                           
 11565                           ; BSR set to: 5
 11566                           ;main.c: 375:                     LATA = 0b00000000;
 11567   012112  0E00               	movlw	0
 11568   012114  6EBE               	movwf	190,c	;volatile
 11569   012116                     
 11570                           ; BSR set to: 5
 11571                           ;main.c: 376:                     Sec1Est();
 11572   012116  ECED  F0A0         	call	_Sec1Est	;wreg free
 11573   01211A                     
 11574                           ;main.c: 377:                     LATA = 0b10000001;
 11575   01211A  0E81               	movlw	129
 11576   01211C  6EBE               	movwf	190,c	;volatile
 11577                           
 11578                           ;main.c: 378:                     Sec1Est();
 11579   01211E  ECED  F0A0         	call	_Sec1Est	;wreg free
 11580   012122                     
 11581                           ;main.c: 379:                     LATA = 0b11000011;
 11582   012122  0EC3               	movlw	195
 11583   012124  6EBE               	movwf	190,c	;volatile
 11584   012126                     
 11585                           ;main.c: 380:                     Sec1Est();
 11586   012126  ECED  F0A0         	call	_Sec1Est	;wreg free
 11587                           
 11588                           ;main.c: 381:                     LATA = 0b11100111;
 11589   01212A  0EE7               	movlw	231
 11590   01212C  6EBE               	movwf	190,c	;volatile
 11591   01212E                     
 11592                           ;main.c: 382:                     Sec1Est();
 11593   01212E  ECED  F0A0         	call	_Sec1Est	;wreg free
 11594   012132                     
 11595                           ;main.c: 383:                     LATA = 0b111111111;
 11596   012132  68BE               	setf	190,c	;volatile
 11597   012134                     
 11598                           ;main.c: 384:                     Sec1Est();
 11599   012134  ECED  F0A0         	call	_Sec1Est	;wreg free
 11600                           
 11601                           ;main.c: 385:                     LATA = 0b11100111;
 11602   012138  0EE7               	movlw	231
 11603   01213A  6EBE               	movwf	190,c	;volatile
 11604   01213C                     
 11605                           ;main.c: 386:                     Sec1Est();
 11606   01213C  ECED  F0A0         	call	_Sec1Est	;wreg free
 11607   012140                     
 11608                           ;main.c: 387:                     LATA = 0b11000011;
 11609   012140  0EC3               	movlw	195
 11610   012142  6EBE               	movwf	190,c	;volatile
 11611                           
 11612                           ;main.c: 388:                     Sec1Est();
 11613   012144  ECED  F0A0         	call	_Sec1Est	;wreg free
 11614   012148                     
 11615                           ;main.c: 389:                     LATA = 0b100000001;
 11616   012148  0E01               	movlw	1
 11617   01214A  6EBE               	movwf	190,c	;volatile
 11618   01214C                     
 11619                           ;main.c: 390:                     Sec1Est();
 11620   01214C  ECED  F0A0         	call	_Sec1Est	;wreg free
 11621                           
 11622                           ;main.c: 391:                     LATA = 0b00000000;
 11623   012150  0E00               	movlw	0
 11624   012152  6EBE               	movwf	190,c	;volatile
 11625   012154                     
 11626                           ;main.c: 392:                     Sec1Est();
 11627   012154  ECED  F0A0         	call	_Sec1Est	;wreg free
 11628   012158                     l6157:
 11629                           
 11630                           ;main.c: 374:                     while(state==1){
 11631   012158  0105               	movlb	5	; () banked
 11632   01215A  05E5               	decf	_state& (0+255),w,b
 11633   01215C  B4D8               	btfsc	status,2,c
 11634   01215E  EFB3  F090         	goto	u6131
 11635   012162  EFB5  F090         	goto	u6130
 11636   012166                     u6131:
 11637   012166  EF89  F090         	goto	l6131
 11638   01216A                     u6130:
 11639   01216A  EFBE  F091         	goto	l236
 11640   01216E                     l6159:
 11641   01216E  0E05               	movlw	5
 11642   012170  6E0C               	movwf	lcd_char@col^(0+1280),c
 11643   012172  0E20               	movlw	32
 11644   012174  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11645   012176  0E02               	movlw	2
 11646   012178  EC63  F0A5         	call	_lcd_char
 11647                           
 11648                           ;main.c: 399:                 lcd_char(2,11,'<');
 11649   01217C  0E0B               	movlw	11
 11650   01217E  6E0C               	movwf	lcd_char@col^(0+1280),c
 11651   012180  0E3C               	movlw	60
 11652   012182  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11653   012184  0E02               	movlw	2
 11654   012186  EC63  F0A5         	call	_lcd_char
 11655   01218A                     
 11656                           ;main.c: 400:                 if(PORTBbits.RB4==0){
 11657   01218A  B8CF               	btfsc	207,4,c	;volatile
 11658   01218C  EFCA  F090         	goto	u6141
 11659   012190  EFCC  F090         	goto	u6140
 11660   012194                     u6141:
 11661   012194  EFBE  F091         	goto	l236
 11662   012198                     u6140:
 11663   012198                     l239:
 11664   012198  A8CF               	btfss	207,4,c	;volatile
 11665   01219A  EFD1  F090         	goto	u6151
 11666   01219E  EFD3  F090         	goto	u6150
 11667   0121A2                     u6151:
 11668   0121A2  EFCC  F090         	goto	l239
 11669   0121A6                     u6150:
 11670   0121A6                     
 11671                           ;main.c: 402:                     state = 1;
 11672   0121A6  0E01               	movlw	1
 11673   0121A8  0105               	movlb	5	; () banked
 11674   0121AA  6FE5               	movwf	_state& (0+255),b
 11675                           
 11676                           ;main.c: 403:                     while(state==1){
 11677   0121AC  EF00  F091         	goto	l6195
 11678   0121B0                     l6167:
 11679                           
 11680                           ; BSR set to: 5
 11681                           ;main.c: 404:                     LATA = 0b10101010;
 11682   0121B0  0EAA               	movlw	170
 11683   0121B2  6EBE               	movwf	190,c	;volatile
 11684   0121B4                     
 11685                           ; BSR set to: 5
 11686                           ;main.c: 405:                     Sec2Est();
 11687   0121B4  EC9A  F0A0         	call	_Sec2Est	;wreg free
 11688   0121B8                     
 11689                           ;main.c: 406:                     LATA = ~0b10101010;
 11690   0121B8  0E55               	movlw	85
 11691   0121BA  6EBE               	movwf	190,c	;volatile
 11692                           
 11693                           ;main.c: 407:                     Sec2Est();
 11694   0121BC  EC9A  F0A0         	call	_Sec2Est	;wreg free
 11695   0121C0                     
 11696                           ;main.c: 408:                     LATA = 0b10101010;
 11697   0121C0  0EAA               	movlw	170
 11698   0121C2  6EBE               	movwf	190,c	;volatile
 11699   0121C4                     
 11700                           ;main.c: 409:                     Sec2Est();
 11701   0121C4  EC9A  F0A0         	call	_Sec2Est	;wreg free
 11702                           
 11703                           ;main.c: 410:                     LATA = ~0b10101010;
 11704   0121C8  0E55               	movlw	85
 11705   0121CA  6EBE               	movwf	190,c	;volatile
 11706   0121CC                     
 11707                           ;main.c: 411:                     Sec2Est();
 11708   0121CC  EC9A  F0A0         	call	_Sec2Est	;wreg free
 11709   0121D0                     
 11710                           ;main.c: 412:                     LATA = 0b10101010;
 11711   0121D0  0EAA               	movlw	170
 11712   0121D2  6EBE               	movwf	190,c	;volatile
 11713                           
 11714                           ;main.c: 413:                     Sec2Est();
 11715   0121D4  EC9A  F0A0         	call	_Sec2Est	;wreg free
 11716   0121D8                     
 11717                           ;main.c: 414:                     LATA = ~0b10101010;
 11718   0121D8  0E55               	movlw	85
 11719   0121DA  6EBE               	movwf	190,c	;volatile
 11720   0121DC                     
 11721                           ;main.c: 415:                     Sec2Est();
 11722   0121DC  EC9A  F0A0         	call	_Sec2Est	;wreg free
 11723                           
 11724                           ;main.c: 416:                     LATA = 0b10101010;
 11725   0121E0  0EAA               	movlw	170
 11726   0121E2  6EBE               	movwf	190,c	;volatile
 11727   0121E4                     
 11728                           ;main.c: 417:                     Sec2Est();
 11729   0121E4  EC9A  F0A0         	call	_Sec2Est	;wreg free
 11730   0121E8                     
 11731                           ;main.c: 418:                     LATA = ~0b10101010;
 11732   0121E8  0E55               	movlw	85
 11733   0121EA  6EBE               	movwf	190,c	;volatile
 11734                           
 11735                           ;main.c: 419:                     Sec2Est();
 11736   0121EC  EC9A  F0A0         	call	_Sec2Est	;wreg free
 11737   0121F0                     
 11738                           ;main.c: 420:                     LATA = 0b10101010;
 11739   0121F0  0EAA               	movlw	170
 11740   0121F2  6EBE               	movwf	190,c	;volatile
 11741   0121F4                     
 11742                           ;main.c: 421:                     Sec2Est();
 11743   0121F4  EC9A  F0A0         	call	_Sec2Est	;wreg free
 11744                           
 11745                           ;main.c: 422:                     LATA = ~0b10101010;
 11746   0121F8  0E55               	movlw	85
 11747   0121FA  6EBE               	movwf	190,c	;volatile
 11748   0121FC                     
 11749                           ;main.c: 423:                     Sec2Est();
 11750   0121FC  EC9A  F0A0         	call	_Sec2Est	;wreg free
 11751   012200                     l6195:
 11752                           
 11753                           ;main.c: 403:                     while(state==1){
 11754   012200  0105               	movlb	5	; () banked
 11755   012202  05E5               	decf	_state& (0+255),w,b
 11756   012204  B4D8               	btfsc	status,2,c
 11757   012206  EF07  F091         	goto	u6161
 11758   01220A  EF09  F091         	goto	u6160
 11759   01220E                     u6161:
 11760   01220E  EFD8  F090         	goto	l6167
 11761   012212                     u6160:
 11762   012212  EFBE  F091         	goto	l236
 11763   012216                     l6197:
 11764                           
 11765                           ; BSR set to: 5
 11766                           ;main.c: 428:                 lcd_char(2,5,' ');
 11767   012216  0E05               	movlw	5
 11768   012218  6E0C               	movwf	lcd_char@col^(0+1280),c
 11769   01221A  0E20               	movlw	32
 11770   01221C  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11771   01221E  0E02               	movlw	2
 11772   012220  EC63  F0A5         	call	_lcd_char
 11773                           
 11774                           ;main.c: 429:                 lcd_char(2,11,' ');
 11775   012224  0E0B               	movlw	11
 11776   012226  6E0C               	movwf	lcd_char@col^(0+1280),c
 11777   012228  0E20               	movlw	32
 11778   01222A  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11779   01222C  0E02               	movlw	2
 11780   01222E  EC63  F0A5         	call	_lcd_char
 11781                           
 11782                           ;main.c: 431:                 lcd_char(2,15,' ');
 11783   012232  0E0F               	movlw	15
 11784   012234  6E0C               	movwf	lcd_char@col^(0+1280),c
 11785   012236  0E20               	movlw	32
 11786   012238  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11787   01223A  0E02               	movlw	2
 11788   01223C  EC63  F0A5         	call	_lcd_char
 11789                           
 11790                           ;main.c: 432:                 lcd_char(2,16,' ');
 11791   012240  0E10               	movlw	16
 11792   012242  6E0C               	movwf	lcd_char@col^(0+1280),c
 11793   012244  0E20               	movlw	32
 11794   012246  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11795   012248  0E02               	movlw	2
 11796   01224A  EC63  F0A5         	call	_lcd_char
 11797   01224E                     
 11798                           ;main.c: 433:                 _delay((unsigned long)((100)*(64000000UL/4000.0)));
 11799   01224E  0E09               	movlw	9
 11800   012250  6E12               	movwf	(??_MenuLed+1)^(0+1280),c
 11801   012252  0E1E               	movlw	30
 11802   012254  6E11               	movwf	??_MenuLed^(0+1280),c
 11803   012256  0EE4               	movlw	228
 11804   012258                     u7227:
 11805   012258  2EE8               	decfsz	wreg,f,c
 11806   01225A  D7FE               	bra	u7227
 11807   01225C  2E11               	decfsz	??_MenuLed^(0+1280),f,c
 11808   01225E  D7FC               	bra	u7227
 11809   012260  2E12               	decfsz	(??_MenuLed+1)^(0+1280),f,c
 11810   012262  D7FA               	bra	u7227
 11811   012264  D000               	nop2	
 11812   012266                     
 11813                           ;main.c: 434:                 lcd_char(2,15,'-');
 11814   012266  0E0F               	movlw	15
 11815   012268  6E0C               	movwf	lcd_char@col^(0+1280),c
 11816   01226A  0E2D               	movlw	45
 11817   01226C  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11818   01226E  0E02               	movlw	2
 11819   012270  EC63  F0A5         	call	_lcd_char
 11820   012274                     
 11821                           ;main.c: 435:                 lcd_char(2,16,'>');
 11822   012274  0E10               	movlw	16
 11823   012276  6E0C               	movwf	lcd_char@col^(0+1280),c
 11824   012278  0E3E               	movlw	62
 11825   01227A  6E0D               	movwf	lcd_char@letra^(0+1280),c
 11826   01227C  0E02               	movlw	2
 11827   01227E  EC63  F0A5         	call	_lcd_char
 11828   012282                     
 11829                           ;main.c: 436:                 _delay((unsigned long)((100)*(64000000UL/4000.0)));
 11830   012282  0E09               	movlw	9
 11831   012284  6E12               	movwf	(??_MenuLed+1)^(0+1280),c
 11832   012286  0E1E               	movlw	30
 11833   012288  6E11               	movwf	??_MenuLed^(0+1280),c
 11834   01228A  0EE4               	movlw	228
 11835   01228C                     u7237:
 11836   01228C  2EE8               	decfsz	wreg,f,c
 11837   01228E  D7FE               	bra	u7237
 11838   012290  2E11               	decfsz	??_MenuLed^(0+1280),f,c
 11839   012292  D7FC               	bra	u7237
 11840   012294  2E12               	decfsz	(??_MenuLed+1)^(0+1280),f,c
 11841   012296  D7FA               	bra	u7237
 11842   012298  D000               	nop2	
 11843   01229A                     
 11844                           ;main.c: 438:                     if(PORTDbits.RD0 == 0){
 11845   01229A  B0D1               	btfsc	209,0,c	;volatile
 11846   01229C  EF52  F091         	goto	u6171
 11847   0122A0  EF54  F091         	goto	u6170
 11848   0122A4                     u6171:
 11849   0122A4  EF70  F091         	goto	l6217
 11850   0122A8                     u6170:
 11851   0122A8                     l249:
 11852   0122A8  A0D1               	btfss	209,0,c	;volatile
 11853   0122AA  EF59  F091         	goto	u6181
 11854   0122AE  EF5B  F091         	goto	u6180
 11855   0122B2                     u6181:
 11856   0122B2  EF54  F091         	goto	l249
 11857   0122B6                     u6180:
 11858   0122B6                     
 11859                           ;main.c: 440:                         opSel++;
 11860   0122B6  0105               	movlb	5	; () banked
 11861   0122B8  4BA7               	infsnz	_opSel& (0+255),f,b
 11862   0122BA  2BA8               	incf	(_opSel+1)& (0+255),f,b
 11863   0122BC                     
 11864                           ; BSR set to: 5
 11865                           ;main.c: 441:                         if(opSel>3){
 11866   0122BC  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
 11867   0122BE  EF6A  F091         	goto	u6191
 11868   0122C2  51A8               	movf	(_opSel+1)& (0+255),w,b
 11869   0122C4  E109               	bnz	u6190
 11870   0122C6  0E04               	movlw	4
 11871   0122C8  5DA7               	subwf	_opSel& (0+255),w,b
 11872   0122CA  A0D8               	btfss	status,0,c
 11873   0122CC  EF6A  F091         	goto	u6191
 11874   0122D0  EF6C  F091         	goto	u6190
 11875   0122D4                     u6191:
 11876   0122D4  EF70  F091         	goto	l6217
 11877   0122D8                     u6190:
 11878   0122D8                     
 11879                           ; BSR set to: 5
 11880                           ;main.c: 442:                             opSel=1;
 11881   0122D8  0E00               	movlw	0
 11882   0122DA  6FA8               	movwf	(_opSel+1)& (0+255),b
 11883   0122DC  0E01               	movlw	1
 11884   0122DE  6FA7               	movwf	_opSel& (0+255),b
 11885   0122E0                     l6217:
 11886                           
 11887                           ;main.c: 445:                     if(PORTDbits.RD1 == 0){
 11888   0122E0  B2D1               	btfsc	209,1,c	;volatile
 11889   0122E2  EF75  F091         	goto	u6201
 11890   0122E6  EF77  F091         	goto	u6200
 11891   0122EA                     u6201:
 11892   0122EA  EF82  F091         	goto	l6223
 11893   0122EE                     u6200:
 11894   0122EE                     l254:
 11895   0122EE  A2D1               	btfss	209,1,c	;volatile
 11896   0122F0  EF7C  F091         	goto	u6211
 11897   0122F4  EF7E  F091         	goto	u6210
 11898   0122F8                     u6211:
 11899   0122F8  EF77  F091         	goto	l254
 11900   0122FC                     u6210:
 11901   0122FC                     
 11902                           ;main.c: 447:                         opSel--;
 11903   0122FC  0105               	movlb	5	; () banked
 11904   0122FE  07A7               	decf	_opSel& (0+255),f,b
 11905   012300  A0D8               	btfss	status,0,c
 11906   012302  07A8               	decf	(_opSel+1)& (0+255),f,b
 11907   012304                     l6223:
 11908                           
 11909                           ;main.c: 449:                     if(PORTBbits.RB4 == 0){
 11910   012304  B8CF               	btfsc	207,4,c	;volatile
 11911   012306  EF87  F091         	goto	u6221
 11912   01230A  EF89  F091         	goto	u6220
 11913   01230E                     u6221:
 11914   01230E  EF90  F091         	goto	l6229
 11915   012312                     u6220:
 11916   012312                     
 11917                           ;main.c: 450:                         lcd_clear();
 11918   012312  EC44  F0A5         	call	_lcd_clear	;wreg free
 11919   012316                     
 11920                           ;main.c: 451:                         menuOp = menu_ledcon;
 11921   012316  0E00               	movlw	0
 11922   012318  0105               	movlb	5	; () banked
 11923   01231A  6FE0               	movwf	(_menuOp+1)& (0+255),b
 11924   01231C  0E03               	movlw	3
 11925   01231E  6FDF               	movwf	_menuOp& (0+255),b
 11926   012320                     l6229:
 11927                           
 11928                           ;main.c: 427:         case 3: while(opSel==3 && PORTBbits.RB4==1){
 11929   012320  0E03               	movlw	3
 11930   012322  0105               	movlb	5	; () banked
 11931   012324  19A7               	xorwf	_opSel& (0+255),w,b
 11932   012326  11A8               	iorwf	(_opSel+1)& (0+255),w,b
 11933   012328  A4D8               	btfss	status,2,c
 11934   01232A  EF99  F091         	goto	u6231
 11935   01232E  EF9B  F091         	goto	u6230
 11936   012332                     u6231:
 11937   012332  EFBE  F091         	goto	l236
 11938   012336                     u6230:
 11939   012336                     
 11940                           ; BSR set to: 5
 11941   012336  B8CF               	btfsc	207,4,c	;volatile
 11942   012338  EFA0  F091         	goto	u6241
 11943   01233C  EFA2  F091         	goto	u6240
 11944   012340                     u6241:
 11945   012340  EF0B  F091         	goto	l6197
 11946   012344                     u6240:
 11947   012344  EFBE  F091         	goto	l236
 11948   012348                     l6235:
 11949   012348  C5A7  F511         	movff	_opSel,??_MenuLed
 11950   01234C  C5A8  F512         	movff	_opSel+1,??_MenuLed+1
 11951                           
 11952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11953                           ; Switch size 1, requested type "simple"
 11954                           ; Number of cases is 1, Range of values is 0 to 0
 11955                           ; switch strategies available:
 11956                           ; Name         Instructions Cycles
 11957                           ; simple_byte            4     3 (average)
 11958                           ;	Chosen strategy is simple_byte
 11959   012350  5012               	movf	(??_MenuLed+1)^(0+1280),w,c
 11960   012352  0A00               	xorlw	0	; case 0
 11961   012354  B4D8               	btfsc	status,2,c
 11962   012356  EFAF  F091         	goto	l7525
 11963   01235A  EFBE  F091         	goto	l236
 11964   01235E                     l7525:
 11965                           
 11966                           ; Switch size 1, requested type "simple"
 11967                           ; Number of cases is 3, Range of values is 1 to 3
 11968                           ; switch strategies available:
 11969                           ; Name         Instructions Cycles
 11970                           ; simple_byte           10     6 (average)
 11971                           ;	Chosen strategy is simple_byte
 11972   01235E  5011               	movf	??_MenuLed^(0+1280),w,c
 11973   012360  0A01               	xorlw	1	; case 1
 11974   012362  B4D8               	btfsc	status,2,c
 11975   012364  EF68  F090         	goto	l6123
 11976   012368  0A03               	xorlw	3	; case 2
 11977   01236A  B4D8               	btfsc	status,2,c
 11978   01236C  EFB7  F090         	goto	l6159
 11979   012370  0A01               	xorlw	1	; case 3
 11980   012372  B4D8               	btfsc	status,2,c
 11981   012374  EF90  F091         	goto	l6229
 11982   012378  EFBE  F091         	goto	l236
 11983   01237C                     l236:
 11984                           
 11985                           ;main.c: 457:     if(PORTBbits.RB4 == 0){
 11986   01237C  B8CF               	btfsc	207,4,c	;volatile
 11987   01237E  EFC3  F091         	goto	u6251
 11988   012382  EFC5  F091         	goto	u6250
 11989   012386                     u6251:
 11990   012386  EFE2  F091         	goto	l266
 11991   01238A                     u6250:
 11992   01238A                     
 11993                           ;main.c: 458:         lcd_clear();
 11994   01238A  EC44  F0A5         	call	_lcd_clear	;wreg free
 11995   01238E  C5A7  F511         	movff	_opSel,??_MenuLed
 11996   012392  C5A8  F512         	movff	_opSel+1,??_MenuLed+1
 11997                           
 11998                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11999                           ; Switch size 1, requested type "simple"
 12000                           ; Number of cases is 1, Range of values is 0 to 0
 12001                           ; switch strategies available:
 12002                           ; Name         Instructions Cycles
 12003                           ; simple_byte            4     3 (average)
 12004                           ;	Chosen strategy is simple_byte
 12005   012396  5012               	movf	(??_MenuLed+1)^(0+1280),w,c
 12006   012398  0A00               	xorlw	0	; case 0
 12007   01239A  B4D8               	btfsc	status,2,c
 12008   01239C  EFD2  F091         	goto	l7527
 12009   0123A0  EFDD  F091         	goto	l6243
 12010   0123A4                     l7527:
 12011                           
 12012                           ; Switch size 1, requested type "simple"
 12013                           ; Number of cases is 2, Range of values is 1 to 2
 12014                           ; switch strategies available:
 12015                           ; Name         Instructions Cycles
 12016                           ; simple_byte            7     4 (average)
 12017                           ;	Chosen strategy is simple_byte
 12018   0123A4  5011               	movf	??_MenuLed^(0+1280),w,c
 12019   0123A6  0A01               	xorlw	1	; case 1
 12020   0123A8  B4D8               	btfsc	status,2,c
 12021   0123AA  EFDD  F091         	goto	l6243
 12022   0123AE  0A03               	xorlw	3	; case 2
 12023   0123B0  B4D8               	btfsc	status,2,c
 12024   0123B2  EFDD  F091         	goto	l6243
 12025   0123B6  EFDD  F091         	goto	l6243
 12026   0123BA                     l6243:
 12027                           
 12028                           ;main.c: 463:         opSel = 1;
 12029   0123BA  0E00               	movlw	0
 12030   0123BC  0105               	movlb	5	; () banked
 12031   0123BE  6FA8               	movwf	(_opSel+1)& (0+255),b
 12032   0123C0  0E01               	movlw	1
 12033   0123C2  6FA7               	movwf	_opSel& (0+255),b
 12034   0123C4                     l266:
 12035   0123C4  0012               	return		;funcret
 12036   0123C6                     __end_of_MenuLed:
 12037                           	callstack 0
 12038                           
 12039 ;; *************** function _Sec2Est *****************
 12040 ;; Defined at:
 12041 ;;		line 604 in file "main.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;		None
 12044 ;; Auto vars:     Size  Location     Type
 12045 ;;		None
 12046 ;; Return value:  Size  Location     Type
 12047 ;;                  1    wreg      void 
 12048 ;; Registers used:
 12049 ;;		wreg, status,2, status,0, cstack
 12050 ;; Tracked objects:
 12051 ;;		On entry : 0/0
 12052 ;;		On exit  : 0/0
 12053 ;;		Unchanged: 0/0
 12054 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12057 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12059 ;;Total ram usage:        2 bytes
 12060 ;; Hardware stack levels used: 1
 12061 ;; Hardware stack levels required when called: 5
 12062 ;; This function calls:
 12063 ;;		_lcd_char
 12064 ;; This function is called by:
 12065 ;;		_MenuLed
 12066 ;; This function uses a non-reentrant model
 12067 ;;
 12068                           
 12069                           	psect	text42
 12070   014134                     __ptext42:
 12071                           	callstack 0
 12072   014134                     _Sec2Est:
 12073                           	callstack 120
 12074   014134                     
 12075                           ;main.c: 605:     if(PORTBbits.RB4==0){
 12076   014134  B8CF               	btfsc	207,4,c	;volatile
 12077   014136  EF9F  F0A0         	goto	u5671
 12078   01413A  EFA1  F0A0         	goto	u5670
 12079   01413E                     u5671:
 12080   01413E  EFAD  F0A0         	goto	l335
 12081   014142                     u5670:
 12082   014142                     l336:
 12083   014142  A8CF               	btfss	207,4,c	;volatile
 12084   014144  EFA6  F0A0         	goto	u5681
 12085   014148  EFA8  F0A0         	goto	u5680
 12086   01414C                     u5681:
 12087   01414C  EFA1  F0A0         	goto	l336
 12088   014150                     u5680:
 12089   014150                     
 12090                           ;main.c: 607:         state=0;
 12091   014150  0E00               	movlw	0
 12092   014152  0105               	movlb	5	; () banked
 12093   014154  6FE5               	movwf	_state& (0+255),b
 12094                           
 12095                           ;main.c: 608:         LATA=0;
 12096   014156  0E00               	movlw	0
 12097   014158  6EBE               	movwf	190,c	;volatile
 12098   01415A                     l335:
 12099                           
 12100                           ;main.c: 610:     if(state==0){
 12101   01415A  0105               	movlb	5	; () banked
 12102   01415C  51E5               	movf	_state& (0+255),w,b
 12103   01415E  A4D8               	btfss	status,2,c
 12104   014160  EFB4  F0A0         	goto	u5691
 12105   014164  EFB6  F0A0         	goto	u5690
 12106   014168                     u5691:
 12107   014168  EFB8  F0A0         	goto	l5793
 12108   01416C                     u5690:
 12109   01416C                     
 12110                           ; BSR set to: 5
 12111                           ;main.c: 611:         LATA=0;
 12112   01416C  0E00               	movlw	0
 12113   01416E  6EBE               	movwf	190,c	;volatile
 12114   014170                     l5793:
 12115                           
 12116                           ; BSR set to: 5
 12117                           ;main.c: 613:     lcd_char(2,5,' ');
 12118   014170  0E05               	movlw	5
 12119   014172  6E0C               	movwf	lcd_char@col^(0+1280),c
 12120   014174  0E20               	movlw	32
 12121   014176  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12122   014178  0E02               	movlw	2
 12123   01417A  EC63  F0A5         	call	_lcd_char
 12124   01417E                     
 12125                           ;main.c: 614:     lcd_char(2,11,' ');
 12126   01417E  0E0B               	movlw	11
 12127   014180  6E0C               	movwf	lcd_char@col^(0+1280),c
 12128   014182  0E20               	movlw	32
 12129   014184  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12130   014186  0E02               	movlw	2
 12131   014188  EC63  F0A5         	call	_lcd_char
 12132   01418C                     
 12133                           ;main.c: 615:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 12134   01418C  0E09               	movlw	9
 12135   01418E  6E10               	movwf	(??_Sec2Est+1)^(0+1280),c
 12136   014190  0E1E               	movlw	30
 12137   014192  6E0F               	movwf	??_Sec2Est^(0+1280),c
 12138   014194  0EE4               	movlw	228
 12139   014196                     u7247:
 12140   014196  2EE8               	decfsz	wreg,f,c
 12141   014198  D7FE               	bra	u7247
 12142   01419A  2E0F               	decfsz	??_Sec2Est^(0+1280),f,c
 12143   01419C  D7FC               	bra	u7247
 12144   01419E  2E10               	decfsz	(??_Sec2Est+1)^(0+1280),f,c
 12145   0141A0  D7FA               	bra	u7247
 12146   0141A2  D000               	nop2	
 12147   0141A4                     
 12148                           ;main.c: 616:     lcd_char(2,5,' ');
 12149   0141A4  0E05               	movlw	5
 12150   0141A6  6E0C               	movwf	lcd_char@col^(0+1280),c
 12151   0141A8  0E20               	movlw	32
 12152   0141AA  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12153   0141AC  0E02               	movlw	2
 12154   0141AE  EC63  F0A5         	call	_lcd_char
 12155   0141B2                     
 12156                           ;main.c: 617:     lcd_char(2,11,'<');
 12157   0141B2  0E0B               	movlw	11
 12158   0141B4  6E0C               	movwf	lcd_char@col^(0+1280),c
 12159   0141B6  0E3C               	movlw	60
 12160   0141B8  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12161   0141BA  0E02               	movlw	2
 12162   0141BC  EC63  F0A5         	call	_lcd_char
 12163   0141C0                     
 12164                           ;main.c: 618:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 12165   0141C0  0E09               	movlw	9
 12166   0141C2  6E10               	movwf	(??_Sec2Est+1)^(0+1280),c
 12167   0141C4  0E1E               	movlw	30
 12168   0141C6  6E0F               	movwf	??_Sec2Est^(0+1280),c
 12169   0141C8  0EE4               	movlw	228
 12170   0141CA                     u7257:
 12171   0141CA  2EE8               	decfsz	wreg,f,c
 12172   0141CC  D7FE               	bra	u7257
 12173   0141CE  2E0F               	decfsz	??_Sec2Est^(0+1280),f,c
 12174   0141D0  D7FC               	bra	u7257
 12175   0141D2  2E10               	decfsz	(??_Sec2Est+1)^(0+1280),f,c
 12176   0141D4  D7FA               	bra	u7257
 12177   0141D6  D000               	nop2	
 12178   0141D8  0012               	return		;funcret
 12179   0141DA                     __end_of_Sec2Est:
 12180                           	callstack 0
 12181                           
 12182 ;; *************** function _Sec1Est *****************
 12183 ;; Defined at:
 12184 ;;		line 588 in file "main.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;		None
 12187 ;; Auto vars:     Size  Location     Type
 12188 ;;		None
 12189 ;; Return value:  Size  Location     Type
 12190 ;;                  1    wreg      void 
 12191 ;; Registers used:
 12192 ;;		wreg, status,2, status,0, cstack
 12193 ;; Tracked objects:
 12194 ;;		On entry : 0/0
 12195 ;;		On exit  : 0/0
 12196 ;;		Unchanged: 0/0
 12197 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12200 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12201 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12202 ;;Total ram usage:        2 bytes
 12203 ;; Hardware stack levels used: 1
 12204 ;; Hardware stack levels required when called: 5
 12205 ;; This function calls:
 12206 ;;		_lcd_char
 12207 ;; This function is called by:
 12208 ;;		_MenuLed
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           	psect	text43
 12213   0141DA                     __ptext43:
 12214                           	callstack 0
 12215   0141DA                     _Sec1Est:
 12216                           	callstack 120
 12217   0141DA                     
 12218                           ;main.c: 589:     if(PORTBbits.RB4==0){
 12219   0141DA  B8CF               	btfsc	207,4,c	;volatile
 12220   0141DC  EFF2  F0A0         	goto	u5641
 12221   0141E0  EFF4  F0A0         	goto	u5640
 12222   0141E4                     u5641:
 12223   0141E4  EF00  F0A1         	goto	l327
 12224   0141E8                     u5640:
 12225   0141E8                     l328:
 12226   0141E8  A8CF               	btfss	207,4,c	;volatile
 12227   0141EA  EFF9  F0A0         	goto	u5651
 12228   0141EE  EFFB  F0A0         	goto	u5650
 12229   0141F2                     u5651:
 12230   0141F2  EFF4  F0A0         	goto	l328
 12231   0141F6                     u5650:
 12232   0141F6                     
 12233                           ;main.c: 591:         state=0;
 12234   0141F6  0E00               	movlw	0
 12235   0141F8  0105               	movlb	5	; () banked
 12236   0141FA  6FE5               	movwf	_state& (0+255),b
 12237                           
 12238                           ;main.c: 592:         LATA=0;
 12239   0141FC  0E00               	movlw	0
 12240   0141FE  6EBE               	movwf	190,c	;volatile
 12241   014200                     l327:
 12242                           
 12243                           ;main.c: 594:     if(state==0){
 12244   014200  0105               	movlb	5	; () banked
 12245   014202  51E5               	movf	_state& (0+255),w,b
 12246   014204  A4D8               	btfss	status,2,c
 12247   014206  EF07  F0A1         	goto	u5661
 12248   01420A  EF09  F0A1         	goto	u5660
 12249   01420E                     u5661:
 12250   01420E  EF0B  F0A1         	goto	l5773
 12251   014212                     u5660:
 12252   014212                     
 12253                           ; BSR set to: 5
 12254                           ;main.c: 595:         LATA=0;
 12255   014212  0E00               	movlw	0
 12256   014214  6EBE               	movwf	190,c	;volatile
 12257   014216                     l5773:
 12258                           
 12259                           ; BSR set to: 5
 12260                           ;main.c: 597:     lcd_char(2,5,'<');
 12261   014216  0E05               	movlw	5
 12262   014218  6E0C               	movwf	lcd_char@col^(0+1280),c
 12263   01421A  0E3C               	movlw	60
 12264   01421C  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12265   01421E  0E02               	movlw	2
 12266   014220  EC63  F0A5         	call	_lcd_char
 12267   014224                     
 12268                           ;main.c: 598:     lcd_char(2,11,' ');
 12269   014224  0E0B               	movlw	11
 12270   014226  6E0C               	movwf	lcd_char@col^(0+1280),c
 12271   014228  0E20               	movlw	32
 12272   01422A  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12273   01422C  0E02               	movlw	2
 12274   01422E  EC63  F0A5         	call	_lcd_char
 12275   014232                     
 12276                           ;main.c: 599:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 12277   014232  0E09               	movlw	9
 12278   014234  6E10               	movwf	(??_Sec1Est+1)^(0+1280),c
 12279   014236  0E1E               	movlw	30
 12280   014238  6E0F               	movwf	??_Sec1Est^(0+1280),c
 12281   01423A  0EE4               	movlw	228
 12282   01423C                     u7267:
 12283   01423C  2EE8               	decfsz	wreg,f,c
 12284   01423E  D7FE               	bra	u7267
 12285   014240  2E0F               	decfsz	??_Sec1Est^(0+1280),f,c
 12286   014242  D7FC               	bra	u7267
 12287   014244  2E10               	decfsz	(??_Sec1Est+1)^(0+1280),f,c
 12288   014246  D7FA               	bra	u7267
 12289   014248  D000               	nop2	
 12290   01424A                     
 12291                           ;main.c: 600:     lcd_char(2,5,' ');
 12292   01424A  0E05               	movlw	5
 12293   01424C  6E0C               	movwf	lcd_char@col^(0+1280),c
 12294   01424E  0E20               	movlw	32
 12295   014250  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12296   014252  0E02               	movlw	2
 12297   014254  EC63  F0A5         	call	_lcd_char
 12298   014258                     
 12299                           ;main.c: 601:     lcd_char(2,11,' ');
 12300   014258  0E0B               	movlw	11
 12301   01425A  6E0C               	movwf	lcd_char@col^(0+1280),c
 12302   01425C  0E20               	movlw	32
 12303   01425E  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12304   014260  0E02               	movlw	2
 12305   014262  EC63  F0A5         	call	_lcd_char
 12306   014266                     
 12307                           ;main.c: 602:     _delay((unsigned long)((100)*(64000000UL/4000.0)));
 12308   014266  0E09               	movlw	9
 12309   014268  6E10               	movwf	(??_Sec1Est+1)^(0+1280),c
 12310   01426A  0E1E               	movlw	30
 12311   01426C  6E0F               	movwf	??_Sec1Est^(0+1280),c
 12312   01426E  0EE4               	movlw	228
 12313   014270                     u7277:
 12314   014270  2EE8               	decfsz	wreg,f,c
 12315   014272  D7FE               	bra	u7277
 12316   014274  2E0F               	decfsz	??_Sec1Est^(0+1280),f,c
 12317   014276  D7FC               	bra	u7277
 12318   014278  2E10               	decfsz	(??_Sec1Est+1)^(0+1280),f,c
 12319   01427A  D7FA               	bra	u7277
 12320   01427C  D000               	nop2	
 12321   01427E  0012               	return		;funcret
 12322   014280                     __end_of_Sec1Est:
 12323                           	callstack 0
 12324                           
 12325 ;; *************** function _MenuCalentador *****************
 12326 ;; Defined at:
 12327 ;;		line 636 in file "main.c"
 12328 ;; Parameters:    Size  Location     Type
 12329 ;;		None
 12330 ;; Auto vars:     Size  Location     Type
 12331 ;;		None
 12332 ;; Return value:  Size  Location     Type
 12333 ;;                  1    wreg      void 
 12334 ;; Registers used:
 12335 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12336 ;; Tracked objects:
 12337 ;;		On entry : 0/0
 12338 ;;		On exit  : 0/0
 12339 ;;		Unchanged: 0/0
 12340 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12345 ;;Total ram usage:        2 bytes
 12346 ;; Hardware stack levels used: 1
 12347 ;; Hardware stack levels required when called: 5
 12348 ;; This function calls:
 12349 ;;		_lcd_char
 12350 ;;		_lcd_clear
 12351 ;;		_lcd_out
 12352 ;; This function is called by:
 12353 ;;		_main
 12354 ;; This function uses a non-reentrant model
 12355 ;;
 12356                           
 12357                           	psect	text44
 12358   012926                     __ptext44:
 12359                           	callstack 0
 12360   012926                     _MenuCalentador:
 12361                           	callstack 121
 12362   012926                     
 12363                           ;main.c: 637:     lcd_out(1,1,"MENU  CALENTADOR");
 12364   012926  0E01               	movlw	1
 12365   012928  6E0C               	movwf	lcd_out@col^(0+1280),c
 12366   01292A  0EA1               	movlw	low STR_9
 12367   01292C  6E0D               	movwf	lcd_out@str^(0+1280),c
 12368   01292E  0EFF               	movlw	high STR_9
 12369   012930  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
 12370   012932  0E01               	movlw	1
 12371   012934  EC3E  F0A2         	call	_lcd_out
 12372                           
 12373                           ;main.c: 638:     lcd_out(2,1,"1.ON  2.OFF     ");
 12374   012938  0E01               	movlw	1
 12375   01293A  6E0C               	movwf	lcd_out@col^(0+1280),c
 12376   01293C  0E08               	movlw	low STR_10
 12377   01293E  6E0D               	movwf	lcd_out@str^(0+1280),c
 12378   012940  0EFF               	movlw	high STR_10
 12379   012942  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
 12380   012944  0E02               	movlw	2
 12381   012946  EC3E  F0A2         	call	_lcd_out
 12382   01294A                     
 12383                           ;main.c: 639:     lcd_char(2,16,0);
 12384   01294A  0E10               	movlw	16
 12385   01294C  6E0C               	movwf	lcd_char@col^(0+1280),c
 12386   01294E  0E00               	movlw	0
 12387   012950  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12388   012952  0E02               	movlw	2
 12389   012954  EC63  F0A5         	call	_lcd_char
 12390   012958                     
 12391                           ;main.c: 641:     if(PORTDbits.RD0 == 0){
 12392   012958  B0D1               	btfsc	209,0,c	;volatile
 12393   01295A  EFB1  F094         	goto	u6511
 12394   01295E  EFB3  F094         	goto	u6510
 12395   012962                     u6511:
 12396   012962  EFBD  F094         	goto	l6423
 12397   012966                     u6510:
 12398   012966                     l352:
 12399   012966  A0D1               	btfss	209,0,c	;volatile
 12400   012968  EFB8  F094         	goto	u6521
 12401   01296C  EFBA  F094         	goto	u6520
 12402   012970                     u6521:
 12403   012970  EFB3  F094         	goto	l352
 12404   012974                     u6520:
 12405   012974                     
 12406                           ;main.c: 643:             opSel++;
 12407   012974  0105               	movlb	5	; () banked
 12408   012976  4BA7               	infsnz	_opSel& (0+255),f,b
 12409   012978  2BA8               	incf	(_opSel+1)& (0+255),f,b
 12410   01297A                     l6423:
 12411                           
 12412                           ;main.c: 646:     if(PORTDbits.RD1 == 0){
 12413   01297A  B2D1               	btfsc	209,1,c	;volatile
 12414   01297C  EFC2  F094         	goto	u6531
 12415   012980  EFC4  F094         	goto	u6530
 12416   012984                     u6531:
 12417   012984  EF80  F095         	goto	l6473
 12418   012988                     u6530:
 12419   012988                     l356:
 12420   012988  A2D1               	btfss	209,1,c	;volatile
 12421   01298A  EFC9  F094         	goto	u6541
 12422   01298E  EFCB  F094         	goto	u6540
 12423   012992                     u6541:
 12424   012992  EFC4  F094         	goto	l356
 12425   012996                     u6540:
 12426   012996                     
 12427                           ;main.c: 648:             opSel--;
 12428   012996  0105               	movlb	5	; () banked
 12429   012998  07A7               	decf	_opSel& (0+255),f,b
 12430   01299A  A0D8               	btfss	status,0,c
 12431   01299C  07A8               	decf	(_opSel+1)& (0+255),f,b
 12432   01299E                     
 12433                           ; BSR set to: 5
 12434                           ;main.c: 649:             if(opSel<1){
 12435   01299E  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
 12436   0129A0  EFDC  F094         	goto	u6550
 12437   0129A4  51A8               	movf	(_opSel+1)& (0+255),w,b
 12438   0129A6  E106               	bnz	u6551
 12439   0129A8  05A7               	decf	_opSel& (0+255),w,b
 12440   0129AA  B0D8               	btfsc	status,0,c
 12441   0129AC  EFDA  F094         	goto	u6551
 12442   0129B0  EFDC  F094         	goto	u6550
 12443   0129B4                     u6551:
 12444   0129B4  EF80  F095         	goto	l6473
 12445   0129B8                     u6550:
 12446   0129B8                     
 12447                           ; BSR set to: 5
 12448                           ;main.c: 650:                 opSel=3;
 12449   0129B8  0E00               	movlw	0
 12450   0129BA  6FA8               	movwf	(_opSel+1)& (0+255),b
 12451   0129BC  0E03               	movlw	3
 12452   0129BE  6FA7               	movwf	_opSel& (0+255),b
 12453   0129C0  EF80  F095         	goto	l6473
 12454   0129C4                     l6433:
 12455   0129C4  0E05               	movlw	5
 12456   0129C6  6E0C               	movwf	lcd_char@col^(0+1280),c
 12457   0129C8  0E3C               	movlw	60
 12458   0129CA  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12459   0129CC  0E02               	movlw	2
 12460   0129CE  EC63  F0A5         	call	_lcd_char
 12461                           
 12462                           ;main.c: 656:                 lcd_char(2,12,' ');
 12463   0129D2  0E0C               	movlw	12
 12464   0129D4  6E0C               	movwf	lcd_char@col^(0+1280),c
 12465   0129D6  0E20               	movlw	32
 12466   0129D8  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12467   0129DA  0E02               	movlw	2
 12468   0129DC  EC63  F0A5         	call	_lcd_char
 12469                           
 12470                           ;main.c: 657:                 break;
 12471   0129E0  EF9A  F095         	goto	l362
 12472   0129E4                     l6435:
 12473   0129E4  0E05               	movlw	5
 12474   0129E6  6E0C               	movwf	lcd_char@col^(0+1280),c
 12475   0129E8  0E20               	movlw	32
 12476   0129EA  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12477   0129EC  0E02               	movlw	2
 12478   0129EE  EC63  F0A5         	call	_lcd_char
 12479                           
 12480                           ;main.c: 659:                 lcd_char(2,12,'<');
 12481   0129F2  0E0C               	movlw	12
 12482   0129F4  6E0C               	movwf	lcd_char@col^(0+1280),c
 12483   0129F6  0E3C               	movlw	60
 12484   0129F8  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12485   0129FA  0E02               	movlw	2
 12486   0129FC  EC63  F0A5         	call	_lcd_char
 12487                           
 12488                           ;main.c: 660:                 break;
 12489   012A00  EF9A  F095         	goto	l362
 12490   012A04                     l6437:
 12491                           
 12492                           ; BSR set to: 5
 12493                           ;main.c: 663:                 lcd_char(2,16,0);
 12494   012A04  0E10               	movlw	16
 12495   012A06  6E0C               	movwf	lcd_char@col^(0+1280),c
 12496   012A08  0E00               	movlw	0
 12497   012A0A  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12498   012A0C  0E02               	movlw	2
 12499   012A0E  EC63  F0A5         	call	_lcd_char
 12500   012A12                     
 12501                           ;main.c: 664:                 _delay((unsigned long)((100)*(64000000UL/4000.0)));
 12502   012A12  0E09               	movlw	9
 12503   012A14  6E11               	movwf	(??_MenuCalentador+1)^(0+1280),c
 12504   012A16  0E1E               	movlw	30
 12505   012A18  6E10               	movwf	??_MenuCalentador^(0+1280),c
 12506   012A1A  0EE4               	movlw	228
 12507   012A1C                     u7287:
 12508   012A1C  2EE8               	decfsz	wreg,f,c
 12509   012A1E  D7FE               	bra	u7287
 12510   012A20  2E10               	decfsz	??_MenuCalentador^(0+1280),f,c
 12511   012A22  D7FC               	bra	u7287
 12512   012A24  2E11               	decfsz	(??_MenuCalentador+1)^(0+1280),f,c
 12513   012A26  D7FA               	bra	u7287
 12514   012A28  D000               	nop2	
 12515   012A2A                     
 12516                           ;main.c: 665:                 lcd_char(2,16,' ');
 12517   012A2A  0E10               	movlw	16
 12518   012A2C  6E0C               	movwf	lcd_char@col^(0+1280),c
 12519   012A2E  0E20               	movlw	32
 12520   012A30  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12521   012A32  0E02               	movlw	2
 12522   012A34  EC63  F0A5         	call	_lcd_char
 12523                           
 12524                           ;main.c: 666:                 _delay((unsigned long)((100)*(64000000UL/4000.0)));
 12525   012A38  0E09               	movlw	9
 12526   012A3A  6E11               	movwf	(??_MenuCalentador+1)^(0+1280),c
 12527   012A3C  0E1E               	movlw	30
 12528   012A3E  6E10               	movwf	??_MenuCalentador^(0+1280),c
 12529   012A40  0EE4               	movlw	228
 12530   012A42                     u7297:
 12531   012A42  2EE8               	decfsz	wreg,f,c
 12532   012A44  D7FE               	bra	u7297
 12533   012A46  2E10               	decfsz	??_MenuCalentador^(0+1280),f,c
 12534   012A48  D7FC               	bra	u7297
 12535   012A4A  2E11               	decfsz	(??_MenuCalentador+1)^(0+1280),f,c
 12536   012A4C  D7FA               	bra	u7297
 12537   012A4E  D000               	nop2	
 12538   012A50                     
 12539                           ;main.c: 668:                     if(PORTDbits.RD0 == 0){
 12540   012A50  B0D1               	btfsc	209,0,c	;volatile
 12541   012A52  EF2D  F095         	goto	u6561
 12542   012A56  EF2F  F095         	goto	u6560
 12543   012A5A                     u6561:
 12544   012A5A  EF4B  F095         	goto	l6453
 12545   012A5E                     u6560:
 12546   012A5E                     l368:
 12547   012A5E  A0D1               	btfss	209,0,c	;volatile
 12548   012A60  EF34  F095         	goto	u6571
 12549   012A64  EF36  F095         	goto	u6570
 12550   012A68                     u6571:
 12551   012A68  EF2F  F095         	goto	l368
 12552   012A6C                     u6570:
 12553   012A6C                     
 12554                           ;main.c: 670:                         opSel++;
 12555   012A6C  0105               	movlb	5	; () banked
 12556   012A6E  4BA7               	infsnz	_opSel& (0+255),f,b
 12557   012A70  2BA8               	incf	(_opSel+1)& (0+255),f,b
 12558   012A72                     
 12559                           ; BSR set to: 5
 12560                           ;main.c: 671:                         if(opSel>3){
 12561   012A72  BFA8               	btfsc	(_opSel+1)& (0+255),7,b
 12562   012A74  EF45  F095         	goto	u6581
 12563   012A78  51A8               	movf	(_opSel+1)& (0+255),w,b
 12564   012A7A  E109               	bnz	u6580
 12565   012A7C  0E04               	movlw	4
 12566   012A7E  5DA7               	subwf	_opSel& (0+255),w,b
 12567   012A80  A0D8               	btfss	status,0,c
 12568   012A82  EF45  F095         	goto	u6581
 12569   012A86  EF47  F095         	goto	u6580
 12570   012A8A                     u6581:
 12571   012A8A  EF4B  F095         	goto	l6453
 12572   012A8E                     u6580:
 12573   012A8E                     
 12574                           ; BSR set to: 5
 12575                           ;main.c: 672:                             opSel=1;
 12576   012A8E  0E00               	movlw	0
 12577   012A90  6FA8               	movwf	(_opSel+1)& (0+255),b
 12578   012A92  0E01               	movlw	1
 12579   012A94  6FA7               	movwf	_opSel& (0+255),b
 12580   012A96                     l6453:
 12581                           
 12582                           ;main.c: 675:                     if(PORTDbits.RD1 == 0){
 12583   012A96  B2D1               	btfsc	209,1,c	;volatile
 12584   012A98  EF50  F095         	goto	u6591
 12585   012A9C  EF52  F095         	goto	u6590
 12586   012AA0                     u6591:
 12587   012AA0  EF5D  F095         	goto	l6459
 12588   012AA4                     u6590:
 12589   012AA4                     l373:
 12590   012AA4  A2D1               	btfss	209,1,c	;volatile
 12591   012AA6  EF57  F095         	goto	u6601
 12592   012AAA  EF59  F095         	goto	u6600
 12593   012AAE                     u6601:
 12594   012AAE  EF52  F095         	goto	l373
 12595   012AB2                     u6600:
 12596   012AB2                     
 12597                           ;main.c: 677:                         opSel--;
 12598   012AB2  0105               	movlb	5	; () banked
 12599   012AB4  07A7               	decf	_opSel& (0+255),f,b
 12600   012AB6  A0D8               	btfss	status,0,c
 12601   012AB8  07A8               	decf	(_opSel+1)& (0+255),f,b
 12602   012ABA                     l6459:
 12603                           
 12604                           ;main.c: 679:                     if(PORTBbits.RB4 == 0){
 12605   012ABA  B8CF               	btfsc	207,4,c	;volatile
 12606   012ABC  EF62  F095         	goto	u6611
 12607   012AC0  EF64  F095         	goto	u6610
 12608   012AC4                     u6611:
 12609   012AC4  EF6C  F095         	goto	l6467
 12610   012AC8                     u6610:
 12611   012AC8                     
 12612                           ;main.c: 680:                         lcd_clear();
 12613   012AC8  EC44  F0A5         	call	_lcd_clear	;wreg free
 12614   012ACC                     
 12615                           ;main.c: 681:                         PORTFbits.RF3 = 0;
 12616   012ACC  96D3               	bcf	211,3,c	;volatile
 12617   012ACE                     
 12618                           ;main.c: 682:                         menuOp = menu_principal;
 12619   012ACE  0E00               	movlw	0
 12620   012AD0  0105               	movlb	5	; () banked
 12621   012AD2  6FE0               	movwf	(_menuOp+1)& (0+255),b
 12622   012AD4  0E00               	movlw	0
 12623   012AD6  6FDF               	movwf	_menuOp& (0+255),b
 12624   012AD8                     l6467:
 12625                           
 12626                           ;main.c: 661:         case 3: while(opSel==3 && PORTBbits.RB4==1){
 12627   012AD8  0E03               	movlw	3
 12628   012ADA  0105               	movlb	5	; () banked
 12629   012ADC  19A7               	xorwf	_opSel& (0+255),w,b
 12630   012ADE  11A8               	iorwf	(_opSel+1)& (0+255),w,b
 12631   012AE0  A4D8               	btfss	status,2,c
 12632   012AE2  EF75  F095         	goto	u6621
 12633   012AE6  EF77  F095         	goto	u6620
 12634   012AEA                     u6621:
 12635   012AEA  EF9A  F095         	goto	l362
 12636   012AEE                     u6620:
 12637   012AEE                     
 12638                           ; BSR set to: 5
 12639   012AEE  B8CF               	btfsc	207,4,c	;volatile
 12640   012AF0  EF7C  F095         	goto	u6631
 12641   012AF4  EF7E  F095         	goto	u6630
 12642   012AF8                     u6631:
 12643   012AF8  EF02  F095         	goto	l6437
 12644   012AFC                     u6630:
 12645   012AFC  EF9A  F095         	goto	l362
 12646   012B00                     l6473:
 12647   012B00  C5A7  F510         	movff	_opSel,??_MenuCalentador
 12648   012B04  C5A8  F511         	movff	_opSel+1,??_MenuCalentador+1
 12649                           
 12650                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12651                           ; Switch size 1, requested type "simple"
 12652                           ; Number of cases is 1, Range of values is 0 to 0
 12653                           ; switch strategies available:
 12654                           ; Name         Instructions Cycles
 12655                           ; simple_byte            4     3 (average)
 12656                           ;	Chosen strategy is simple_byte
 12657   012B08  5011               	movf	(??_MenuCalentador+1)^(0+1280),w,c
 12658   012B0A  0A00               	xorlw	0	; case 0
 12659   012B0C  B4D8               	btfsc	status,2,c
 12660   012B0E  EF8B  F095         	goto	l7529
 12661   012B12  EF9A  F095         	goto	l362
 12662   012B16                     l7529:
 12663                           
 12664                           ; Switch size 1, requested type "simple"
 12665                           ; Number of cases is 3, Range of values is 1 to 3
 12666                           ; switch strategies available:
 12667                           ; Name         Instructions Cycles
 12668                           ; simple_byte           10     6 (average)
 12669                           ;	Chosen strategy is simple_byte
 12670   012B16  5010               	movf	??_MenuCalentador^(0+1280),w,c
 12671   012B18  0A01               	xorlw	1	; case 1
 12672   012B1A  B4D8               	btfsc	status,2,c
 12673   012B1C  EFE2  F094         	goto	l6433
 12674   012B20  0A03               	xorlw	3	; case 2
 12675   012B22  B4D8               	btfsc	status,2,c
 12676   012B24  EFF2  F094         	goto	l6435
 12677   012B28  0A01               	xorlw	1	; case 3
 12678   012B2A  B4D8               	btfsc	status,2,c
 12679   012B2C  EF6C  F095         	goto	l6467
 12680   012B30  EF9A  F095         	goto	l362
 12681   012B34                     l362:
 12682                           
 12683                           ;main.c: 689:     if(PORTBbits.RB4 == 0){
 12684   012B34  B8CF               	btfsc	207,4,c	;volatile
 12685   012B36  EF9F  F095         	goto	u6641
 12686   012B3A  EFA1  F095         	goto	u6640
 12687   012B3E                     u6641:
 12688   012B3E  EFC5  F095         	goto	l6485
 12689   012B42                     u6640:
 12690   012B42  EFAF  F095         	goto	l6483
 12691   012B46                     l382:
 12692   012B46  86D3               	bsf	211,3,c	;volatile
 12693   012B48                     
 12694                           ;main.c: 692:                     estado=1;
 12695   012B48  0E01               	movlw	1
 12696   012B4A  0105               	movlb	5	; () banked
 12697   012B4C  6FE4               	movwf	_estado& (0+255),b
 12698                           
 12699                           ;main.c: 693:                     break;
 12700   012B4E  EFC5  F095         	goto	l6485
 12701   012B52                     l384:
 12702   012B52  96D3               	bcf	211,3,c	;volatile
 12703   012B54                     
 12704                           ;main.c: 695:                     estado=0;
 12705   012B54  0E00               	movlw	0
 12706   012B56  0105               	movlb	5	; () banked
 12707   012B58  6FE4               	movwf	_estado& (0+255),b
 12708                           
 12709                           ;main.c: 696:                     break;
 12710   012B5A  EFC5  F095         	goto	l6485
 12711   012B5E                     l6483:
 12712   012B5E  C5A7  F510         	movff	_opSel,??_MenuCalentador
 12713   012B62  C5A8  F511         	movff	_opSel+1,??_MenuCalentador+1
 12714                           
 12715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12716                           ; Switch size 1, requested type "simple"
 12717                           ; Number of cases is 1, Range of values is 0 to 0
 12718                           ; switch strategies available:
 12719                           ; Name         Instructions Cycles
 12720                           ; simple_byte            4     3 (average)
 12721                           ;	Chosen strategy is simple_byte
 12722   012B66  5011               	movf	(??_MenuCalentador+1)^(0+1280),w,c
 12723   012B68  0A00               	xorlw	0	; case 0
 12724   012B6A  B4D8               	btfsc	status,2,c
 12725   012B6C  EFBA  F095         	goto	l7531
 12726   012B70  EFC5  F095         	goto	l6485
 12727   012B74                     l7531:
 12728                           
 12729                           ; Switch size 1, requested type "simple"
 12730                           ; Number of cases is 2, Range of values is 1 to 2
 12731                           ; switch strategies available:
 12732                           ; Name         Instructions Cycles
 12733                           ; simple_byte            7     4 (average)
 12734                           ;	Chosen strategy is simple_byte
 12735   012B74  5010               	movf	??_MenuCalentador^(0+1280),w,c
 12736   012B76  0A01               	xorlw	1	; case 1
 12737   012B78  B4D8               	btfsc	status,2,c
 12738   012B7A  EFA3  F095         	goto	l382
 12739   012B7E  0A03               	xorlw	3	; case 2
 12740   012B80  B4D8               	btfsc	status,2,c
 12741   012B82  EFA9  F095         	goto	l384
 12742   012B86  EFC5  F095         	goto	l6485
 12743   012B8A                     l6485:
 12744                           
 12745                           ;main.c: 699:     if(estado==1){
 12746   012B8A  0105               	movlb	5	; () banked
 12747   012B8C  05E4               	decf	_estado& (0+255),w,b
 12748   012B8E  A4D8               	btfss	status,2,c
 12749   012B90  EFCC  F095         	goto	u6651
 12750   012B94  EFCE  F095         	goto	u6650
 12751   012B98                     u6651:
 12752   012B98  EFD5  F095         	goto	l6489
 12753   012B9C                     u6650:
 12754   012B9C                     
 12755                           ; BSR set to: 5
 12756                           ;main.c: 700:         lcd_char(2,14,1);
 12757   012B9C  0E0E               	movlw	14
 12758   012B9E  6E0C               	movwf	lcd_char@col^(0+1280),c
 12759   012BA0  0E01               	movlw	1
 12760   012BA2  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12761   012BA4  0E02               	movlw	2
 12762   012BA6  EC63  F0A5         	call	_lcd_char
 12763   012BAA                     l6489:
 12764                           
 12765                           ;main.c: 702:     if(estado==0){
 12766   012BAA  0105               	movlb	5	; () banked
 12767   012BAC  51E4               	movf	_estado& (0+255),w,b
 12768   012BAE  A4D8               	btfss	status,2,c
 12769   012BB0  EFDC  F095         	goto	u6661
 12770   012BB4  EFDE  F095         	goto	u6660
 12771   012BB8                     u6661:
 12772   012BB8  EFE5  F095         	goto	l387
 12773   012BBC                     u6660:
 12774   012BBC                     
 12775                           ; BSR set to: 5
 12776                           ;main.c: 703:         lcd_char(2,14," ");
 12777   012BBC  0E0E               	movlw	14
 12778   012BBE  6E0C               	movwf	lcd_char@col^(0+1280),c
 12779   012BC0  0E06               	movlw	low (low (STR_8+15))
 12780   012BC2  6E0D               	movwf	lcd_char@letra^(0+1280),c
 12781   012BC4  0E02               	movlw	2
 12782   012BC6  EC63  F0A5         	call	_lcd_char
 12783   012BCA                     l387:
 12784   012BCA  0012               	return		;funcret
 12785   012BCC                     __end_of_MenuCalentador:
 12786                           	callstack 0
 12787                           
 12788 ;; *************** function _lcd_clear *****************
 12789 ;; Defined at:
 12790 ;;		line 97 in file "LCD_LIB.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;		None
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;		None
 12795 ;; Return value:  Size  Location     Type
 12796 ;;                  1    wreg      void 
 12797 ;; Registers used:
 12798 ;;		wreg, status,2, status,0, cstack
 12799 ;; Tracked objects:
 12800 ;;		On entry : 0/0
 12801 ;;		On exit  : 0/0
 12802 ;;		Unchanged: 0/0
 12803 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12808 ;;Total ram usage:        1 bytes
 12809 ;; Hardware stack levels used: 1
 12810 ;; Hardware stack levels required when called: 3
 12811 ;; This function calls:
 12812 ;;		_lcd_command
 12813 ;; This function is called by:
 12814 ;;		_main
 12815 ;;		_MenuPrincipal
 12816 ;;		_MenuPrincipalCon
 12817 ;;		_MenuLed
 12818 ;;		_MenuLedCon
 12819 ;;		_MenuCalentador
 12820 ;;		_MenuMotor
 12821 ;;		_MenuS
 12822 ;; This function uses a non-reentrant model
 12823 ;;
 12824                           
 12825                           	psect	text45
 12826   014A88                     __ptext45:
 12827                           	callstack 0
 12828   014A88                     _lcd_clear:
 12829                           	callstack 123
 12830   014A88                     
 12831                           ;LCD_LIB.c: 98:  lcd_command(0x01);
 12832   014A88  0E01               	movlw	1
 12833   014A8A  EC74  F0A5         	call	_lcd_command
 12834   014A8E                     
 12835                           ;LCD_LIB.c: 99:  _delay((unsigned long)((2)*(64000000UL/4000.0)));
 12836   014A8E  0E2A               	movlw	42
 12837   014A90  6E08               	movwf	??_lcd_clear^(0+1280),c
 12838   014A92  0E8E               	movlw	142
 12839   014A94                     u7307:
 12840   014A94  2EE8               	decfsz	wreg,f,c
 12841   014A96  D7FE               	bra	u7307
 12842   014A98  2E08               	decfsz	??_lcd_clear^(0+1280),f,c
 12843   014A9A  D7FC               	bra	u7307
 12844   014A9C  0012               	return		;funcret
 12845   014A9E                     __end_of_lcd_clear:
 12846                           	callstack 0
 12847                           
 12848 ;; *************** function _lcd_char *****************
 12849 ;; Defined at:
 12850 ;;		line 165 in file "LCD_LIB.c"
 12851 ;; Parameters:    Size  Location     Type
 12852 ;;  row             1    wreg     unsigned char 
 12853 ;;  col             1   11[COMRAM] unsigned char 
 12854 ;;  letra           1   12[COMRAM] unsigned char 
 12855 ;; Auto vars:     Size  Location     Type
 12856 ;;  row             1   13[COMRAM] unsigned char 
 12857 ;; Return value:  Size  Location     Type
 12858 ;;                  1    wreg      void 
 12859 ;; Registers used:
 12860 ;;		wreg, status,2, status,0, cstack
 12861 ;; Tracked objects:
 12862 ;;		On entry : 0/0
 12863 ;;		On exit  : 0/0
 12864 ;;		Unchanged: 0/0
 12865 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12867 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12869 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12870 ;;Total ram usage:        3 bytes
 12871 ;; Hardware stack levels used: 1
 12872 ;; Hardware stack levels required when called: 4
 12873 ;; This function calls:
 12874 ;;		_lcd_set_cursor
 12875 ;;		_lcd_write
 12876 ;; This function is called by:
 12877 ;;		_MenuPrincipal
 12878 ;;		_MenuPrincipalCon
 12879 ;;		_MenuLed
 12880 ;;		_MenuLedCon
 12881 ;;		_Sec1Est
 12882 ;;		_Sec2Est
 12883 ;;		_Sec3Est
 12884 ;;		_MenuCalentador
 12885 ;;		_MenuMotor
 12886 ;;		_MenuS
 12887 ;; This function uses a non-reentrant model
 12888 ;;
 12889                           
 12890                           	psect	text46
 12891   014AC6                     __ptext46:
 12892                           	callstack 0
 12893   014AC6                     _lcd_char:
 12894                           	callstack 121
 12895                           
 12896                           ;incstack = 0
 12897                           ;lcd_char@row stored from wreg
 12898   014AC6  6E0E               	movwf	lcd_char@row^(0+1280),c
 12899   014AC8                     
 12900                           ;LCD_LIB.c: 166:     lcd_set_cursor(row,col);
 12901   014AC8  C50C  F508         	movff	lcd_char@col,lcd_set_cursor@col
 12902   014ACC  500E               	movf	lcd_char@row^(0+1280),w,c
 12903   014ACE  ECCC  F0A1         	call	_lcd_set_cursor
 12904                           
 12905                           ;LCD_LIB.c: 167:     lcd_write(letra);
 12906   014AD2  500D               	movf	lcd_char@letra^(0+1280),w,c
 12907   014AD4  EC6D  F0A5         	call	_lcd_write
 12908   014AD8  0012               	return		;funcret
 12909   014ADA                     __end_of_lcd_char:
 12910                           	callstack 0
 12911                           
 12912 ;; *************** function _Clock_Init *****************
 12913 ;; Defined at:
 12914 ;;		line 55 in file "config.c"
 12915 ;; Parameters:    Size  Location     Type
 12916 ;;		None
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;		None
 12919 ;; Return value:  Size  Location     Type
 12920 ;;                  1    wreg      void 
 12921 ;; Registers used:
 12922 ;;		wreg, status,2
 12923 ;; Tracked objects:
 12924 ;;		On entry : 0/0
 12925 ;;		On exit  : 0/0
 12926 ;;		Unchanged: 0/0
 12927 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12932 ;;Total ram usage:        0 bytes
 12933 ;; Hardware stack levels used: 1
 12934 ;; This function calls:
 12935 ;;		Nothing
 12936 ;; This function is called by:
 12937 ;;		_main
 12938 ;; This function uses a non-reentrant model
 12939 ;;
 12940                           
 12941                           	psect	text47
 12942   014A70                     __ptext47:
 12943                           	callstack 0
 12944   014A70                     _Clock_Init:
 12945                           	callstack 126
 12946   014A70                     
 12947                           ;config.c: 57:     OSCCON1bits.NDIV = 0x00;
 12948   014A70  0EF0               	movlw	-16
 12949   014A72  0100               	movlb	0	; () banked
 12950   014A74  17AD               	andwf	173,f,b	;volatile
 12951                           
 12952                           ;config.c: 58:     OSCCON1bits.NOSC = 0b110;
 12953   014A76  51AD               	movf	173,w,b	;volatile
 12954   014A78  0B8F               	andlw	-113
 12955   014A7A  0960               	iorlw	96
 12956   014A7C  6FAD               	movwf	173,b	;volatile
 12957                           
 12958                           ;config.c: 59:     OSCFRQbits.HFFRQ = 0b1000;
 12959   014A7E  51B1               	movf	177,w,b	;volatile
 12960   014A80  0BF0               	andlw	-16
 12961   014A82  0908               	iorlw	8
 12962   014A84  6FB1               	movwf	177,b	;volatile
 12963   014A86                     
 12964                           ; BSR set to: 0
 12965   014A86  0012               	return		;funcret
 12966   014A88                     __end_of_Clock_Init:
 12967                           	callstack 0
 12968                           
 12969 ;; *************** function _Advertencia2 *****************
 12970 ;; Defined at:
 12971 ;;		line 806 in file "main.c"
 12972 ;; Parameters:    Size  Location     Type
 12973 ;;		None
 12974 ;; Auto vars:     Size  Location     Type
 12975 ;;		None
 12976 ;; Return value:  Size  Location     Type
 12977 ;;                  1    wreg      void 
 12978 ;; Registers used:
 12979 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12980 ;; Tracked objects:
 12981 ;;		On entry : 0/0
 12982 ;;		On exit  : 0/0
 12983 ;;		Unchanged: 0/0
 12984 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 12985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12989 ;;Total ram usage:        0 bytes
 12990 ;; Hardware stack levels used: 1
 12991 ;; Hardware stack levels required when called: 5
 12992 ;; This function calls:
 12993 ;;		_lcd_out
 12994 ;; This function is called by:
 12995 ;;		_main
 12996 ;; This function uses a non-reentrant model
 12997 ;;
 12998                           
 12999                           	psect	text48
 13000   014824                     __ptext48:
 13001                           	callstack 0
 13002   014824                     _Advertencia2:
 13003                           	callstack 121
 13004   014824                     
 13005                           ;main.c: 807:     lcd_out(1,1,"HAY UN OBJETO");
 13006   014824  0E01               	movlw	1
 13007   014826  6E0C               	movwf	lcd_out@col^(0+1280),c
 13008   014828  0EC0               	movlw	low STR_20
 13009   01482A  6E0D               	movwf	lcd_out@str^(0+1280),c
 13010   01482C  0EFF               	movlw	high STR_20
 13011   01482E  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
 13012   014830  0E01               	movlw	1
 13013   014832  EC3E  F0A2         	call	_lcd_out
 13014                           
 13015                           ;main.c: 808:     lcd_out(2,1,"MUY CERCANO  ");
 13016   014836  0E01               	movlw	1
 13017   014838  6E0C               	movwf	lcd_out@col^(0+1280),c
 13018   01483A  0EB2               	movlw	low STR_21
 13019   01483C  6E0D               	movwf	lcd_out@str^(0+1280),c
 13020   01483E  0EFF               	movlw	high STR_21
 13021   014840  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
 13022   014842  0E02               	movlw	2
 13023   014844  EC3E  F0A2         	call	_lcd_out
 13024   014848                     
 13025                           ;main.c: 809:     if(ultrasonido>5){
 13026   014848  0105               	movlb	5	; () banked
 13027   01484A  51E2               	movf	(_ultrasonido+1)& (0+255),w,b
 13028   01484C  E109               	bnz	u6830
 13029   01484E  0E06               	movlw	6
 13030   014850  5DE1               	subwf	_ultrasonido& (0+255),w,b
 13031   014852  A0D8               	btfss	status,0,c
 13032   014854  EF2E  F0A4         	goto	u6831
 13033   014858  EF30  F0A4         	goto	u6830
 13034   01485C                     u6831:
 13035   01485C  EF34  F0A4         	goto	l438
 13036   014860                     u6830:
 13037   014860                     
 13038                           ; BSR set to: 5
 13039                           ;main.c: 810:         menuOp = menu_principal;
 13040   014860  0E00               	movlw	0
 13041   014862  6FE0               	movwf	(_menuOp+1)& (0+255),b
 13042   014864  0E00               	movlw	0
 13043   014866  6FDF               	movwf	_menuOp& (0+255),b
 13044   014868                     l438:
 13045                           
 13046                           ; BSR set to: 5
 13047   014868  0012               	return		;funcret
 13048   01486A                     __end_of_Advertencia2:
 13049                           	callstack 0
 13050                           
 13051 ;; *************** function _Advertencia *****************
 13052 ;; Defined at:
 13053 ;;		line 799 in file "main.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;		None
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;		None
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  1    wreg      void 
 13060 ;; Registers used:
 13061 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13062 ;; Tracked objects:
 13063 ;;		On entry : 0/0
 13064 ;;		On exit  : 0/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13071 ;;Total ram usage:        0 bytes
 13072 ;; Hardware stack levels used: 1
 13073 ;; Hardware stack levels required when called: 5
 13074 ;; This function calls:
 13075 ;;		___flge
 13076 ;;		_lcd_out
 13077 ;; This function is called by:
 13078 ;;		_main
 13079 ;; This function uses a non-reentrant model
 13080 ;;
 13081                           
 13082                           	psect	text49
 13083   014550                     __ptext49:
 13084                           	callstack 0
 13085   014550                     _Advertencia:
 13086                           	callstack 121
 13087   014550                     
 13088                           ;main.c: 800:     lcd_out(1,1,"TEMPERATURA");
 13089   014550  0E01               	movlw	1
 13090   014552  6E0C               	movwf	lcd_out@col^(0+1280),c
 13091   014554  0ECE               	movlw	low STR_18
 13092   014556  6E0D               	movwf	lcd_out@str^(0+1280),c
 13093   014558  0EFF               	movlw	high STR_18
 13094   01455A  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
 13095   01455C  0E01               	movlw	1
 13096   01455E  EC3E  F0A2         	call	_lcd_out
 13097                           
 13098                           ;main.c: 801:     lcd_out(2,1,"ELEVADA");
 13099   014562  0E01               	movlw	1
 13100   014564  6E0C               	movwf	lcd_out@col^(0+1280),c
 13101   014566  0EE3               	movlw	low STR_19
 13102   014568  6E0D               	movwf	lcd_out@str^(0+1280),c
 13103   01456A  0EFF               	movlw	high STR_19
 13104   01456C  6E0E               	movwf	(lcd_out@str+1)^(0+1280),c
 13105   01456E  0E02               	movlw	2
 13106   014570  EC3E  F0A2         	call	_lcd_out
 13107   014574                     
 13108                           ;main.c: 802:     if(temp<70){
 13109   014574  C5D5  F51A         	movff	_temp,___flge@ff1
 13110   014578  C5D6  F51B         	movff	_temp+1,___flge@ff1+1
 13111   01457C  C5D7  F51C         	movff	_temp+2,___flge@ff1+2
 13112   014580  C5D8  F51D         	movff	_temp+3,___flge@ff1+3
 13113   014584  0E00               	movlw	0
 13114   014586  6E1E               	movwf	___flge@ff2^(0+1280),c
 13115   014588  0E00               	movlw	0
 13116   01458A  6E1F               	movwf	(___flge@ff2+1)^(0+1280),c
 13117   01458C  0E8C               	movlw	140
 13118   01458E  6E20               	movwf	(___flge@ff2+2)^(0+1280),c
 13119   014590  0E42               	movlw	66
 13120   014592  6E21               	movwf	(___flge@ff2+3)^(0+1280),c
 13121   014594  EC1C  F09E         	call	___flge	;wreg free
 13122   014598  B0D8               	btfsc	status,0,c
 13123   01459A  EFD1  F0A2         	goto	u6821
 13124   01459E  EFD3  F0A2         	goto	u6820
 13125   0145A2                     u6821:
 13126   0145A2  EFD8  F0A2         	goto	l434
 13127   0145A6                     u6820:
 13128   0145A6                     
 13129                           ;main.c: 803:         menuOp = menu_principal;
 13130   0145A6  0E00               	movlw	0
 13131   0145A8  0105               	movlb	5	; () banked
 13132   0145AA  6FE0               	movwf	(_menuOp+1)& (0+255),b
 13133   0145AC  0E00               	movlw	0
 13134   0145AE  6FDF               	movwf	_menuOp& (0+255),b
 13135   0145B0                     l434:
 13136   0145B0  0012               	return		;funcret
 13137   0145B2                     __end_of_Advertencia:
 13138                           	callstack 0
 13139                           
 13140 ;; *************** function _lcd_out *****************
 13141 ;; Defined at:
 13142 ;;		line 157 in file "LCD_LIB.c"
 13143 ;; Parameters:    Size  Location     Type
 13144 ;;  row             1    wreg     unsigned char 
 13145 ;;  col             1   11[COMRAM] unsigned char 
 13146 ;;  str             2   12[COMRAM] PTR unsigned char 
 13147 ;;		 -> STR_21(14), STR_20(14), STR_19(8), STR_18(12), 
 13148 ;;		 -> STR_16(3), auxStr(20), STR_14(17), STR_13(17), 
 13149 ;;		 -> STR_12(17), STR_10(17), STR_9(17), STR_8(17), 
 13150 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 13151 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
 13152 ;; Auto vars:     Size  Location     Type
 13153 ;;  row             1   14[COMRAM] unsigned char 
 13154 ;; Return value:  Size  Location     Type
 13155 ;;                  1    wreg      void 
 13156 ;; Registers used:
 13157 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13158 ;; Tracked objects:
 13159 ;;		On entry : 0/0
 13160 ;;		On exit  : 0/0
 13161 ;;		Unchanged: 0/0
 13162 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13163 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13166 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13167 ;;Total ram usage:        4 bytes
 13168 ;; Hardware stack levels used: 1
 13169 ;; Hardware stack levels required when called: 4
 13170 ;; This function calls:
 13171 ;;		_lcd_set_cursor
 13172 ;;		_lcd_write
 13173 ;; This function is called by:
 13174 ;;		_MenuPrincipal
 13175 ;;		_MenuPrincipalCon
 13176 ;;		_MenuLed
 13177 ;;		_MenuLedCon
 13178 ;;		_MenuCalentador
 13179 ;;		_MenuMotor
 13180 ;;		_MenuS
 13181 ;;		_Advertencia
 13182 ;;		_Advertencia2
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           
 13186                           	psect	text50
 13187   01447C                     __ptext50:
 13188                           	callstack 0
 13189   01447C                     _lcd_out:
 13190                           	callstack 121
 13191                           
 13192                           ;incstack = 0
 13193                           ;lcd_out@row stored from wreg
 13194   01447C  6E0F               	movwf	lcd_out@row^(0+1280),c
 13195   01447E                     
 13196                           ;LCD_LIB.c: 158:     lcd_set_cursor(row,col);
 13197   01447E  C50C  F508         	movff	lcd_out@col,lcd_set_cursor@col
 13198   014482  500F               	movf	lcd_out@row^(0+1280),w,c
 13199   014484  ECCC  F0A1         	call	_lcd_set_cursor
 13200                           
 13201                           ;LCD_LIB.c: 159:     while(*str){
 13202   014488  EF5B  F0A2         	goto	l5763
 13203   01448C                     l5759:
 13204                           
 13205                           ;LCD_LIB.c: 160:         lcd_write(*str);
 13206   01448C  C50D  F4F6         	movff	lcd_out@str,tblptrl
 13207   014490  C50E  F4F7         	movff	lcd_out@str+1,tblptrh
 13208   014494  0E00               	movlw	low (__mediumconst shr (0+16))
 13209   014496  6EF8               	movwf	tblptru,c
 13210   014498  0E25               	movlw	(high __ramtop+-1)
 13211   01449A  64F7               	cpfsgt	tblptrh,c
 13212   01449C  D003               	bra	u5617
 13213   01449E  0008               	tblrd		*
 13214   0144A0  50F5               	movf	tablat,w,c
 13215   0144A2  D005               	bra	u5610
 13216   0144A4                     u5617:
 13217   0144A4  C4F6 F4E1          	movff	tblptrl,fsr1l
 13218   0144A8  C4F7 F4E2          	movff	tblptrh,fsr1h
 13219   0144AC  50E7               	movf	indf1,w,c
 13220   0144AE                     u5610:
 13221   0144AE  EC6D  F0A5         	call	_lcd_write
 13222   0144B2                     
 13223                           ;LCD_LIB.c: 161:         str++;
 13224   0144B2  4A0D               	infsnz	lcd_out@str^(0+1280),f,c
 13225   0144B4  2A0E               	incf	(lcd_out@str+1)^(0+1280),f,c
 13226   0144B6                     l5763:
 13227                           
 13228                           ;LCD_LIB.c: 159:     while(*str){
 13229   0144B6  C50D  F4F6         	movff	lcd_out@str,tblptrl
 13230   0144BA  C50E  F4F7         	movff	lcd_out@str+1,tblptrh
 13231   0144BE  0E00               	movlw	low (__mediumconst shr (0+16))
 13232   0144C0  6EF8               	movwf	tblptru,c
 13233   0144C2  0E25               	movlw	(high __ramtop+-1)
 13234   0144C4  64F7               	cpfsgt	tblptrh,c
 13235   0144C6  D003               	bra	u5627
 13236   0144C8  0008               	tblrd		*
 13237   0144CA  50F5               	movf	tablat,w,c
 13238   0144CC  D005               	bra	u5620
 13239   0144CE                     u5627:
 13240   0144CE  C4F6 F4E1          	movff	tblptrl,fsr1l
 13241   0144D2  C4F7 F4E2          	movff	tblptrh,fsr1h
 13242   0144D6  50E7               	movf	indf1,w,c
 13243   0144D8                     u5620:
 13244   0144D8  0900               	iorlw	0
 13245   0144DA  A4D8               	btfss	status,2,c
 13246   0144DC  EF72  F0A2         	goto	u5631
 13247   0144E0  EF74  F0A2         	goto	u5630
 13248   0144E4                     u5631:
 13249   0144E4  EF46  F0A2         	goto	l5759
 13250   0144E8                     u5630:
 13251   0144E8  0012               	return		;funcret
 13252   0144EA                     __end_of_lcd_out:
 13253                           	callstack 0
 13254                           
 13255 ;; *************** function _lcd_write *****************
 13256 ;; Defined at:
 13257 ;;		line 36 in file "LCD_LIB.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  letra           1    wreg     unsigned char 
 13260 ;; Auto vars:     Size  Location     Type
 13261 ;;  letra           1    6[COMRAM] unsigned char 
 13262 ;; Return value:  Size  Location     Type
 13263 ;;                  1    wreg      void 
 13264 ;; Registers used:
 13265 ;;		wreg, status,2, status,0, cstack
 13266 ;; Tracked objects:
 13267 ;;		On entry : 0/0
 13268 ;;		On exit  : 0/0
 13269 ;;		Unchanged: 0/0
 13270 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13274 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13275 ;;Total ram usage:        1 bytes
 13276 ;; Hardware stack levels used: 1
 13277 ;; Hardware stack levels required when called: 2
 13278 ;; This function calls:
 13279 ;;		__send_byte
 13280 ;; This function is called by:
 13281 ;;		_lcd_custom_char
 13282 ;;		_lcd_out
 13283 ;;		_lcd_char
 13284 ;;		_lcd_puts
 13285 ;; This function uses a non-reentrant model
 13286 ;;
 13287                           
 13288                           	psect	text51
 13289   014ADA                     __ptext51:
 13290                           	callstack 0
 13291   014ADA                     _lcd_write:
 13292                           	callstack 123
 13293                           
 13294                           ;incstack = 0
 13295                           ;lcd_write@letra stored from wreg
 13296   014ADA  6E07               	movwf	lcd_write@letra^(0+1280),c
 13297   014ADC                     
 13298                           ;LCD_LIB.c: 37:     _send_byte(letra,1);
 13299   014ADC  0E01               	movlw	1
 13300   014ADE  6E03               	movwf	__send_byte@mode^(0+1280),c
 13301   014AE0  5007               	movf	lcd_write@letra^(0+1280),w,c
 13302   014AE2  ECA5  F0A3         	call	__send_byte
 13303   014AE6  0012               	return		;funcret
 13304   014AE8                     __end_of_lcd_write:
 13305                           	callstack 0
 13306                           
 13307 ;; *************** function _lcd_set_cursor *****************
 13308 ;; Defined at:
 13309 ;;		line 86 in file "LCD_LIB.c"
 13310 ;; Parameters:    Size  Location     Type
 13311 ;;  row             1    wreg     unsigned char 
 13312 ;;  col             1    7[COMRAM] unsigned char 
 13313 ;; Auto vars:     Size  Location     Type
 13314 ;;  row             1   10[COMRAM] unsigned char 
 13315 ;; Return value:  Size  Location     Type
 13316 ;;                  1    wreg      void 
 13317 ;; Registers used:
 13318 ;;		wreg, status,2, status,0, cstack
 13319 ;; Tracked objects:
 13320 ;;		On entry : 0/0
 13321 ;;		On exit  : 0/0
 13322 ;;		Unchanged: 0/0
 13323 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13324 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13327 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13328 ;;Total ram usage:        4 bytes
 13329 ;; Hardware stack levels used: 1
 13330 ;; Hardware stack levels required when called: 3
 13331 ;; This function calls:
 13332 ;;		_lcd_command
 13333 ;; This function is called by:
 13334 ;;		_lcd_out
 13335 ;;		_lcd_char
 13336 ;; This function uses a non-reentrant model
 13337 ;;
 13338                           
 13339                           	psect	text52
 13340   014398                     __ptext52:
 13341                           	callstack 0
 13342   014398                     _lcd_set_cursor:
 13343                           	callstack 121
 13344                           
 13345                           ;incstack = 0
 13346                           ;lcd_set_cursor@row stored from wreg
 13347   014398  6E0B               	movwf	lcd_set_cursor@row^(0+1280),c
 13348   01439A                     
 13349                           ;LCD_LIB.c: 88:  switch(row){
 13350   01439A  EFE7  F0A1         	goto	l5583
 13351   01439E                     l5573:
 13352   01439E  5008               	movf	lcd_set_cursor@col^(0+1280),w,c
 13353   0143A0  0F7F               	addlw	127
 13354   0143A2  EC74  F0A5         	call	_lcd_command
 13355   0143A6  EF04  F0A2         	goto	l516
 13356   0143AA                     l5575:
 13357   0143AA  5008               	movf	lcd_set_cursor@col^(0+1280),w,c
 13358   0143AC  0FBF               	addlw	191
 13359   0143AE  EC74  F0A5         	call	_lcd_command
 13360   0143B2  EF04  F0A2         	goto	l516
 13361   0143B6                     l5577:
 13362   0143B6  5008               	movf	lcd_set_cursor@col^(0+1280),w,c
 13363   0143B8  0F93               	addlw	147
 13364   0143BA  EC74  F0A5         	call	_lcd_command
 13365   0143BE  EF04  F0A2         	goto	l516
 13366   0143C2                     l5579:
 13367   0143C2  5008               	movf	lcd_set_cursor@col^(0+1280),w,c
 13368   0143C4  0FD3               	addlw	211
 13369   0143C6  EC74  F0A5         	call	_lcd_command
 13370   0143CA  EF04  F0A2         	goto	l516
 13371   0143CE                     l5583:
 13372   0143CE  500B               	movf	lcd_set_cursor@row^(0+1280),w,c
 13373   0143D0  6E09               	movwf	??_lcd_set_cursor^(0+1280),c
 13374   0143D2  6A0A               	clrf	(??_lcd_set_cursor+1)^(0+1280),c
 13375                           
 13376                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13377                           ; Switch size 1, requested type "simple"
 13378                           ; Number of cases is 1, Range of values is 0 to 0
 13379                           ; switch strategies available:
 13380                           ; Name         Instructions Cycles
 13381                           ; simple_byte            4     3 (average)
 13382                           ;	Chosen strategy is simple_byte
 13383   0143D4  500A               	movf	(??_lcd_set_cursor+1)^(0+1280),w,c
 13384   0143D6  0A00               	xorlw	0	; case 0
 13385   0143D8  B4D8               	btfsc	status,2,c
 13386   0143DA  EFF1  F0A1         	goto	l7533
 13387   0143DE  EF04  F0A2         	goto	l516
 13388   0143E2                     l7533:
 13389                           
 13390                           ; Switch size 1, requested type "simple"
 13391                           ; Number of cases is 4, Range of values is 1 to 4
 13392                           ; switch strategies available:
 13393                           ; Name         Instructions Cycles
 13394                           ; simple_byte           13     7 (average)
 13395                           ;	Chosen strategy is simple_byte
 13396   0143E2  5009               	movf	??_lcd_set_cursor^(0+1280),w,c
 13397   0143E4  0A01               	xorlw	1	; case 1
 13398   0143E6  B4D8               	btfsc	status,2,c
 13399   0143E8  EFCF  F0A1         	goto	l5573
 13400   0143EC  0A03               	xorlw	3	; case 2
 13401   0143EE  B4D8               	btfsc	status,2,c
 13402   0143F0  EFD5  F0A1         	goto	l5575
 13403   0143F4  0A01               	xorlw	1	; case 3
 13404   0143F6  B4D8               	btfsc	status,2,c
 13405   0143F8  EFDB  F0A1         	goto	l5577
 13406   0143FC  0A07               	xorlw	7	; case 4
 13407   0143FE  B4D8               	btfsc	status,2,c
 13408   014400  EFE1  F0A1         	goto	l5579
 13409   014404  EF04  F0A2         	goto	l516
 13410   014408                     l516:
 13411   014408  0012               	return		;funcret
 13412   01440A                     __end_of_lcd_set_cursor:
 13413                           	callstack 0
 13414                           
 13415 ;; *************** function _lcd_command *****************
 13416 ;; Defined at:
 13417 ;;		line 39 in file "LCD_LIB.c"
 13418 ;; Parameters:    Size  Location     Type
 13419 ;;  cmd             1    wreg     unsigned char 
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;  cmd             1    6[COMRAM] unsigned char 
 13422 ;; Return value:  Size  Location     Type
 13423 ;;                  1    wreg      void 
 13424 ;; Registers used:
 13425 ;;		wreg, status,2, status,0, cstack
 13426 ;; Tracked objects:
 13427 ;;		On entry : 0/0
 13428 ;;		On exit  : 0/0
 13429 ;;		Unchanged: 0/0
 13430 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13434 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13435 ;;Total ram usage:        1 bytes
 13436 ;; Hardware stack levels used: 1
 13437 ;; Hardware stack levels required when called: 2
 13438 ;; This function calls:
 13439 ;;		__send_byte
 13440 ;; This function is called by:
 13441 ;;		_lcd_init
 13442 ;;		_lcd_set_cursor
 13443 ;;		_lcd_clear
 13444 ;;		_lcd_disable_blink
 13445 ;;		_lcd_disable_cursor
 13446 ;;		_lcd_custom_char
 13447 ;;		_lcd_return_home
 13448 ;;		_lcd_on
 13449 ;;		_lcd_off
 13450 ;;		_lcd_enable_blink
 13451 ;;		_lcd_enable_cursor
 13452 ;;		_lcd_scroll_left
 13453 ;;		_lcd_scroll_right
 13454 ;; This function uses a non-reentrant model
 13455 ;;
 13456                           
 13457                           	psect	text53
 13458   014AE8                     __ptext53:
 13459                           	callstack 0
 13460   014AE8                     _lcd_command:
 13461                           	callstack 123
 13462                           
 13463                           ;incstack = 0
 13464                           ;lcd_command@cmd stored from wreg
 13465   014AE8  6E07               	movwf	lcd_command@cmd^(0+1280),c
 13466   014AEA                     
 13467                           ;LCD_LIB.c: 40:     _send_byte(cmd,0);
 13468   014AEA  0E00               	movlw	0
 13469   014AEC  6E03               	movwf	__send_byte@mode^(0+1280),c
 13470   014AEE  5007               	movf	lcd_command@cmd^(0+1280),w,c
 13471   014AF0  ECA5  F0A3         	call	__send_byte
 13472   014AF4  0012               	return		;funcret
 13473   014AF6                     __end_of_lcd_command:
 13474                           	callstack 0
 13475                           
 13476 ;; *************** function __send_byte *****************
 13477 ;; Defined at:
 13478 ;;		line 26 in file "LCD_LIB.c"
 13479 ;; Parameters:    Size  Location     Type
 13480 ;;  value           1    wreg     unsigned char 
 13481 ;;  mode            1    2[COMRAM] unsigned char 
 13482 ;; Auto vars:     Size  Location     Type
 13483 ;;  value           1    5[COMRAM] unsigned char 
 13484 ;; Return value:  Size  Location     Type
 13485 ;;                  1    wreg      void 
 13486 ;; Registers used:
 13487 ;;		wreg, status,2, status,0, cstack
 13488 ;; Tracked objects:
 13489 ;;		On entry : 0/0
 13490 ;;		On exit  : 0/0
 13491 ;;		Unchanged: 0/0
 13492 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13493 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13496 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13497 ;;Total ram usage:        4 bytes
 13498 ;; Hardware stack levels used: 1
 13499 ;; Hardware stack levels required when called: 1
 13500 ;; This function calls:
 13501 ;;		__write_nibble
 13502 ;; This function is called by:
 13503 ;;		_lcd_write
 13504 ;;		_lcd_command
 13505 ;; This function uses a non-reentrant model
 13506 ;;
 13507                           
 13508                           	psect	text54
 13509   01474A                     __ptext54:
 13510                           	callstack 0
 13511   01474A                     __send_byte:
 13512                           	callstack 123
 13513                           
 13514                           ;incstack = 0
 13515                           ;__send_byte@value stored from wreg
 13516   01474A  6E06               	movwf	__send_byte@value^(0+1280),c
 13517   01474C                     
 13518                           ;LCD_LIB.c: 28:     switch(mode){
 13519   01474C  EFAE  F0A3         	goto	l4675
 13520   014750                     l4669:
 13521   014750  90D3               	bcf	211,0,c	;volatile
 13522   014752  EFC3  F0A3         	goto	l4677
 13523   014756                     l4671:
 13524   014756  80D3               	bsf	211,0,c	;volatile
 13525   014758  EFC3  F0A3         	goto	l4677
 13526   01475C                     l4675:
 13527   01475C  5003               	movf	__send_byte@mode^(0+1280),w,c
 13528   01475E  6E04               	movwf	??__send_byte^(0+1280),c
 13529   014760  6A05               	clrf	(??__send_byte+1)^(0+1280),c
 13530                           
 13531                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13532                           ; Switch size 1, requested type "simple"
 13533                           ; Number of cases is 1, Range of values is 0 to 0
 13534                           ; switch strategies available:
 13535                           ; Name         Instructions Cycles
 13536                           ; simple_byte            4     3 (average)
 13537                           ;	Chosen strategy is simple_byte
 13538   014762  5005               	movf	(??__send_byte+1)^(0+1280),w,c
 13539   014764  0A00               	xorlw	0	; case 0
 13540   014766  B4D8               	btfsc	status,2,c
 13541   014768  EFB8  F0A3         	goto	l7535
 13542   01476C  EFC3  F0A3         	goto	l4677
 13543   014770                     l7535:
 13544                           
 13545                           ; Switch size 1, requested type "simple"
 13546                           ; Number of cases is 2, Range of values is 0 to 1
 13547                           ; switch strategies available:
 13548                           ; Name         Instructions Cycles
 13549                           ; simple_byte            7     4 (average)
 13550                           ;	Chosen strategy is simple_byte
 13551   014770  5004               	movf	??__send_byte^(0+1280),w,c
 13552   014772  0A00               	xorlw	0	; case 0
 13553   014774  B4D8               	btfsc	status,2,c
 13554   014776  EFA8  F0A3         	goto	l4669
 13555   01477A  0A01               	xorlw	1	; case 1
 13556   01477C  B4D8               	btfsc	status,2,c
 13557   01477E  EFAB  F0A3         	goto	l4671
 13558   014782  EFC3  F0A3         	goto	l4677
 13559   014786                     l4677:
 13560                           
 13561                           ;LCD_LIB.c: 32:     _write_nibble(value>>4);
 13562   014786  3806               	swapf	__send_byte@value^(0+1280),w,c
 13563   014788  0B0F               	andlw	15
 13564   01478A  EC05  F0A2         	call	__write_nibble
 13565                           
 13566                           ;LCD_LIB.c: 33:     _write_nibble(value&0x0F);
 13567   01478E  5006               	movf	__send_byte@value^(0+1280),w,c
 13568   014790  0B0F               	andlw	15
 13569   014792  EC05  F0A2         	call	__write_nibble
 13570   014796  0012               	return		;funcret
 13571   014798                     __end_of__send_byte:
 13572                           	callstack 0
 13573                           
 13574 ;; *************** function __write_nibble *****************
 13575 ;; Defined at:
 13576 ;;		line 13 in file "LCD_LIB.c"
 13577 ;; Parameters:    Size  Location     Type
 13578 ;;  nibble          1    wreg     unsigned char 
 13579 ;; Auto vars:     Size  Location     Type
 13580 ;;  nibble          1    1[COMRAM] unsigned char 
 13581 ;; Return value:  Size  Location     Type
 13582 ;;                  1    wreg      void 
 13583 ;; Registers used:
 13584 ;;		wreg, status,2, status,0, cstack
 13585 ;; Tracked objects:
 13586 ;;		On entry : 0/0
 13587 ;;		On exit  : 0/0
 13588 ;;		Unchanged: 0/0
 13589 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13592 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13593 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13594 ;;Total ram usage:        2 bytes
 13595 ;; Hardware stack levels used: 1
 13596 ;; This function calls:
 13597 ;;		Nothing
 13598 ;; This function is called by:
 13599 ;;		__send_byte
 13600 ;;		_lcd_init
 13601 ;; This function uses a non-reentrant model
 13602 ;;
 13603                           
 13604                           	psect	text55
 13605   01440A                     __ptext55:
 13606                           	callstack 0
 13607   01440A                     __write_nibble:
 13608                           	callstack 123
 13609                           
 13610                           ;incstack = 0
 13611                           ;__write_nibble@nibble stored from wreg
 13612   01440A  6E02               	movwf	__write_nibble@nibble^(0+1280),c
 13613   01440C                     
 13614                           ;LCD_LIB.c: 14:     if( (nibble & 0x01) == 0) PORTF &= ~(1<<4); else PORTF |= (1<<4);
 13615   01440C  B002               	btfsc	__write_nibble@nibble^(0+1280),0,c
 13616   01440E  EF0B  F0A2         	goto	u3531
 13617   014412  EF0D  F0A2         	goto	u3530
 13618   014416                     u3531:
 13619   014416  EF10  F0A2         	goto	l4435
 13620   01441A                     u3530:
 13621   01441A  98D3               	bcf	211,4,c	;volatile
 13622   01441C  EF11  F0A2         	goto	l4437
 13623   014420                     l4435:
 13624   014420  88D3               	bsf	211,4,c	;volatile
 13625   014422                     l4437:
 13626                           
 13627                           ;LCD_LIB.c: 15:     if( (nibble & 0x02) == 0) PORTF &= ~(1<<5); else PORTF |= (1<<5);
 13628   014422  B202               	btfsc	__write_nibble@nibble^(0+1280),1,c
 13629   014424  EF16  F0A2         	goto	u3541
 13630   014428  EF18  F0A2         	goto	u3540
 13631   01442C                     u3541:
 13632   01442C  EF1B  F0A2         	goto	l4441
 13633   014430                     u3540:
 13634   014430  9AD3               	bcf	211,5,c	;volatile
 13635   014432  EF1C  F0A2         	goto	l4443
 13636   014436                     l4441:
 13637   014436  8AD3               	bsf	211,5,c	;volatile
 13638   014438                     l4443:
 13639                           
 13640                           ;LCD_LIB.c: 16:     if( (nibble & 0x04) == 0) PORTF &= ~(1<<6); else PORTF |= (1<<6);
 13641   014438  B402               	btfsc	__write_nibble@nibble^(0+1280),2,c
 13642   01443A  EF21  F0A2         	goto	u3551
 13643   01443E  EF23  F0A2         	goto	u3550
 13644   014442                     u3551:
 13645   014442  EF26  F0A2         	goto	l4447
 13646   014446                     u3550:
 13647   014446  9CD3               	bcf	211,6,c	;volatile
 13648   014448  EF27  F0A2         	goto	l4449
 13649   01444C                     l4447:
 13650   01444C  8CD3               	bsf	211,6,c	;volatile
 13651   01444E                     l4449:
 13652                           
 13653                           ;LCD_LIB.c: 17:     if( (nibble & 0x08) == 0) PORTF &= ~(1<<7); else PORTF |= (1<<7);
 13654   01444E  B602               	btfsc	__write_nibble@nibble^(0+1280),3,c
 13655   014450  EF2C  F0A2         	goto	u3561
 13656   014454  EF2E  F0A2         	goto	u3560
 13657   014458                     u3561:
 13658   014458  EF31  F0A2         	goto	l4453
 13659   01445C                     u3560:
 13660   01445C  9ED3               	bcf	211,7,c	;volatile
 13661   01445E  EF32  F0A2         	goto	l484
 13662   014462                     l4453:
 13663   014462  8ED3               	bsf	211,7,c	;volatile
 13664   014464                     l484:
 13665                           
 13666                           ;LCD_LIB.c: 19:     PORTF &= ~(1<<1);
 13667   014464  92D3               	bcf	211,1,c	;volatile
 13668                           
 13669                           ;LCD_LIB.c: 20:     PORTF |= (1<<1);
 13670   014466  82D3               	bsf	211,1,c	;volatile
 13671                           
 13672                           ;LCD_LIB.c: 21:     PORTF &= ~(1<<1);
 13673   014468  92D3               	bcf	211,1,c	;volatile
 13674   01446A                     
 13675                           ;LCD_LIB.c: 23:     _delay((unsigned long)((300)*(64000000UL/4000000.0)));
 13676   01446A  0E07               	movlw	7
 13677   01446C  6E01               	movwf	??__write_nibble^(0+1280),c
 13678   01446E  0E3A               	movlw	58
 13679   014470                     u7317:
 13680   014470  2EE8               	decfsz	wreg,f,c
 13681   014472  D7FE               	bra	u7317
 13682   014474  2E01               	decfsz	??__write_nibble^(0+1280),f,c
 13683   014476  D7FC               	bra	u7317
 13684   014478  D000               	nop2	
 13685   01447A  0012               	return		;funcret
 13686   01447C                     __end_of__write_nibble:
 13687                           	callstack 0
 13688                           
 13689 ;; *************** function ___flge *****************
 13690 ;; Defined at:
 13691 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 13692 ;; Parameters:    Size  Location     Type
 13693 ;;  ff1             4   25[COMRAM] void 
 13694 ;;  ff2             4   29[COMRAM] void 
 13695 ;; Auto vars:     Size  Location     Type
 13696 ;;		None
 13697 ;; Return value:  Size  Location     Type
 13698 ;;		None               void
 13699 ;; Registers used:
 13700 ;;		wreg, status,2, status,0
 13701 ;; Tracked objects:
 13702 ;;		On entry : 0/0
 13703 ;;		On exit  : 0/0
 13704 ;;		Unchanged: 0/0
 13705 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13706 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13708 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13709 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13710 ;;Total ram usage:       12 bytes
 13711 ;; Hardware stack levels used: 1
 13712 ;; This function calls:
 13713 ;;		Nothing
 13714 ;; This function is called by:
 13715 ;;		_main
 13716 ;;		_Advertencia
 13717 ;;		_efgtoa
 13718 ;; This function uses a non-reentrant model
 13719 ;;
 13720                           
 13721                           	psect	text56
 13722   013C38                     __ptext56:
 13723                           	callstack 0
 13724   013C38                     ___flge:
 13725                           	callstack 126
 13726   013C38  0E00               	movlw	0
 13727   013C3A  141A               	andwf	___flge@ff1^(0+1280),w,c
 13728   013C3C  6E22               	movwf	??___flge^(0+1280),c
 13729   013C3E  0E00               	movlw	0
 13730   013C40  141B               	andwf	(___flge@ff1+1)^(0+1280),w,c
 13731   013C42  6E23               	movwf	(??___flge+1)^(0+1280),c
 13732   013C44  0E80               	movlw	128
 13733   013C46  141C               	andwf	(___flge@ff1+2)^(0+1280),w,c
 13734   013C48  6E24               	movwf	(??___flge+2)^(0+1280),c
 13735   013C4A  0E7F               	movlw	127
 13736   013C4C  141D               	andwf	(___flge@ff1+3)^(0+1280),w,c
 13737   013C4E  6E25               	movwf	(??___flge+3)^(0+1280),c
 13738   013C50  5022               	movf	??___flge^(0+1280),w,c
 13739   013C52  1023               	iorwf	(??___flge+1)^(0+1280),w,c
 13740   013C54  1024               	iorwf	(??___flge+2)^(0+1280),w,c
 13741   013C56  1025               	iorwf	(??___flge+3)^(0+1280),w,c
 13742   013C58  A4D8               	btfss	status,2,c
 13743   013C5A  EF31  F09E         	goto	u4551
 13744   013C5E  EF33  F09E         	goto	u4550
 13745   013C62                     u4551:
 13746   013C62  EF3B  F09E         	goto	l5063
 13747   013C66                     u4550:
 13748   013C66  0E00               	movlw	0
 13749   013C68  6E1A               	movwf	___flge@ff1^(0+1280),c
 13750   013C6A  0E00               	movlw	0
 13751   013C6C  6E1B               	movwf	(___flge@ff1+1)^(0+1280),c
 13752   013C6E  0E00               	movlw	0
 13753   013C70  6E1C               	movwf	(___flge@ff1+2)^(0+1280),c
 13754   013C72  0E00               	movlw	0
 13755   013C74  6E1D               	movwf	(___flge@ff1+3)^(0+1280),c
 13756   013C76                     l5063:
 13757   013C76  0E00               	movlw	0
 13758   013C78  141E               	andwf	___flge@ff2^(0+1280),w,c
 13759   013C7A  6E22               	movwf	??___flge^(0+1280),c
 13760   013C7C  0E00               	movlw	0
 13761   013C7E  141F               	andwf	(___flge@ff2+1)^(0+1280),w,c
 13762   013C80  6E23               	movwf	(??___flge+1)^(0+1280),c
 13763   013C82  0E80               	movlw	128
 13764   013C84  1420               	andwf	(___flge@ff2+2)^(0+1280),w,c
 13765   013C86  6E24               	movwf	(??___flge+2)^(0+1280),c
 13766   013C88  0E7F               	movlw	127
 13767   013C8A  1421               	andwf	(___flge@ff2+3)^(0+1280),w,c
 13768   013C8C  6E25               	movwf	(??___flge+3)^(0+1280),c
 13769   013C8E  5022               	movf	??___flge^(0+1280),w,c
 13770   013C90  1023               	iorwf	(??___flge+1)^(0+1280),w,c
 13771   013C92  1024               	iorwf	(??___flge+2)^(0+1280),w,c
 13772   013C94  1025               	iorwf	(??___flge+3)^(0+1280),w,c
 13773   013C96  A4D8               	btfss	status,2,c
 13774   013C98  EF50  F09E         	goto	u4561
 13775   013C9C  EF52  F09E         	goto	u4560
 13776   013CA0                     u4561:
 13777   013CA0  EF5A  F09E         	goto	l5067
 13778   013CA4                     u4560:
 13779   013CA4  0E00               	movlw	0
 13780   013CA6  6E1E               	movwf	___flge@ff2^(0+1280),c
 13781   013CA8  0E00               	movlw	0
 13782   013CAA  6E1F               	movwf	(___flge@ff2+1)^(0+1280),c
 13783   013CAC  0E00               	movlw	0
 13784   013CAE  6E20               	movwf	(___flge@ff2+2)^(0+1280),c
 13785   013CB0  0E00               	movlw	0
 13786   013CB2  6E21               	movwf	(___flge@ff2+3)^(0+1280),c
 13787   013CB4                     l5067:
 13788   013CB4  AE1D               	btfss	(___flge@ff1+3)^(0+1280),7,c
 13789   013CB6  EF5F  F09E         	goto	u4571
 13790   013CBA  EF61  F09E         	goto	u4570
 13791   013CBE                     u4571:
 13792   013CBE  EF6A  F09E         	goto	l5071
 13793   013CC2                     u4570:
 13794   013CC2  6C1A               	negf	___flge@ff1^(0+1280),c
 13795   013CC4  1E1B               	comf	(___flge@ff1+1)^(0+1280),f,c
 13796   013CC6  B0D8               	btfsc	status,0,c
 13797   013CC8  2A1B               	incf	(___flge@ff1+1)^(0+1280),f,c
 13798   013CCA  1E1C               	comf	(___flge@ff1+2)^(0+1280),f,c
 13799   013CCC  B0D8               	btfsc	status,0,c
 13800   013CCE  2A1C               	incf	(___flge@ff1+2)^(0+1280),f,c
 13801   013CD0  0E80               	movlw	128
 13802   013CD2  561D               	subfwb	(___flge@ff1+3)^(0+1280),f,c
 13803   013CD4                     l5071:
 13804   013CD4  AE21               	btfss	(___flge@ff2+3)^(0+1280),7,c
 13805   013CD6  EF6F  F09E         	goto	u4581
 13806   013CDA  EF71  F09E         	goto	u4580
 13807   013CDE                     u4581:
 13808   013CDE  EF7A  F09E         	goto	l828
 13809   013CE2                     u4580:
 13810   013CE2  6C1E               	negf	___flge@ff2^(0+1280),c
 13811   013CE4  1E1F               	comf	(___flge@ff2+1)^(0+1280),f,c
 13812   013CE6  B0D8               	btfsc	status,0,c
 13813   013CE8  2A1F               	incf	(___flge@ff2+1)^(0+1280),f,c
 13814   013CEA  1E20               	comf	(___flge@ff2+2)^(0+1280),f,c
 13815   013CEC  B0D8               	btfsc	status,0,c
 13816   013CEE  2A20               	incf	(___flge@ff2+2)^(0+1280),f,c
 13817   013CF0  0E80               	movlw	128
 13818   013CF2  5621               	subfwb	(___flge@ff2+3)^(0+1280),f,c
 13819   013CF4                     l828:
 13820   013CF4  0E00               	movlw	0
 13821   013CF6  1A1A               	xorwf	___flge@ff1^(0+1280),f,c
 13822   013CF8  0E00               	movlw	0
 13823   013CFA  1A1B               	xorwf	(___flge@ff1+1)^(0+1280),f,c
 13824   013CFC  0E00               	movlw	0
 13825   013CFE  1A1C               	xorwf	(___flge@ff1+2)^(0+1280),f,c
 13826   013D00  0E80               	movlw	128
 13827   013D02  1A1D               	xorwf	(___flge@ff1+3)^(0+1280),f,c
 13828   013D04  0E00               	movlw	0
 13829   013D06  1A1E               	xorwf	___flge@ff2^(0+1280),f,c
 13830   013D08  0E00               	movlw	0
 13831   013D0A  1A1F               	xorwf	(___flge@ff2+1)^(0+1280),f,c
 13832   013D0C  0E00               	movlw	0
 13833   013D0E  1A20               	xorwf	(___flge@ff2+2)^(0+1280),f,c
 13834   013D10  0E80               	movlw	128
 13835   013D12  1A21               	xorwf	(___flge@ff2+3)^(0+1280),f,c
 13836   013D14  501E               	movf	___flge@ff2^(0+1280),w,c
 13837   013D16  5C1A               	subwf	___flge@ff1^(0+1280),w,c
 13838   013D18  501F               	movf	(___flge@ff2+1)^(0+1280),w,c
 13839   013D1A  581B               	subwfb	(___flge@ff1+1)^(0+1280),w,c
 13840   013D1C  5020               	movf	(___flge@ff2+2)^(0+1280),w,c
 13841   013D1E  581C               	subwfb	(___flge@ff1+2)^(0+1280),w,c
 13842   013D20  5021               	movf	(___flge@ff2+3)^(0+1280),w,c
 13843   013D22  581D               	subwfb	(___flge@ff1+3)^(0+1280),w,c
 13844   013D24  B0D8               	btfsc	status,0,c
 13845   013D26  EF97  F09E         	goto	u4591
 13846   013D2A  EF99  F09E         	goto	u4590
 13847   013D2E                     u4591:
 13848   013D2E  EF9C  F09E         	goto	l5077
 13849   013D32                     u4590:
 13850   013D32  90D8               	bcf	status,0,c
 13851   013D34  EF9D  F09E         	goto	l833
 13852   013D38                     l5077:
 13853   013D38  80D8               	bsf	status,0,c
 13854   013D3A                     l833:
 13855   013D3A  0012               	return		;funcret
 13856   013D3C                     __end_of___flge:
 13857                           	callstack 0
 13858                           
 13859 ;; *************** function _ADC_Read *****************
 13860 ;; Defined at:
 13861 ;;		line 14 in file "ADC_LIB.c"
 13862 ;; Parameters:    Size  Location     Type
 13863 ;;  ch              1    wreg     unsigned char 
 13864 ;; Auto vars:     Size  Location     Type
 13865 ;;  ch              1    4[COMRAM] unsigned char 
 13866 ;; Return value:  Size  Location     Type
 13867 ;;                  2    0[COMRAM] unsigned short 
 13868 ;; Registers used:
 13869 ;;		wreg, status,2, status,0
 13870 ;; Tracked objects:
 13871 ;;		On entry : 0/0
 13872 ;;		On exit  : 0/0
 13873 ;;		Unchanged: 0/0
 13874 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13878 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13879 ;;Total ram usage:        5 bytes
 13880 ;; Hardware stack levels used: 1
 13881 ;; This function calls:
 13882 ;;		Nothing
 13883 ;; This function is called by:
 13884 ;;		_main
 13885 ;; This function uses a non-reentrant model
 13886 ;;
 13887                           
 13888                           	psect	text57
 13889   0149AA                     __ptext57:
 13890                           	callstack 0
 13891   0149AA                     _ADC_Read:
 13892                           	callstack 126
 13893                           
 13894                           ;incstack = 0
 13895                           ;ADC_Read@ch stored from wreg
 13896   0149AA  6E05               	movwf	ADC_Read@ch^(0+1280),c
 13897   0149AC                     
 13898                           ;ADC_LIB.c: 15:     ADPCH = ch;
 13899   0149AC  C505  F3EC         	movff	ADC_Read@ch,1004	;volatile
 13900   0149B0                     
 13901                           ;ADC_LIB.c: 16:     ADCON0bits.GO = 1;
 13902   0149B0  0103               	movlb	3	; () banked
 13903   0149B2  81F3               	bsf	243,0,b	;volatile
 13904   0149B4                     l463:
 13905                           
 13906                           ; BSR set to: 3
 13907   0149B4  B1F3               	btfsc	243,0,b	;volatile
 13908   0149B6  EFDF  F0A4         	goto	u5761
 13909   0149BA  EFE1  F0A4         	goto	u5760
 13910   0149BE                     u5761:
 13911   0149BE  EFDA  F0A4         	goto	l463
 13912   0149C2                     u5760:
 13913   0149C2                     
 13914                           ; BSR set to: 3
 13915                           ;ADC_LIB.c: 18:     return( (uint16_t)( (ADRESH<<8) | ADRESL ) );
 13916   0149C2  51EA               	movf	234,w,b	;volatile
 13917   0149C4  C3EB F503          	movff	1003,??_ADC_Read	;volatile
 13918   0149C8  6A04               	clrf	(??_ADC_Read+1)^(0+1280),c
 13919   0149CA  C503  F504         	movff	??_ADC_Read,??_ADC_Read+1
 13920   0149CE  6A03               	clrf	??_ADC_Read^(0+1280),c
 13921   0149D0  1003               	iorwf	??_ADC_Read^(0+1280),w,c
 13922   0149D2  6E01               	movwf	?_ADC_Read^(0+1280),c
 13923   0149D4  5004               	movf	(??_ADC_Read+1)^(0+1280),w,c
 13924   0149D6  6E02               	movwf	(?_ADC_Read+1)^(0+1280),c
 13925   0149D8                     
 13926                           ; BSR set to: 3
 13927   0149D8  0012               	return		;funcret
 13928   0149DA                     __end_of_ADC_Read:
 13929                           	callstack 0
 13930                           
 13931 ;; *************** function _ADC_Init *****************
 13932 ;; Defined at:
 13933 ;;		line 4 in file "ADC_LIB.c"
 13934 ;; Parameters:    Size  Location     Type
 13935 ;;		None
 13936 ;; Auto vars:     Size  Location     Type
 13937 ;;		None
 13938 ;; Return value:  Size  Location     Type
 13939 ;;                  1    wreg      void 
 13940 ;; Registers used:
 13941 ;;		wreg, status,2
 13942 ;; Tracked objects:
 13943 ;;		On entry : 0/0
 13944 ;;		On exit  : 0/0
 13945 ;;		Unchanged: 0/0
 13946 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
 13947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13951 ;;Total ram usage:        0 bytes
 13952 ;; Hardware stack levels used: 1
 13953 ;; This function calls:
 13954 ;;		Nothing
 13955 ;; This function is called by:
 13956 ;;		_main
 13957 ;; This function uses a non-reentrant model
 13958 ;;
 13959                           
 13960                           	psect	text58
 13961   014A52                     __ptext58:
 13962                           	callstack 0
 13963   014A52                     _ADC_Init:
 13964                           	callstack 126
 13965   014A52                     
 13966                           ;ADC_LIB.c: 5:     ADCON2bits.MD = 0;
 13967   014A52  0EF8               	movlw	-8
 13968   014A54  0103               	movlb	3	; () banked
 13969   014A56  17F5               	andwf	245,f,b	;volatile
 13970                           
 13971                           ;ADC_LIB.c: 6:     ADCON0bits.FM = 1;
 13972   014A58  51F3               	movf	243,w,b	;volatile
 13973   014A5A  0BF3               	andlw	-13
 13974   014A5C  0904               	iorlw	4
 13975   014A5E  6FF3               	movwf	243,b	;volatile
 13976   014A60                     
 13977                           ; BSR set to: 3
 13978                           ;ADC_LIB.c: 7:     ADCON0bits.CS = 1;
 13979   014A60  89F3               	bsf	243,4,b	;volatile
 13980   014A62                     
 13981                           ; BSR set to: 3
 13982                           ;ADC_LIB.c: 8:     ADCON0bits.CONT = 0;
 13983   014A62  9DF3               	bcf	243,6,b	;volatile
 13984                           
 13985                           ;ADC_LIB.c: 9:     ADREFbits.NREF = 0;
 13986   014A64  0E0F               	movlw	-241
 13987   014A66  17F8               	andwf	248,f,b	;volatile
 13988                           
 13989                           ;ADC_LIB.c: 10:     ADREFbits.PREF = 0;
 13990   014A68  0EF0               	movlw	-16
 13991   014A6A  17F8               	andwf	248,f,b	;volatile
 13992   014A6C                     
 13993                           ; BSR set to: 3
 13994                           ;ADC_LIB.c: 11:     ADCON0bits.ON = 1;
 13995   014A6C  8FF3               	bsf	243,7,b	;volatile
 13996   014A6E                     
 13997                           ; BSR set to: 3
 13998   014A6E  0012               	return		;funcret
 13999   014A70                     __end_of_ADC_Init:
 14000                           	callstack 0
 14001                           
 14002                           	psect	rparam
 14003   000000                     
 14004                           	psect	idloc
 14005                           
 14006                           ;Config register IDLOC0 @ 0x200000
 14007                           ;	unspecified, using default values
 14008   200000                     	org	2097152
 14009   200000  0FFF               	dw	4095
 14010                           
 14011                           ;Config register IDLOC1 @ 0x200002
 14012                           ;	unspecified, using default values
 14013   200002                     	org	2097154
 14014   200002  0FFF               	dw	4095
 14015                           
 14016                           ;Config register IDLOC2 @ 0x200004
 14017                           ;	unspecified, using default values
 14018   200004                     	org	2097156
 14019   200004  0FFF               	dw	4095
 14020                           
 14021                           ;Config register IDLOC3 @ 0x200006
 14022                           ;	unspecified, using default values
 14023   200006                     	org	2097158
 14024   200006  0FFF               	dw	4095
 14025                           
 14026                           ;Config register IDLOC4 @ 0x200008
 14027                           ;	unspecified, using default values
 14028   200008                     	org	2097160
 14029   200008  0FFF               	dw	4095
 14030                           
 14031                           ;Config register IDLOC5 @ 0x20000A
 14032                           ;	unspecified, using default values
 14033   20000A                     	org	2097162
 14034   20000A  0FFF               	dw	4095
 14035                           
 14036                           ;Config register IDLOC6 @ 0x20000C
 14037                           ;	unspecified, using default values
 14038   20000C                     	org	2097164
 14039   20000C  0FFF               	dw	4095
 14040                           
 14041                           ;Config register IDLOC7 @ 0x20000E
 14042                           ;	unspecified, using default values
 14043   20000E                     	org	2097166
 14044   20000E  0FFF               	dw	4095
 14045                           
 14046                           ;Config register IDLOC8 @ 0x200010
 14047                           ;	unspecified, using default values
 14048   200010                     	org	2097168
 14049   200010  0FFF               	dw	4095
 14050                           
 14051                           ;Config register IDLOC9 @ 0x200012
 14052                           ;	unspecified, using default values
 14053   200012                     	org	2097170
 14054   200012  0FFF               	dw	4095
 14055                           
 14056                           ;Config register IDLOC10 @ 0x200014
 14057                           ;	unspecified, using default values
 14058   200014                     	org	2097172
 14059   200014  0FFF               	dw	4095
 14060                           
 14061                           ;Config register IDLOC11 @ 0x200016
 14062                           ;	unspecified, using default values
 14063   200016                     	org	2097174
 14064   200016  0FFF               	dw	4095
 14065                           
 14066                           ;Config register IDLOC12 @ 0x200018
 14067                           ;	unspecified, using default values
 14068   200018                     	org	2097176
 14069   200018  0FFF               	dw	4095
 14070                           
 14071                           ;Config register IDLOC13 @ 0x20001A
 14072                           ;	unspecified, using default values
 14073   20001A                     	org	2097178
 14074   20001A  0FFF               	dw	4095
 14075                           
 14076                           ;Config register IDLOC14 @ 0x20001C
 14077                           ;	unspecified, using default values
 14078   20001C                     	org	2097180
 14079   20001C  0FFF               	dw	4095
 14080                           
 14081                           ;Config register IDLOC15 @ 0x20001E
 14082                           ;	unspecified, using default values
 14083   20001E                     	org	2097182
 14084   20001E  0FFF               	dw	4095
 14085                           
 14086                           ;Config register IDLOC16 @ 0x200020
 14087                           ;	unspecified, using default values
 14088   200020                     	org	2097184
 14089   200020  0FFF               	dw	4095
 14090                           
 14091                           ;Config register IDLOC17 @ 0x200022
 14092                           ;	unspecified, using default values
 14093   200022                     	org	2097186
 14094   200022  0FFF               	dw	4095
 14095                           
 14096                           ;Config register IDLOC18 @ 0x200024
 14097                           ;	unspecified, using default values
 14098   200024                     	org	2097188
 14099   200024  0FFF               	dw	4095
 14100                           
 14101                           ;Config register IDLOC19 @ 0x200026
 14102                           ;	unspecified, using default values
 14103   200026                     	org	2097190
 14104   200026  0FFF               	dw	4095
 14105                           
 14106                           ;Config register IDLOC20 @ 0x200028
 14107                           ;	unspecified, using default values
 14108   200028                     	org	2097192
 14109   200028  0FFF               	dw	4095
 14110                           
 14111                           ;Config register IDLOC21 @ 0x20002A
 14112                           ;	unspecified, using default values
 14113   20002A                     	org	2097194
 14114   20002A  0FFF               	dw	4095
 14115                           
 14116                           ;Config register IDLOC22 @ 0x20002C
 14117                           ;	unspecified, using default values
 14118   20002C                     	org	2097196
 14119   20002C  0FFF               	dw	4095
 14120                           
 14121                           ;Config register IDLOC23 @ 0x20002E
 14122                           ;	unspecified, using default values
 14123   20002E                     	org	2097198
 14124   20002E  0FFF               	dw	4095
 14125                           
 14126                           ;Config register IDLOC24 @ 0x200030
 14127                           ;	unspecified, using default values
 14128   200030                     	org	2097200
 14129   200030  0FFF               	dw	4095
 14130                           
 14131                           ;Config register IDLOC25 @ 0x200032
 14132                           ;	unspecified, using default values
 14133   200032                     	org	2097202
 14134   200032  0FFF               	dw	4095
 14135                           
 14136                           ;Config register IDLOC26 @ 0x200034
 14137                           ;	unspecified, using default values
 14138   200034                     	org	2097204
 14139   200034  0FFF               	dw	4095
 14140                           
 14141                           ;Config register IDLOC27 @ 0x200036
 14142                           ;	unspecified, using default values
 14143   200036                     	org	2097206
 14144   200036  0FFF               	dw	4095
 14145                           
 14146                           ;Config register IDLOC28 @ 0x200038
 14147                           ;	unspecified, using default values
 14148   200038                     	org	2097208
 14149   200038  0FFF               	dw	4095
 14150                           
 14151                           ;Config register IDLOC29 @ 0x20003A
 14152                           ;	unspecified, using default values
 14153   20003A                     	org	2097210
 14154   20003A  0FFF               	dw	4095
 14155                           
 14156                           ;Config register IDLOC30 @ 0x20003C
 14157                           ;	unspecified, using default values
 14158   20003C                     	org	2097212
 14159   20003C  0FFF               	dw	4095
 14160                           
 14161                           ;Config register IDLOC31 @ 0x20003E
 14162                           ;	unspecified, using default values
 14163   20003E                     	org	2097214
 14164   20003E  0FFF               	dw	4095
 14165                           
 14166                           	psect	config
 14167                           
 14168                           ;Config register CONFIG1 @ 0x300000
 14169                           ;	External Oscillator Selection
 14170                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
 14171                           ;	Reset Oscillator Selection
 14172                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 14173   300000                     	org	3145728
 14174   300000  8F                 	db	143
 14175                           
 14176                           ;Config register CONFIG2 @ 0x300001
 14177                           ;	Clock out Enable bit
 14178                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 14179                           ;	PRLOCKED One-Way Set Enable bit
 14180                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 14181                           ;	Clock Switch Enable bit
 14182                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 14183                           ;	Fail-Safe Clock Monitor Enable bit
 14184                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14185   300001                     	org	3145729
 14186   300001  DF                 	db	223
 14187                           
 14188                           ;Config register CONFIG3 @ 0x300002
 14189                           ;	MCLR Enable bit
 14190                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 14191                           ;	Power-up timer selection bits
 14192                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 14193                           ;	Multi-vector enable bit
 14194                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 14195                           ;	IVTLOCK bit One-way set enable bit
 14196                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 14197                           ;	Low Power BOR Enable bit
 14198                           ;	LPBOREN = OFF, Low-Power BOR disabled
 14199                           ;	Brown-out Reset Enable bits
 14200                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 14201   300002                     	org	3145730
 14202   300002  FF                 	db	255
 14203                           
 14204                           ;Config register CONFIG4 @ 0x300003
 14205                           ;	Brown-out Reset Voltage Selection bits
 14206                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 14207                           ;	ZCD Disable bit
 14208                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 14209                           ;	PPSLOCK bit One-Way Set Enable bit
 14210                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 14211                           ;	Stack Full/Underflow Reset Enable bit
 14212                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14213                           ;	Low Voltage Programming Enable bit
 14214                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
 14215                           ;	Extended Instruction Set Enable bit
 14216                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 14217   300003                     	org	3145731
 14218   300003  DF                 	db	223
 14219                           
 14220                           ;Config register CONFIG5 @ 0x300004
 14221                           ;	WDT Period selection bits
 14222                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14223                           ;	WDT operating mode
 14224                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 14225   300004                     	org	3145732
 14226   300004  9F                 	db	159
 14227                           
 14228                           ;Config register CONFIG6 @ 0x300005
 14229                           ;	WDT Window Select bits
 14230                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 14231                           ;	WDT input clock selector
 14232                           ;	WDTCCS = SC, Software Control
 14233   300005                     	org	3145733
 14234   300005  FF                 	db	255
 14235                           
 14236                           ;Config register CONFIG7 @ 0x300006
 14237                           ;	Boot Block Size selection bits
 14238                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 14239                           ;	Boot Block enable bit
 14240                           ;	BBEN = OFF, Boot block disabled
 14241                           ;	Storage Area Flash enable bit
 14242                           ;	SAFEN = OFF, SAF disabled
 14243                           ;	Background Debugger
 14244                           ;	DEBUG = ON, Background Debugger enabled
 14245   300006                     	org	3145734
 14246   300006  DF                 	db	223
 14247                           
 14248                           ;Config register CONFIG8 @ 0x300007
 14249                           ;	Boot Block Write Protection bit
 14250                           ;	WRTB = OFF, Boot Block not Write protected
 14251                           ;	Configuration Register Write Protection bit
 14252                           ;	WRTC = OFF, Configuration registers not Write protected
 14253                           ;	Data EEPROM Write Protection bit
 14254                           ;	WRTD = OFF, Data EEPROM not Write protected
 14255                           ;	SAF Write protection bit
 14256                           ;	WRTSAF = OFF, SAF not Write Protected
 14257                           ;	Application Block write protection bit
 14258                           ;	WRTAPP = OFF, Application Block not write protected
 14259   300007                     	org	3145735
 14260   300007  FF                 	db	255
 14261                           
 14262                           ; Padding undefined space
 14263   300008                     	org	3145736
 14264   300008  FF                 	db	255
 14265                           
 14266                           ;Config register CONFIG10 @ 0x300009
 14267                           ;	PFM and Data EEPROM Code Protection bit
 14268                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 14269   300009                     	org	3145737
 14270   300009  FF                 	db	255
 14271                           tosu	equ	0x4FF
 14272                           tosh	equ	0x4FE
 14273                           tosl	equ	0x4FD
 14274                           stkptr	equ	0x4FC
 14275                           pclatu	equ	0x4FB
 14276                           pclath	equ	0x4FA
 14277                           pcl	equ	0x4F9
 14278                           tblptru	equ	0x4F8
 14279                           tblptrh	equ	0x4F7
 14280                           tblptrl	equ	0x4F6
 14281                           tablat	equ	0x4F5
 14282                           prodh	equ	0x4F4
 14283                           prodl	equ	0x4F3
 14284                           indf0	equ	0x4EF
 14285                           postinc0	equ	0x4EE
 14286                           postdec0	equ	0x4ED
 14287                           preinc0	equ	0x4EC
 14288                           plusw0	equ	0x4EB
 14289                           fsr0h	equ	0x4EA
 14290                           fsr0l	equ	0x4E9
 14291                           wreg	equ	0x4E8
 14292                           indf1	equ	0x4E7
 14293                           postinc1	equ	0x4E6
 14294                           postdec1	equ	0x4E5
 14295                           preinc1	equ	0x4E4
 14296                           plusw1	equ	0x4E3
 14297                           fsr1h	equ	0x4E2
 14298                           fsr1l	equ	0x4E1
 14299                           bsr	equ	0x4E0
 14300                           indf2	equ	0x4DF
 14301                           postinc2	equ	0x4DE
 14302                           postdec2	equ	0x4DD
 14303                           preinc2	equ	0x4DC
 14304                           plusw2	equ	0x4DB
 14305                           fsr2h	equ	0x4DA
 14306                           fsr2l	equ	0x4D9
 14307                           status	equ	0x4D8

Data Sizes:
    Strings     263
    Constant    0
    Data        38
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK5           160     71     134
    BANK6           256      0      80
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_25(CODE[4]), STR_22(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_25(CODE[4]), STR_22(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK5[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK5[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[9]), STR_15(CODE[8]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK5[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK5[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[9]), STR_15(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[9]), STR_15(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK5[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[9]), STR_15(CODE[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK5[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1441$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK5[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK5[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK5[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_17(CODE[9]), STR_15(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> auxStr(BANK5[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK5[2]), 

    S1357$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1357$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    lcd_out@str	PTR unsigned char  size(2) Largest target is 20
		 -> STR_21(CODE[14]), STR_20(CODE[14]), STR_19(CODE[8]), STR_18(CODE[12]), 
		 -> STR_16(CODE[3]), auxStr(BANK5[20]), STR_14(CODE[17]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    lcd_custom_char@charmap	PTR unsigned char  size(2) Largest target is 8
		 -> fig2(BANK5[8]), fig1(BANK5[8]), 


Critical Paths under _main in COMRAM

    _main->_MenuS
    _lcd_init->_lcd_command
    _lcd_disable_cursor->_lcd_command
    _lcd_disable_blink->_lcd_command
    _lcd_custom_char->_lcd_command
    _lcd_custom_char->_lcd_write
    ___xxtofl->_ADC_Read
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _MenuPrincipalCon->_lcd_out
    _MenuPrincipal->_lcd_out
    _MenuMotor->_lcd_out
    _MenuLedCon->_Sec3Est
    _Sec3Est->_lcd_char
    _MenuLed->_Sec1Est
    _MenuLed->_Sec2Est
    _Sec2Est->_lcd_char
    _Sec1Est->_lcd_char
    _MenuCalentador->_lcd_out
    _lcd_clear->_lcd_command
    _lcd_char->_lcd_set_cursor
    _Advertencia2->_lcd_out
    _Advertencia->___flge
    _lcd_out->_lcd_set_cursor
    _lcd_write->__send_byte
    _lcd_set_cursor->_lcd_command
    _lcd_command->__send_byte
    __send_byte->__write_nibble
    ___flge->___flmul

Critical Paths under _main in BANK5

    _MenuS->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  188037
                                             88 COMRAM     6     6      0
                           _ADC_Init
                           _ADC_Read
                        _Advertencia
                       _Advertencia2
                         _Clock_Init
                     _MenuCalentador
                            _MenuLed
                         _MenuLedCon
                          _MenuMotor
                      _MenuPrincipal
                   _MenuPrincipalCon
                              _MenuS
                             ___flge
                            ___flmul
                           ___xxtofl
                       _getdistancia
                          _lcd_clear
                    _lcd_custom_char
                  _lcd_disable_blink
                 _lcd_disable_cursor
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     416
                                              7 COMRAM     2     2      0
                      __write_nibble
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_disable_cursor                                   0     0      0     328
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_disable_blink                                    0     0      0     328
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_custom_char                                      5     3      2     920
                                              7 COMRAM     5     3      2
                        _lcd_command
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _getdistancia                                         4     2      2      24
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              5 COMRAM    14    10      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _MenuS                                                2     2      0   44182
                                             86 COMRAM     2     2      0
                           _lcd_char
                          _lcd_clear
                            _lcd_out
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    15      8   28487
                                             50 BANK5     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   27976
                                             84 COMRAM     2     2      0
                                             44 BANK5      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           24    18      6   27601
                                             62 COMRAM    22    16      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              54    47      7   19572
                                             45 COMRAM     9     2      7
                                              0 BANK5     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    2656
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4551
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2879
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1083
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 9     7      2    1232
                                              6 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              5     3      2     207
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              4     2      2     313
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _MenuPrincipalCon                                     2     2      0   15695
                                             15 COMRAM     2     2      0
                           _lcd_char
                          _lcd_clear
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _MenuPrincipal                                        2     2      0   15695
                                             15 COMRAM     2     2      0
                           _lcd_char
                          _lcd_clear
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _MenuMotor                                            2     2      0   15695
                                             15 COMRAM     2     2      0
                           _lcd_char
                          _lcd_clear
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _MenuLedCon                                           2     2      0   27015
                                             16 COMRAM     2     2      0
                            _Sec3Est
                           _lcd_char
                          _lcd_clear
                            _lcd_out
 ---------------------------------------------------------------------------------
 (2) _Sec3Est                                              2     2      0   11320
                                             14 COMRAM     2     2      0
                           _lcd_char
 ---------------------------------------------------------------------------------
 (1) _MenuLed                                              2     2      0   38335
                                             16 COMRAM     2     2      0
                            _Sec1Est
                            _Sec2Est
                           _lcd_char
                          _lcd_clear
                            _lcd_out
 ---------------------------------------------------------------------------------
 (2) _Sec2Est                                              2     2      0   11320
                                             14 COMRAM     2     2      0
                           _lcd_char
 ---------------------------------------------------------------------------------
 (2) _Sec1Est                                              2     2      0   11320
                                             14 COMRAM     2     2      0
                           _lcd_char
 ---------------------------------------------------------------------------------
 (1) _MenuCalentador                                       2     2      0   15695
                                             15 COMRAM     2     2      0
                           _lcd_char
                          _lcd_clear
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            1     1      0     328
                                              7 COMRAM     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_char                                             3     1      2   11320
                                             11 COMRAM     3     1      2
                     _lcd_set_cursor
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Advertencia2                                         0     0      0    4047
                            _lcd_out
 ---------------------------------------------------------------------------------
 (1) _Advertencia                                          0     0      0    5141
                             ___flge
                            _lcd_out
 ---------------------------------------------------------------------------------
 (2) _lcd_out                                              4     1      3    4047
                                             11 COMRAM     4     1      3
                     _lcd_set_cursor
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            1     1      0     328
                                              6 COMRAM     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_set_cursor                                       4     3      1     590
                                              7 COMRAM     4     3      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          1     1      0     328
                                              6 COMRAM     1     1      0
                         __send_byte
 ---------------------------------------------------------------------------------
 (3) __send_byte                                           4     3      1     306
                                              2 COMRAM     4     3      1
                      __write_nibble
 ---------------------------------------------------------------------------------
 (4) __write_nibble                                        2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    1094
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Advertencia
     ___flge
       ___flmul (ARG)
     _lcd_out
       _lcd_set_cursor
         _lcd_command
           __send_byte
             __write_nibble
       _lcd_write
         __send_byte
   _Advertencia2
     _lcd_out
   _Clock_Init
   _MenuCalentador
     _lcd_char
       _lcd_set_cursor
       _lcd_write
     _lcd_clear
       _lcd_command
     _lcd_out
   _MenuLed
     _Sec1Est
       _lcd_char
     _Sec2Est
       _lcd_char
     _lcd_char
     _lcd_clear
     _lcd_out
   _MenuLedCon
     _Sec3Est
       _lcd_char
     _lcd_char
     _lcd_clear
     _lcd_out
   _MenuMotor
     _lcd_char
     _lcd_clear
     _lcd_out
   _MenuPrincipal
     _lcd_char
     _lcd_clear
     _lcd_out
   _MenuPrincipalCon
     _lcd_char
     _lcd_clear
     _lcd_out
   _MenuS
     _lcd_char
     _lcd_clear
     _lcd_out
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
             _strcpy
           _fputc
           _isdigit
   ___flge
   ___flmul
   ___xxtofl
     _ADC_Read (ARG)
   _getdistancia
   _lcd_clear
   _lcd_custom_char
     _lcd_command
     _lcd_write
   _lcd_disable_blink
     _lcd_command
   _lcd_disable_cursor
     _lcd_command
   _lcd_init
     __write_nibble
     _lcd_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllllhh    338      0       0      83        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0      50       7       31.2%
BITBIGSFRlllll      AD      0       0      85        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0     47      86       5       83.8%
BITBIGSFRllhhhl     95      0       0      73        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRhh         2C      0       0      70        0.0%
BITBIGSFRllllhh      7      0       0      79        0.0%
BITBIGSFRllhhhh      7      0       0      72        0.0%
BITBIGSFRllhlh       7      0       0      76        0.0%
BITBIGSFRllhhlh      7      0       0      74        0.0%
BITBIGSFRlllh        7      0       0      78        0.0%
BITBIGSFRllllhh      6      0       0      82        0.0%
BITBIGSFRllhhll      6      0       0      75        0.0%
BITBIGSFRllhll       6      0       0      77        0.0%
BITBIGSFRllllhl      3      0       0      84        0.0%
BITBIGSFRlhh         3      0       0      71        0.0%
BITBIGSFRllllhh      2      0       0      80        0.0%
BITBIGSFRllllhh      1      0       0      81        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     135      86        0.0%
DATA                 0      0     135       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 17 19:46:39 2022

               lcd_char@col 050C                 lcd_char@row 050E                ___fldiv@aexp 0519  
              ___fldiv@bexp 0518                ___fldiv@sign 0511         ___wmul@multiplicand 0503  
             lcd_char@letra 050D                         l113 4710                         l230 20FA  
                       l118 4740                         l223 2094                         l215 2E6E  
                       l207 2E1C                         l119 4748                         l313 1BD6  
                       l401 309A                         l161 27E8                         l145 26B8  
                       l219 2072                         l155 28BC                         l332 427E  
                       l340 41D8                         l236 237C                         l324 1CA4  
                       l308 1B90                         l413 3000                         l149 26DA  
                       l501 430C                         l254 22EE                         l270 18FE  
                       l422 30AC                         l166 282E                         l182 2BFE  
                       l430 3F10                         l327 4200                         l335 415A  
                       l239 2198                         l343 4334                         l352 2966  
                       l328 41E8                         l336 4142                         l344 431C  
                       l424 30B4                         l408 2FBA                         l249 22A8  
                       l425 30BC                         l434 45B0                         l362 2B34  
                       l266 23C4                         l426 30F8                         l178 2924  
                       l283 19E2                         l275 1944                         l195 2CF0  
                       l187 2C44                         l460 4A6E                         l516 4408  
                       l356 2988                         l348 4396                         l540 4AB0  
                       l445 4A86                         l373 2AA4                         l438 4868  
                       l382 2B46                         l534 4AC4                         l463 49B4  
                       l519 4A9C                         l295 1C64                         l287 1A04  
                       l391 2EB0                         l199 2D12                         l551 4604  
                       l560 4AD8                         l384 2B52                         l368 2A5E  
                       l466 49D8                         l298 1A9A                         l387 2BCA  
                       l395 2ED2                         l563 4A50                         l484 4464  
                       l492 4796                         l485 447A                         l557 44E8  
                       l822 4132                         l495 4AE6                         l833 3D3A  
                       l498 4AF4                         l690 39D2                         l828 3CF4  
                       l860 3C36                         l677 386E                         l837 49A8  
             ?_getdistancia 0501      lcd_custom_char@charmap 0508                         _abs 4932  
                       _pad 3FDC                         wreg 0004E8                ___flmul@aexp 0512  
              ___flmul@bexp 0513                ___flmul@sign 050D                ___flmul@temp 0518  
              ___flmul@prod 0514             ?_lcd_set_cursor 0508                ___fltol@exp1 050A  
                      l1100 1492                        ?_abs 0513                        l1108 12DC  
                      l1117 13AC                        l1133 47DC                        l1221 36E6  
                      l1150 1E62                        l1118 139A                        l1232 367E  
                      l1305 267C                        l1145 203E                        l1321 01D8  
                      l1241 46AA                        l1225 3622                        l1218 358A  
                      l1147 1E9E                        l1091 11C2                        l1156 1EE4  
                      l1092 11B0                        l1316 0A62                        l1181 18BC  
                      l1093 1176                        l1430 4968                        l1510 3FDA  
                      l1158 1F5C                        l1159 1F4A                        l1319 0392  
                      l1415 4658                        l1184 174E                        l1433 4970  
                      l1521 4AF6                        l1281 4064                        l1177 1558  
                      l1425 3E38                        l1194 187E                        l1186 17C6  
                      l1283 4088                        l1291 246A                        l1187 17B4  
                      l1292 24B0                        l1349 07DA                        l1518 48F0  
                      l1278 4022                        l1455 3B28                        l1527 48AC  
                      l1464 3532                        l1289 2462                        l5001 177E  
                      l1393 0FD2                        l1474 4A04                        l1482 4822  
                      l1458 3B30                        l5011 17F0                        l5003 17AC  
                      l1467 3476                        l1492 454E                        l5021 1866  
                      l5013 181A                        l5101 3B98                        l5023 1882  
                      l5031 18A8                        l5007 17D6                        l5015 181E  
                      l5111 3BC2                        l5103 3B9C                        l6001 28EE  
                      l5033 18AC                        l5025 1892                        l5017 1838  
                      l5009 17E2                        l5121 3BEA                        l5113 3BCC  
                      l5105 3BAA                        l5201 349A                        l1489 453E  
                      l1498 46FA                        l6003 291A                        l5051 4106  
                      l5043 408A                        l5027 18A0                        l5019 184C  
                      l5123 3BF6                        l5115 3BD6                        l5203 34D6  
                      l5061 3C66                        l4421 3F36                        l5141 401A  
                      l5133 3FDC                        l5053 412A                        l5045 40B8  
                      l5029 18A2                        l4501 10C6                        l5037 4798  
                      l5125 3C06                        l5205 34EA                        l5221 46DC  
                      l5213 46AC                        l5071 3CD4                        l5063 3C76  
                      l4431 440C                        l6111 2080                        l6023 2C0C  
                      l5231 47E2                        l5151 4932                        l4423 3F40  
                      l5143 402E                        l5135 3FEC                        l5055 4130  
                      l5047 40C8                        l4511 10E4                        l4503 10D4  
                      l5039 47A8                        l5127 3C16                        l5207 3512  
                      l5215 46C0                        l5223 46E0                        l5311 0028  
                      l5303 0000                        l5073 3CE2                        l5065 3CA4  
                      l4441 4436                        l4433 441A                        l5241 4AEA  
                      l6201 2266                        l6121 20C4                        l6113 2086  
                      l6105 2040                        l6041 2CA0                        l6033 2C52  
                      l6025 2C12                        l6017 2BCC                        l5225 49DA  
                      l5233 47F6                        l5153 494C                        l4425 3F5E  
                      l4417 3F12                        l5145 4042                        l5137 4000  
                      l5049 40F6                        l5081 4972                        l4601 1320  
                      l4521 10F8                        l4513 10E8                        l4505 10D8  
                      l5129 3C26                        l5161 3DC2                        l5209 3522  
                      l5217 46CC                        l5401 03CA                        l5321 007E  
                      l5313 004C                        l5305 0006                        l5075 3D32  
                      l5067 3CB4                        l5059 3C38                        l4451 445C  
                      l4443 4438                        l4435 4420                        l6211 22B6  
                      l6203 2274                        l6131 2112                        l6123 20D0  
                      l6107 2064                        l6051 2D04                        l6043 2CAE  
                      l6035 2C5E                        l6027 2C2E                        l6019 2BF0  
                      l5235 4818                        l4427 3F94                        l4419 3F24  
                      l5147 4046                        l5139 400E                        l5251 242A  
                      l5243 23C6                        l5083 4988                        l4611 134A  
                      l4603 132E                        l4531 110C                        l4523 10FC  
                      l4515 10EC                        l4507 10DC                        l5091 3B48  
                      l5163 3DCE                        l5155 3D3C                        l5219 46D0  
                      l5403 03DC                        l5411 041C                        l5331 00CE  
                      l5323 008A                        l5315 0056                        l5307 0016  
                      l5077 3D38                        l5069 3CC2                        l4453 4462  
                      l4445 4446                        l4437 4422                        l6221 22FC  
                      l6213 22BC                        l6205 2282                        l6141 212E  
                      l6133 2116                        l6125 20EC                        l6117 20A2  
                      l6301 1A34                        l6061 2D4A                        l6045 2CE2  
                      l6037 2C7A                        l6029 2C36                        l5237 481C  
                      l5229 47DE                        l4701 374C                        l5149 4074  
                      l5261 2482                        l5253 243A                        l5245 23E6  
                      l5085 4998                        l4621 137C                        l4613 135A  
                      l4605 1330                        l4541 115E                        l4533 1110  
                      l4525 1100                        l4517 10F0                        l4509 10E0  
                      l4461 0FEE                        l5173 3E30                        l5157 3D5C  
                      l5181 44EA                        l5501 0902                        l5421 0504  
                      l5413 0424                        l5405 03EA                        l5341 0102  
                      l5333 00D2                        l5325 0092                        l5317 005E  
                      l5309 0024                        ?_pad 0511                        l4455 446A  
                      l4447 444C                        l4439 4430                        l6231 2336  
                      l6223 2304                        l6215 22D8                        l6207 229A  
                      l6151 2148                        l6143 2132                        l6135 211A  
                      l6119 20AA                        l6311 1A6C                        l6303 1A3C  
                      l6071 2D8C                        l6063 2D58                        l6055 2D20  
                      l6039 2C92                        l4711 3796                        l4703 3750  
                      l5271 24B8                        l5263 2488                        l5255 243C  
                      l5247 23FA                        l4631 13D6                        l4623 1392  
                      l4607 133E                        l4615 135C                        l4551 11A2  
                      l4543 116E                        l4527 1104                        l4519 10F4  
                      l4535 1114                        l4471 1022                        l4463 0FF0  
                      l5095 3B5C                        l5159 3D9A                        l5167 3DDA  
                      l5191 33AC                        l5183 4508                        l5511 0984  
                      l5503 0920                        l5431 05C2                        l5423 0538  
                      l5415 0434                        l5407 0402                        l5351 015E  
                      l5335 00D8                        l5319 006E                        l5327 0096  
                      l4449 444E                        l6241 238E                        l6225 2312  
                      l6217 22E0                        l6161 218A                        l6153 214C  
                      l6145 2134                        l6137 2122                        l6129 2108  
                      l6321 1AB2                        l6313 1A7E                        l6305 1A4A  
                      l6073 2DA8                        l6065 2D5C                        l6057 2D28  
                      l6049 2CFE                        l4721 3806                        l4713 37A4  
                      l4705 375C                        l5281 2556                        l5273 24C2  
                      l5265 2498                        l5257 2456                        l5249 240A  
                      l4801 1D58                        l4641 1452                        l4633 1410  
                      l4609 1346                        l4617 136A                        l4553 11A4  
                      l4545 1184                        l4537 1118                        l4529 1108  
                      l4481 1054                        l4465 1000                        l4473 102A  
                      l4457 0FD4                        l5097 3B86                        l5089 3B32  
                      l5169 3DEC                        l5193 33BA                        l5185 3322  
                      l5177 486A                        l5521 09D2                        l5513 0992  
                      l5505 093C                        l5441 065E                        l5433 05D8  
                      l5417 0448                        l5425 053E                        l5409 0414  
                      l5353 0164                        l5337 00E0                        l5329 00BC  
                      l5345 0122                        l5601 0ABC                        l6243 23BA  
                      l6227 2316                        l6171 21B8                        l6155 2154  
                      l6147 213C                        l6139 2126                        l6235 2348  
                      l6331 1ACE                        l6323 1AB6                        l6315 1A8C  
                      l6307 1A4E                        l6091 2E64                        l6075 2DB6  
                      l6067 2D66                        l6059 2D42                        l6083 2DE8  
                      l4723 3818                        l4715 37B6                        l4707 377A  
                      l5291 2626                        l5275 24C8                        l5283 25BA  
                      l5267 24A4                        l5259 2472                        l4811 1D98  
                      l4803 1D5A                        l4651 1472                        l4643 1456  
                      l4627 13BC                        l4635 1412                        l4619 136E  
                      l4571 122C                        l4563 11F4                        l4555 11AE  
                      l4547 1190                        l4539 1142                        l4491 108A  
                      l4483 105A                        l4475 103A                        l4467 1010  
                      l4459 0FE0                        l5099 3B88                        l5187 3342  
                      l5179 487A                        l5531 0A3A                        l5523 09D8  
                      l5515 09AA                        l5507 0944                        l5443 06B4  
                      l5451 0706                        l5435 060A                        l5427 055C  
                      l5419 04AC                        l5371 01EE                        l5355 016C  
                      l5347 0148                        l5363 0188                        l5339 00F8  
                      l5611 0B24                        l5603 0ACE                        l6421 2974  
                      l6413 2926                        l6237 238A                        l6229 2320  
                      l6181 21D8                        l6173 21C0                        l6165 21A6  
                      l6149 2140                        l6157 2158                        l6341 1AEA  
                      l6333 1AD2                        l6325 1ABA                        l6309 1A58  
                      l6261 18F0                        l6085 2E2A                        l6077 2DBA  
                      l6069 2D7A                        l4717 37E4                        l4709 3782  
                      l4725 381E                        l4741 38A6                        l4733 3870  
                      l4661 48BA                        l5285 25D4                        l5293 2636  
                      l5277 254A                        l5269 24AC                        l4821 1DC8  
                      l4813 1DA0                        l4805 1D62                        l4653 1480  
                      l4645 1464                        l4637 1422                        l4629 13C8  
                      l4573 1230                        l4565 1204                        l4557 11D0  
                      l4581 1250                        l4549 1194                        l4493 109A  
                      l4485 1068                        l4477 1040                        l4469 1020  
                      l5197 342A                        l5189 3398                        l5533 0A42  
                      l5525 09F6                        l5509 0954                        l5461 0738  
                      l5453 0716                        l5445 06BA                        l5437 061A  
                      l5429 0590                        l5381 02E4                        l5373 0222  
                      l5365 01A2                        l5349 015A                        l5621 0BC0  
                      l5613 0B4C                        l4671 4756                        l6431 29B8  
                      l6423 297A                        l6415 294A                        l6191 21F4  
                      l6183 21DC                        l6175 21C4                        l6167 21B0  
                      l6159 216E                        l6351 1B0A                        l6343 1AF2  
                      l6335 1ADA                        l6327 1AC2                        l6319 1AA8  
                      l6271 1936                        l6087 2E32                        l6079 2DC8  
                      l5551 3A54                        l5543 39EC                        l4727 382E  
                      l4719 3804                        l4751 390E                        l4743 38B4  
                      l4735 3874                        l4663 48CC                        l5295 2646  
                      l5287 25F2                        l5279 2550                        l4831 1E06  
                      l4823 1DC8                        l4815 1DA4                        l4807 1D72  
                      l4911 14AE                        l4655 1482                        l4647 146A  
                      l4639 1432                        l4583 1276                        l4591 12CC  
                      l4575 123E                        l4567 1212                        l4559 11E0  
                      l4495 109C                        l4487 106A                        l4479 1052  
                      l5199 3466                        l5519 09BC                        l5527 0A14  
                      l5471 080A                        l5463 07B0                        l5455 071E  
                      l5447 06EE                        l5439 062A                        l5391 039A  
                      l5383 0318                        l5375 0260                        l5631 0C3C  
                      l5615 0B82                        l5607 0ADA                        l6441 2A2A  
                      l6433 29C4                        l6417 2958                        l5801 41B2  
                      l6193 21FC                        l6185 21E4                        l6177 21CC  
                      l6169 21B4                        l6361 1B5C                        l6353 1B0E  
                      l6345 1AF6                        l6337 1ADE                        l6329 1AC6  
                      l6281 1992                        l6265 190C                        l6257 18BE  
                      l6521 2EE8                        l6513 2EBE                        l6505 2E70  
                      l6089 2E40                        l5561 3AFA                        l5553 3A8C  
                      l5545 3A0C                        l5537 39D4                        l4729 384E  
                      l4753 391C                        l4761 3982                        l4745 38D4  
                      l4737 3882                        l4665 48D0                        l5297 264C  
                      l5289 260C                        l4841 1E52                        l4833 1E16  
                      l4809 1D88                        l4921 14E6                        l4913 14B0  
                      l4649 146C                        l4593 12F2                        l4585 12AA  
                      l4577 1240                        l4569 1220                        l4489 107A  
                      l4497 10A4                        l5529 0A24                        l5481 0830  
                      l5473 080E                        l5465 07D0                        l5457 0724  
                      l5449 0702                        l5393 03AA                        l5385 0320  
                      l5377 0292                        l5369 01E8                        l5633 0C4A  
                      l5625 0BCE                        l5617 0B92                        l5609 0B12  
                      l6601 3EB4                        l4675 475C                        l4667 474C  
                      l5571 439A                        l6451 2A8E                        l6443 2A50  
                      l6435 29E4                        l6427 2996                        l5803 41C0  
                      l6187 21E8                        l6179 21D0                        l6195 2200  
                      l5811 4346                        l6371 1BC0                        l6363 1B82  
                      l6347 1AFE                        l6339 1AE6                        l6355 1B12  
                      l6291 19F0                        l6283 19A0                        l6275 1952  
                      l6267 1912                        l6259 18E2                        l6531 2F60  
                      l6523 2F02                        l6515 2EC4                        l6507 2E94  
                      l4683 4A2C                        l5563 3B0C                        l5547 3A44  
                      l5539 39E8                        l4691 36EC                        l4763 3992  
                      l4755 394A                        l4747 38F2                        l4739 38A2  
                      l4659 48AE                        l5299 265C                        l4851 1E9C  
                      l4843 1E60                        l4835 1E26                        l4827 1DDC  
                      l4819 1DB8                        l4771 1CB2                        l4931 1512  
                      l4923 14F6                        l4915 14C0                        l4907 1494  
                      l4595 1302                        l4587 12AC                        l4579 124A  
                      l4499 10B4                        l5491 0864                        l5483 0836  
                      l5475 0814                        l5467 07EC                        l5459 072C  
                      l5395 03B6                        l5379 02D0                        l5651 0D66  
                      l5643 0CDA                        l5635 0C72                        l5627 0C0A  
                      l5619 0BA0                        l6611 3F08                        l6603 3EDA  
                      l4677 4786                        l4669 4750                        l5573 439E  
                      l6613 4550                        l6621 4848                        l5741 4AC8  
                      l6461 2AC8                        l6453 2A96                        l6437 2A04  
                      l6429 299E                        l6197 2216                        l6189 21F0  
                      l5813 434A                        l5805 430E                        l6381 1BFA  
                      l6373 1BC8                        l6357 1B28                        l6349 1B02  
                      l6293 19F6                        l6285 19AE                        l6277 195E  
                      l6269 192E                        l6541 2FC8                        l6533 2F6E  
                      l6525 2F0E                        l6509 2EA2                        l4685 4A48  
                      l5549 3A4C                        l4693 36FA                        l4765 39B2  
                      l4757 396A                        l4749 38FA                        l4861 1EE2  
                      l4853 1EAE                        l4845 1E6C                        l4837 1E2E  
                      l4829 1DF6                        l4781 1CF2                        l4773 1CC0  
                      l4941 1568                        l4933 1522                        l4925 14FC  
                      l4917 14D0                        l4909 14A0                        l4589 12BC  
                      l5493 086A                        l5477 081C                        l5469 07FA  
                      l5485 083C                        l5397 03BE                        l5389 0360  
                      l7501 0E3E                        l5661 0E12                        l5653 0DBC  
                      l5637 0CAC                        l5629 0C32                        l5645 0D16  
                      l5821 465A                        l6605 3EEC                        l5901 45F6  
                      l6701 3120                        l5575 43AA                        l5583 43CE  
                      l6615 4574                        l6623 4860                        l6463 2ACC  
                      l6447 2A6C                        l6439 2A12                        l6199 224E  
                      l5815 4358                        l6383 1BFE                        l6367 1B9E  
                      l6359 1B44                        l6287 19D4                        l6279 197A  
                      l6391 1C30                        l6551 300E                        l6543 2FCE  
                      l6535 2F86                        l6527 2F2E                        l6519 2EE0  
                      l7511 2E56                        l5559 3AC6                        l4695 371A  
                      l4759 397C                        l4871 1F42                        l4855 1EC4  
                      l4863 1EF4                        l4847 1E8A                        l4839 1E3E  
                      l4791 1D18                        l4783 1CF4                        l4775 1CC2  
                      l4951 15A2                        l4943 1578                        l4935 1532  
                      l4927 1502                        l4919 14E0                        l4599 1316  
                      l5495 08C2                        l5487 084E                        l5479 082C  
                      l5399 03C6                        l7503 0EFC                        l5663 0E1A  
                      l5671 0E5C                        l5647 0D26                        l5639 0CCC  
                      l5591 0A8C                        l5743 4606                        l5823 466C  
                      l6607 3EFA                        l6631 359A                        l5903 45FC  
                      l5911 4A9E                        l6711 312A                        l6703 3122  
                      l5921 49C2                        l5577 43B6                        l5569 4ADC  
                      l5761 44B2                        l6617 45A6                        l5753 4A88  
                      l6465 2ACE                        l6457 2AB2                        l6449 2A72  
                      l6473 2B00                        l5817 4370                        l5809 432A  
                      l6393 1C72                        l7521 1C46                        l6385 1C08  
                      l6377 1BE4                        l6369 1BA4                        l6297 1A12  
                      l6561 302C                        l6553 3016                        l6545 2FEA  
                      l6537 2FAC                        l6529 2F4E                        l7513 289E  
                      l4697 371E                        l4689 36E8                        l4881 1FB0  
                      l4865 1F02                        l4857 1ECA                        l4849 1E8C  
                      l4793 1D26                        l4777 1CD2                        l4785 1CFC  
                      l4769 1CA6                        l4961 15F4                        l4953 15B8  
                      l4937 1542                        l4929 1510                        l5497 08F6  
                      l5489 0860                        l7505 0F86                        l5681 0F12  
                      l5673 0E80                        l5665 0E22                        l5657 0DEC  
                      l5649 0D46                        l5593 0A9A                        l5745 4612  
                      l5825 4674                        l6609 3EFE                        l6641 35D8  
                      l6633 35B0                        l6625 3536                        l5841 4722  
                      l5833 46FC                        l5905 4AB2                        l5913 4AA0  
                      l6721 3136                        l6713 312C                        l6705 3124  
                      l5579 43C2                        l5763 44B6                        l6619 4824  
                      l5755 4A8E                        l6491 2BBC                        l7531 2B74  
                      l6483 2B5E                        l6467 2AD8                        l6459 2ABA  
                      l5771 4212                        l5819 437E                        l7523 1C8C  
                      l6387 1C1E                        l6379 1BEC                        l6299 1A1A  
                      l6555 3024                        l6563 3036                        l6547 2FF2  
                      l7515 2904                        l5931 26A6                        l7507 3A76  
                      l4699 372C                        l4891 201A                        l4875 1F6C  
                      l4883 1FB4                        l4867 1F06                        l4859 1ED4  
                      l4795 1D28                        l4787 1D0C                        l4779 1CE2  
                      l4971 163A                        l4963 1602                        l4955 15C4  
                      l4947 158C                        l4939 1548                        l5499 08FE  
                      l5683 0F32                        l5675 0EB4                        l5691 0F94  
                      l5659 0DFC                        l5595 0AA8                        l5747 462E  
                      l5827 467C                        l6651 3660                        l6643 360A  
                      l6627 3546                        l5843 4726                        l5835 4704  
                      l5907 4AB4                        l5915 4AA8                        l5851 4288  
                      l6731 3142                        l6723 3138                        l6715 312E  
                      l6707 3126                        l5917 49AC                        l7533 43E2  
                      l5757 447E                        l6477 2B48                        l6485 2B8A  
                      l6469 2AEE                        l5781 4258                        l5773 4216  
                      l5765 41DA                        l7525 235E                        l6397 1C76  
                      l7517 3074                        l6565 304C                        l6557 3028  
                      l5933 26AA                        l5925 267E                        l7509 2DFE  
                      l4893 201E                        l4885 1FCE                        l4877 1F78  
                      l4869 1F14                        l4797 1D38                        l4789 1D12  
                      l4981 16A8                        l4973 1654                        l4965 160E  
                      l4957 15DC                        l4949 1598                        l5669 0E2A  
                      l5597 0AAC                        l5589 0A64                        l5749 464E  
                      l5829 4698                        l6661 36B6                        l6653 366E  
                      l6645 360C                        l6637 35C4                        l6629 3554  
                      l5845 4732                        l5837 4706                        l5909 4ABC  
                      l5861 42CA                        l5853 42A0                        l6741 316A  
                      l6733 3146                        l6725 313A                        l6717 3132  
                      l6709 3128                        l5919 49B0                        l7535 4770  
                      l5759 448C                        l5847 4A70                        l6487 2B9C  
                      l6479 2B54                        l5783 4266                        l5775 4224  
                      l5791 416C                        l7527 23A4                        l6399 1C9A  
                      l7519 30DA                        l6575 30C4                        l6559 302A  
                      l5951 2736                        l5943 26E8                        l5927 26A2  
                      l4895 202C                        l4887 1FE4                        l4879 1F86  
                      l4799 1D48                        l4991 173E                        l4983 16D2  
                      l4975 1664                        l4967 161E                        l4959 15E8  
                      l5679 0EE8                        l5599 0AB8                        l5695 0FA6  
                      l6591 3E52                        l6663 36C6                        l6655 368C  
                      l6647 3618                        l6639 35CC                        l5839 470E  
                      l5871 42E8                        l5863 42D0                        l5855 42A6  
                      l6751 31EE                        l6743 3192                        l6735 3154  
                      l6727 313C                        l6719 3134                        l6671 30FA  
                      l5881 4A60                        l6489 2BAA                        l7529 2B16  
                      l5777 4232                        l5769 41F6                        l5793 4170  
                      l5785 4134                        l6569 305E                        l5961 27C2  
                      l5953 2756                        l5945 26F0                        l5937 26C6  
                      l5929 26A4                        l4897 2032                        l4889 1FFE  
                      l4993 174C                        l4985 1708                        l4977 1680  
                      l4969 162A                        l5689 0F64                        l6593 3E64  
                      l6665 36D4                        l6657 368E                        l6649 3654  
                      l5873 42F0                        l5865 42D6                        l5857 42B6  
                      l5849 4280                        l6761 3230                        l6753 31F0  
                      l6745 31C6                        l6737 3162                        l6729 313E  
                      l6681 3108                        l6673 30FE                        l5883 4A62  
                      l5779 424A                        l5795 417E                        l5971 2818  
                      l5963 27DA                        l5955 278E                        l5947 270A  
                      l5939 26CC                        l4899 2034                        l4995 175E  
                      l4987 1716                        l4979 168C                        l6595 3E72  
                      l6667 36D6                        l6659 3692                        l5875 42F8  
                      l5867 42DC                        l5859 42BC                        l6771 3248  
                      l6763 3234                        l6755 31F2                        l6747 31D2  
                      l6739 3166                        l6691 3116                        l6683 310A  
                      l6675 3100                        l5885 4A6C                        l5797 418C  
                      l5789 4150                        l5981 2852                        l5973 2820  
                      l5957 27A6                        l5949 2716                        l4997 176C  
                      l4989 1734                        l6597 3E90                        l6589 3E3A  
                      l5877 42FE                        l5869 42E4                        l6781 3270  
                      l6773 3250                        l6765 3236                        l6757 31F4  
                      l6749 31EA                        l6693 3118                        l6685 310E  
                      l6677 3104                        l5879 4A52                        l5799 41A4  
                      l5983 2856                        l5967 27F6                        l5959 27B4  
                      l5991 2888                        l4999 1770                        l6599 3EA2  
                      l5895 45D2                        l5887 45B4                        l6783 3278  
                      l6775 3258                        l6767 3238                        l6759 31FE  
                      l6695 311A                        l6687 3112                        l6679 3106  
                      l5993 28CA                        l5985 2860                        l5977 283C  
                      l5969 27FC                        l5897 45E4                        l5889 45CE  
                      l7497 32AE                        l6785 3280                        l6777 3260  
                      l6769 323A                        l6793 3298                        l6697 311C  
                      l6689 3114                        l5995 28D2                        l5987 2876  
                      l5979 2844                        l7499 0B04                        l5899 45E6  
                      l6787 3288                        l6779 3268                        l6795 3304  
                      l6699 311E                        l5997 28E0                        l6789 3290  
                      STR_1 FF5D                        STR_2 FF90                        STR_3 FF5D  
                      STR_4 FF19                        STR_5 FF3B                        STR_6 FF7F  
                      STR_7 FF3B                        STR_8 FEF7                        STR_9 FFA1  
                      _LATA 0004BE                        u4000 377A                        u4001 3776  
                      u4010 37A4                        u4011 37A0                        u4020 37E4  
                      u4100 1CC0                        u4021 37E0                        u4101 1CBC  
                      u4030 382E                        u4110 1CD2                        u4031 382A  
                      u4111 1CCE                        u4040 3882                        u5000 243A  
                      u4200 1E8A                        u4120 1CE2                        u4041 387E  
                      u5001 2436                        u4201 1E86                        u4121 1CDE  
                      u4050 38B4                        u5010 2456                        u4210 1EAE  
                      u4130 1D26                        u4051 38B0                        u5011 2452  
                      u4211 1EAA                        u4131 1D22                        u4060 38F2  
                      u3500 3F36                        u5020 2482                        u4300 1FCE  
                      u4220 1EC4                        u4140 1D38                        u5100 0024  
                      u4061 38EE                        u3501 3F32                        u5021 247E  
                      u4301 1FCA                        u4221 1EC0                        u4141 1D34  
                      u5101 0020                        u4070 391C                        u3510 3F5E  
                      u5030 2498                        u4310 1FFE                        u4230 1EE2  
                      u4150 1D48                        u5110 006E                        u4071 3918  
                      u3511 3F5A                        u5031 2494                        u4311 1FFA  
                      u4231 1EDE                        u4151 1D44                        u5111 006A  
                      u6000 2D42                        u4080 394A                        u3520 3F94  
                      u5040 25D4                        u4320 202C                        u4240 1F02  
                      u4160 1D88                        u4400 1578                        u3600 1052  
                      u5200 02D0                        u5120 007E                        u6001 2D3E  
                      u4081 3946                        u3521 3F90                        u5041 25D0  
                      u4321 2028                        u4241 1EFE                        u4161 1D84  
                      u4401 1574                        u3601 104E                        u5201 02CC  
                      u5121 007A                        u3530 441A                        u6010 2D58  
                      u4090 3992                        u5050 25F2                        u4250 1F14  
                      u4170 1DC8                        u4410 16F2                        u4330 14AE  
                      u3610 1068                        u5210 035C                        u5130 00BC  
                      u3531 4416                        u6011 2D54                        u4091 398E  
                      u5051 25EE                        u4251 1F10                        u4171 1DC4  
                      u4331 14AA                        u3611 1064                        u5211 0358  
                      u5131 00B8                        u3540 4430                        u6100 20C4  
                      u6020 2D7A                        u5060 260C                        u4260 1F42  
                      u4180 1E3E                        u4500 1866                        u4420 174C  
                      u4340 14C0                        u3700 11A2                        u3620 107A  
                      u5300 061A                        u5220 0392                        u5140 00CE  
                      u3541 442C                        u6101 20C0                        u6021 2D76  
                      u5061 2608                        u4261 1F3E                        u4181 1E3A  
                      u4501 1862                        u4421 1748                        u4341 14BC  
                      u3701 119E                        u3621 1076                        u5301 0616  
                      u5221 038E                        u5141 00CA                        u3550 4446  
                      u6110 20FA                        u6030 2D88                        u5070 2626  
                      u4270 1F58                        u4190 1E60                        u4510 18A0  
                      u4430 176C                        u4350 14D0                        u3710 11C2  
                      u3630 108A                        u5310 06B4                        u5230 03AA  
                      u5150 0148                        u3551 4442                        u6111 20F6  
                      u6031 2D84                        u5071 2622                        u4271 1F54  
                      u4191 1E5C                        u4511 189C                        u4431 1768  
                      u4415 16E8                        u4351 14CC                        u3711 11BE  
                      u3631 1086                        u5311 06B0                        u5231 03A6  
                      u5151 0144                        u3560 445C                        u6200 22EE  
                      u6120 2108                        u6040 2DB6                        u5080 2636  
                      u4280 1F6C                        u4520 40B8                        u4440 177E  
                      u4360 1510                        u4600 4988                        u3800 1302  
                      u3720 11D0                        u3640 10C6                        u5400 09A6  
                      u5320 0702                        u5240 03DC                        u5160 015A  
                      u3561 4458                        u6201 22EA                        u6121 2104  
                      u6041 2DB2                        u5081 2632                        u4281 1F68  
                      u4521 40B4                        u4441 177A                        u4361 150C  
                      u4601 4984                        u3801 12FE                        u3721 11CC  
                      u3641 10C2                        u5321 06FE                        u5241 03D8  
                      u5161 0156                        u6210 22FC                        u6130 216A  
                      u6050 2E2A                        u3490 3F24                        u5090 2646  
                      u4290 1F86                        u4530 40F6                        u4450 17AC  
                      u4370 1522                        u3810 132E                        u3730 11E0  
                      u3650 10D4                        u3570 0FEE                        u4610 3B48  
                      u5410 09B8                        u5330 07B0                        u5250 03EA  
                      u5170 01D4                        u6211 22F8                        u6131 2166  
                      u6051 2E26                        u3491 3F20                        u5091 2642  
                      u4291 1F82                        u4531 40F2                        u4451 17A8  
                      u4371 151E                        u3811 132A                        u3731 11DC  
                      u3651 10D0                        u3571 0FEA                        u4611 3B44  
                      u5411 09B4                        u5331 07AC                        u5251 03E6  
                      u5171 01D0                        u6220 2312                        u6140 2198  
                      u6060 2072                        u6300 1952                        u4700 4064  
                      u4540 412A                        u4460 17C2                        u4380 1532  
                      u3900 1410                        u3820 133E                        u3740 1212  
                      u3660 1142                        u3580 1000                        u4620 3B7C  
                      u5420 09F6                        u5340 07EC                        u5260 0414  
                      u5180 0260                        u5500 0B24                        u6221 230E  
                      u6141 2194                        u6061 206E                        u6301 194E  
                      u4701 4060                        u4541 4126                        u4461 17BE  
                      u4381 152E                        u3901 140C                        u3821 133A  
                      u3741 120E                        u3661 113E                        u3581 0FFC  
                      u5421 09F2                        u5341 07E8                        u5261 0410  
                      u5181 025C                        u5501 0B20                        u4550 3C66  
                      u6230 2336                        u6150 21A6                        u6070 2080  
                      u6310 19E2                        u4710 4074                        u4470 17D6  
                      u4390 1568                        u3910 1422                        u3830 135A  
                      u3750 1220                        u3670 115A                        u3590 1010  
                      u4630 3BAA                        u5430 0A14                        u5350 07FA  
                      u5270 055C                        u5190 0292                        u5510 0B4C  
                      u4551 3C62                        u6231 2332                        u6151 21A2  
                      u6071 207C                        u6311 19DE                        u4711 4070  
                      u4471 17D2                        u4391 1564                        u3911 141E  
                      u3831 1356                        u3751 121C                        u3671 1154  
                      u3591 100C                        u4631 3BA6                        u5431 0A10  
                      u5351 07F6                        u5271 0558                        u5191 028E  
                      u5511 0B48                        u7007 42BE                        u4560 3CA4  
                      u6240 2344                        u6160 2212                        u6080 2094  
                      u6400 1AA8                        u6320 19F0                        u4720 494C  
                      u4480 17F0                        u3920 1432                        u3840 136A  
                      u3760 123E                        u3680 115C                        u4640 3BBE  
                      u4800 48AC                        u5440 0A24                        u5360 084E  
                      u5280 05C2                        u5520 0B92                        u5600 464E  
                      u4561 3CA0                        u6241 2340                        u6161 220E  
                      u6081 2090                        u6401 1AA4                        u6321 19EC  
                      u4721 4948                        u4481 17EC                        u3921 142E  
                      u3841 1366                        u3761 123A                        u4641 3BBA  
                      u4625 3B72                        u4801 48A8                        u5441 0A20  
                      u5361 084A                        u5281 05BE                        u5521 0B8E  
                      u5601 464A                        u7017 42DE                        u4570 3CC2  
                      u5610 44AE                        u6250 238A                        u6170 22A8  
                      u6090 20A2                        u6410 1B24                        u6330 1A04  
                      u5450 3A0C                        u4490 1838                        u3930 1452  
                      u3850 137C                        u3770 1276                        u3690 1184  
                      u4650 3BE6                        u4730 3D7C                        u4810 4508  
                      u5370 0920                        u5290 060A                        u5530 0C0A  
                      u4571 3CBE                        u6251 2386                        u6171 22A4  
                      u6091 209E                        u6411 1B20                        u6331 1A00  
                      u7107 2C84                        u5451 3A08                        u4491 1834  
                      u3931 144E                        u3851 1378                        u3771 1272  
                      u3691 1180                        u4651 3BE2                        u4811 4504  
                      u5371 091C                        u5291 0606                        u5531 0C06  
                      u7027 42F2                        u4580 3CE2                        u5620 44D8  
                      u6180 22B6                        u5700 431C                        u6500 1C72  
                      u6420 1B90                        u6340 1A12                        u6260 18FE  
                      u5460 3A40                        u3940 1464                        u3860 1392  
                      u3780 12BC                        u4660 3C06                        u4740 3D9A  
                      u4900 34D6                        u4820 336A                        u5380 093C  
                      u5540 0C32                        u4581 3CDE                        u6181 22B2  
                      u5701 4318                        u6501 1C6E                        u6421 1B8C  
                      u6341 1A0E                        u6261 18FA                        u7117 2CB8  
                      u5461 3A3C                        u3941 1460                        u3861 138E  
                      u3781 12B8                        u4661 3C02                        u4741 3D96  
                      u4901 34D2                        u5381 0938                        u5541 0C2E  
                      u7037 4304                        u4590 3D32                        u5630 44E8  
                      u6510 2966                        u6190 22D8                        u5710 432A  
                      u6430 1B9E                        u6350 1A34                        u6270 190C  
                      u5470 3AFA                        u3950 1480                        u3870 13A8  
                      u3790 12F2                        u4670 3C16                        u4750 3DC2  
                      u4910 3512                        u4830 3398                        u5390 09A4  
                      u5550 0C72                        u4591 3D2E                        u5631 44E4  
                      u6511 2962                        u6191 22D4                        u7207 4362  
                      u5711 4326                        u6431 1B9A                        u6351 1A30  
                      u6271 1908                        u7127 2798                        u5471 3AF6  
                      u3951 147C                        u3871 13A4                        u3791 12EE  
                      u4671 3C12                        u4751 3DBE                        u4735 3D72  
                      u4911 350E                        u4831 3394                        u5391 099E  
                      u5551 0C6E                        u7047 4AAA                        u6600 2AB2  
                      u6520 2974                        u5640 41E8                        u5720 4346  
                      u6440 1BC0                        u6360 1A4A                        u6280 192E  
                      u5800 26E8                        u5480 3B0C                        u3960 48F0  
                      u4680 3FEC                        u3880 13BC                        u4760 3DEC  
                      u4840 33BA                        u4920 46FA                        u5560 0D16  
                      u5617 44A4                        u6601 2AAE                        u6521 2970  
                      u5641 41E4                        u7217 4388                        u5721 4342  
                      u6441 1BBC                        u6361 1A46                        u6281 192A  
                      u7137 27CC                        u5801 26E4                        u5481 3B08  
                      u3961 48EC                        u4681 3FE8                        u3881 13B8  
                      u4761 3DE8                        u4841 33B6                        u4825 3360  
                      u4921 46F6                        u5561 0D12                        u7057 4ABE  
                      u6610 2AC8                        u6530 2988                        u5650 41F6  
                      u6450 1BD6                        u6370 1A6C                        u6290 1944  
                      u5810 270A                        u4930 49FE                        u3970 36FA  
                      u4690 400E                        u3890 13D6                        u5570 0D46  
                      u5490 0A8C                        u5730 471E                        u5627 44CE  
                      u7307 4A94                        u6611 2AC4                        u6531 2984  
                      u5651 41F2                        u7227 2258                        u6451 1BD2  
                      u6371 1A68                        u6291 1940                        u7147 2F78  
                      u5811 2706                        u4931 49F8                        u3971 36F6  
                      u4691 400A                        u3891 13D2                        u5571 0D42  
                      u5491 0A88                        u5731 471A                        u7067 45FE  
                      u6620 2AEE                        u6540 2996                        u5660 4212  
                      u6460 1BE4                        u6380 1A7A                        u6700 2EE0  
                      u5900 28CA                        u5820 27E8                        u4940 4A00  
                      u3980 372C                        u4780 3E26                        u4860 3426  
                      u5580 0D66                        u5740 4740                        u7317 4470  
                      u6621 2AEA                        u6541 2992                        u5661 420E  
                      u7237 228C                        u6461 1BE0                        u6381 1A76  
                      u7157 2F9E                        u6701 2EDC                        u5901 28C6  
                      u5821 27E4                        u3981 3728                        u4781 3E20  
                      u4861 3422                        u5581 0D62                        u5741 473C  
                      u7077 4708                        u6630 2AFC                        u6550 29B8  
                      u5670 4142                        u6470 1BFA                        u6390 1A9A  
                      u6710 2F02                        u5830 27F6                        u5910 2BFE  
                      u4950 47F6                        u4790 3E28                        u4870 344A  
                      u5590 0E7C                        u5750 45F6                        u6631 2AF8  
                      u6551 29B4                        u7247 4196                        u5671 413E  
                      u6471 1BF6                        u6391 1A96                        u7167 1984  
                      u6711 2EFE                        u5831 27F2                        u5911 2BFA  
                      u4951 47F2                        u3991 3756                        u4775 3DFE  
                      u4855 33CE                        u5591 0E78                        u7087 4728  
                      u5751 45F2                        u5760 49C2                        u6640 2B42  
                      u6560 2A5E                        u5680 4150                        u6480 1C1E  
                      u6800 30A8                        u6720 2FBA                        u5840 2818  
                      u5920 2C0C                        u4960 4818                        u4880 3466  
                      u4856 33D8                        u5761 49BE                        u6641 2B3E  
                      u6561 2A5A                        u7257 41CA                        u5681 414C  
                      u6481 1C1A                        u7177 19B8                        u6801 30A4  
                      u6721 2FB6                        u5841 2814                        u5921 2C08  
                      u4961 4814                        u4881 3462                        u4857 33E8  
                      u7097 3E44                        u6650 2B9C                        u6570 2A6C  
                      u5690 416C                        u6490 1C2C                        u6730 2FC8  
                      u5850 282E                        u5770 26B8                        u5930 2C2E  
                      u4970 23F6                        u4890 34BA                        u6810 3EFA  
                      u6651 2B98                        u6571 2A68                        u7267 423C  
                      u5691 4168                        u6491 1C28                        u7187 1B4E  
                      u6731 2FC4                        u5851 282A                        u5771 26B4  
                      u5931 2C2A                        u4971 23F0                        u4875 3440  
                      u6811 3EF6                        u6820 45A6                        u6660 2BBC  
                      u6580 2A8E                        u6740 2FEA                        u5860 283C  
                      u5780 26C6                        u5940 2C44                        u4980 23F8  
                      u6900 367E                        u6821 45A2                        u6661 2BB8  
                      u6581 2A8A                        u7277 4270                        u7197 1B74  
                      u6741 2FE6                        u5861 2838                        u5781 26C2  
                      u5941 2C40                        u6901 367A                        u6830 4860  
                      u6590 2AA4                        u6750 3000                        u6670 2EB0  
                      u5870 2852                        u5790 26DA                        u5950 2C52  
                      u4990 240A                        u6910 368C                        u6831 485C  
                      u6591 2AA0                        u7287 2A1C                        u6751 2FFC  
                      u6671 2EAC                        u5871 284E                        u5791 26D6  
                      u5951 2C4E                        u4991 2406                        u4895 34B0  
                      u6911 3688                        u6760 300E                        u6680 2EBE  
                      u5880 2876                        u5960 2CF0                        u6920 36C6  
                      u6840 3546                        u7297 2A42                        u6761 300A  
                      u6681 2EBA                        u5881 2872                        u5961 2CEC  
                      u6921 36C2                        u6841 3542                        u6770 3024  
                      u6690 2ED2                        u5890 2884                        u5970 2CFE  
                      u6930 36D4                        u6850 3554                        u6771 3020  
                      u6691 2ECE                        u5891 2880                        u5971 2CFA  
                      u6931 36D0                        u6851 3550                        u6780 304C  
                      u5980 2D12                        u6860 35B0                        u6940 31EA  
                      u6781 3048                        u5981 2D0E                        u6861 35AC  
                      u6941 31E6                        u6790 305A                        u5990 2D20  
                      u6870 3606                        u6950 3230                        u6791 3056  
                      u5991 2D1C                        u6871 3602                        u6951 322C  
                      u6880 3650                        u6881 364C                        u6890 366E  
                      u6891 366A                        u6977 330E                        u6987 4292  
                      u6997 42AC                        _fig1 05C5                        _fig2 05BD  
                      abs@a 0513                        _dbuf 0600                        _labs 44EA  
                      _atoi 39D4                        _main 30FA                        _dtoa 23C6  
                      _prec 05DB                        _temp 05D5                        pad@i 0518  
                      pad@p 0515                        fsr1h 0004E2                        fsr2h 0004DA  
                      indf1 0004E7                        indf2 0004DF                        fsr1l 0004E1  
                      pad@w 051A                        fsr2l 0004D9            __end_of_ADC_Init 4A70  
          __end_of_ADC_Read 49DA               ___fpclassifyf 3D3C                        prodh 0004F4  
                      prodl 0004F3                        start FFFC             ___fldiv@new_exp 0512  
             __write_nibble 440A                 _ultrasonido 05E1             __end_of_Sec1Est 4280  
           __end_of_Sec2Est 41DA             __end_of_Sec3Est 4398                ___param_bank 000000  
           __end_of_MenuLed 23C6                       ??_abs 0515                       ??_pad 0517  
                _Clock_Init 4A70            lcd_custom_char@i 050C               ___fltol@sign1 0509  
           __end_of___aodiv 3870                       ?_labs 0501                       ?_atoi 0507  
           __end_of___fladd 1494                       ?_main 0501                       ?_dtoa 051C  
           __end_of___aomod 39D4                       _ADPCH 0003EC             __end_of___fldiv 2040  
           __end_of___flneg 49AA                       STR_10 FF08                       STR_11 FF06  
                     STR_20 FFC0                       STR_12 FF2A                       STR_21 FFB2  
                     STR_13 FF4C                       STR_22 FFF3                       STR_14 FF6E  
                     STR_15 FFEB              ??_getdistancia 0503                       STR_16 FFFB  
                     STR_25 FFF7                       STR_17 FFDA                       STR_18 FFCE  
                     STR_19 FFE3             __end_of___flmul 18BE             __end_of___flsub 47DE  
           __end_of___fltol 3C38                vfpfcnvrt@fmt 0541                       _PORTF 0004D3  
                     _TRISA 0004C6                       _TRISF 0004CB                       _MenuS 3E3A  
           __end_of_lcd_out 44EA                       _flags 05E3                       _opSel 05A7  
                     _fputc 3F12                       _fputs 48AE             __end_of_isdigit 4A06  
                     labs@a 0501                       atoi@n 050E                       pad@fp 0511  
                     atoi@s 0507                       _width 05D9                       _state 05E5  
                     _putch 4AF6                       dtoa@d 051E                       dtoa@i 053C  
                     dtoa@n 0534                       dtoa@p 0530                       dtoa@s 053E  
                     dtoa@w 0532                main@valoradc 055B             __end_of_isspace 4824  
               _Advertencia 4550                       tablat 0004F5                       status 0004D8  
           __end_of_sprintf 46AC              ?___fpclassifyf 0501              ?__write_nibble 0501  
            _MenuCalentador 2926             __initialization 48F2                  _MenuLedCon 18BE  
              __end_of_labs 4550                __end_of_atoi 3B32                __end_of_main 3322  
              __end_of_dtoa 267E                      ??_labs 0505                      ??_atoi 0509  
                    ??_main 0559                      ??_dtoa 0526               _MenuPrincipal 267E  
             __activetblptr 000003              lcd_command@cmd 0507                      ?_MenuS 0501  
                    ?_fputc 0501                      ?_fputs 050A                      _ADRESH 0003EB  
                    _ADRESL 0003EA                      _ANSELA 000400                      ?_putch 0501  
                    _ANSELF 000428               vfpfcnvrt@done 0548                   ??_Sec1Est 050F  
                 ??_Sec2Est 050F                   ??_Sec3Est 050F      __end_of_MenuCalentador 2BCC  
          __end_of___xxtofl 36E8                   ??_MenuLed 0511            __end_of_lcd_char 4ADA  
              vfprintf@cfmt 0555            __end_of_lcd_init 430E                      ___flge 3C38  
                    ___fleq 408A                   ??___aodiv 0511                   ??___fladd 0509  
                 ??___aomod 0511                      ___wmul 4A2C                   ??___fldiv 0509  
                 ??___flneg 0505                   ??___flmul 0509                   ??___flsub 0522  
                 ??___fltol 0505                      _efgtoa 0000                 ?_Clock_Init 0501  
                    _auxStr 05A9                      _floorf 3322                      _estado 05E4  
                    _memcpy 46AC                      _menuOp 05DF                      clear_0 4918  
                    clear_1 4924              ?_MenuPrincipal 0501                      isa$std 000001  
                    pad@buf 0513                      dtoa@fp 051C                      _strcpy 486A  
                 ??_lcd_out 050F                _Advertencia2 4824                      fputc@c 0501  
          _MenuPrincipalCon 2BCC                      fputs@c 050E                      fputs@i 050F  
                    fputs@s 050A                   ??_isdigit 0503             ___fpclassifyf@e 0509  
                 ?_ADC_Init 0501             ___fpclassifyf@u 050B                   ?_ADC_Read 0501  
           ___fpclassifyf@x 0501                __mediumconst FEF6                   ??_isspace 0503  
                    tblptrh 0004F7                      tblptrl 0004F6                      tblptru 0004F8  
                    putch@c 0501            __end_of_vfprintf 465A                   ??_sprintf 0557  
                ___flge@ff1 051A                  ___flge@ff2 051E             ??___fpclassifyf 0505  
              ___xxtofl@arg 0510                ___xxtofl@exp 050F                ___xxtofl@val 0506  
                ___fleq@ff1 0501                  ___fleq@ff2 0505                  __accesstop 0560  
   __end_of__initialization 492C             ??__write_nibble 0501                  ___flneg@f1 0501  
           ?_MenuCalentador 0501        __end_of_getdistancia 474A               ___rparam_used 000001  
                ___fltol@f1 0501               __end_of_MenuS 3F12                 ?_MenuLedCon 0501  
            __pcstackCOMRAM 0501                __pidataBANK5 4A06               __end_of_fputc 3FDC  
             __end_of_fputs 48F2               __end_of_putch 4AF8            ??_lcd_set_cursor 0509  
         __end_of_MenuMotor 30FA                  ??_ADC_Init 0501                  ??_ADC_Read 0503  
                   ??_MenuS 0557                     ??_fputc 0505                     ??_fputs 050E  
                   ??_putch 0501                  __pbssBANK5 05CD                  __pbssBANK6 0600  
        lcd_custom_char@mem 050B                  __send_byte 474A                     ?___flge 051A  
                   ?___fleq 0501                     ?___wmul 0501                     ?_efgtoa 052E  
           ??_MenuPrincipal 0510                     ?_floorf 051A                     ?_memcpy 0501  
                ADC_Read@ch 0505                     ?_strcpy 0501                   ?___xxtofl 0506  
         _lcd_disable_blink 4AB2                   ?_lcd_char 050C          ?_lcd_disable_blink 0501  
                 ?_lcd_init 0501                ?_Advertencia 0501                     _Sec1Est 41DA  
                   _Sec2Est 4134                     _Sec3Est 430E         ??_lcd_disable_blink 0508  
                 _ADREFbits 0003F8                     _MenuLed 2040                     __Hparam 0000  
                   __Lparam 0000           __end_of_lcd_clear 4A9E                     ___aodiv 36E8  
                   ___fladd 0FD4                     ___aomod 3870                     ___fldiv 1CA6  
                   ___flneg 4972                     ___flmul 1494                     ___flsub 4798  
                   ___fltol 3B32           __end_of_lcd_write 4AE8                   ?_vfprintf 058C  
                   __pcinit 48F2                     __ramtop 2600                     __ptext0 30FA  
                   __ptext1 4280                     __ptext2 4A9E                     __ptext3 4AB2  
                   __ptext4 45B2                     __ptext5 46FC                     __ptext6 3534  
                   __ptext7 3E3A                     __ptext8 465A                     __ptext9 4606  
                   _lcd_out 447C   __end_of_lcd_disable_blink 4AC6                     _isdigit 49DA  
                ??___xxtofl 050A                     _isspace 47DE            __send_byte@value 0506  
                   efgtoa@c 0534                     efgtoa@d 056B                     efgtoa@e 056F  
                   efgtoa@f 0530                     efgtoa@g 0582                     efgtoa@h 0577  
                   efgtoa@i 057F                     efgtoa@l 057B                     efgtoa@m 056D  
                   efgtoa@n 0586                     efgtoa@p 0562                     efgtoa@t 0564  
                   efgtoa@u 0588                     efgtoa@w 0571                     atoi@neg 050C  
                ??_lcd_char 050E                     _sprintf 465A                  ??_lcd_init 0508  
      end_of_initialization 492C  __end_of_lcd_disable_cursor 4AB2                     floorf@e 0528  
                   floorf@m 0524                     floorf@u 052A                     floorf@x 051A  
                   memcpy@d 0507                     memcpy@n 0505                     memcpy@s 0509  
                   fputc@fp 0503                     fputs@fp 050C    __end_of_MenuPrincipalCon 2E70  
               ?__send_byte 0503           __end_of_vfpfcnvrt 0FD4                  efgtoa@mode 0569  
                efgtoa@sign 0581                     postdec1 0004E5                     postdec2 0004DD  
                   postinc0 0004EE                     postinc1 0004E6                     postinc2 0004DE  
          vfpfcnvrt@convarg 054A                ??_Clock_Init 0501                  ??_vfprintf 0555  
                   strcpy@d 0507                     strcpy@s 0505                   _PORTBbits 0004CF  
         ??_lcd_custom_char 050A                   _PORTCbits 0004D0                   _PORTDbits 0004D1  
                 _PORTEbits 0004D2                   _PORTFbits 0004D3                _getdistancia 46FC  
               ___fladd@grs 0510               ___xxtofl@sign 050E                   _TRISBbits 0004C7  
                 _TRISCbits 0004C8                   _TRISDbits 0004C9                   _TRISEbits 0004CA  
                 _TRISFbits 0004CB                 ___fldiv@grs 0514                 ___fldiv@rem 050D  
          ??_MenuCalentador 0510              lcd_write@letra 0507                 ___flmul@grs 050E  
        __end_of_Clock_Init 4A88                  lcd_out@col 050C                  lcd_out@row 050F  
                lcd_out@str 050D               ??_lcd_command 0507                ??_MenuLedCon 0511  
            __end_of___flge 3D3C              __end_of___fleq 4134                 vfpfcnvrt@ap 0543  
               vfpfcnvrt@cp 0553                 vfpfcnvrt@fp 053F              __end_of___wmul 4A52  
            __end_of_efgtoa 0A64              __end_of_floorf 3534              __end_of_memcpy 46FC  
                floorf@F526 05CD              __end_of_strcpy 48AE         start_initialization 48F2  
               __end_of_abs 4972                 __end_of_pad 408A                   _MenuMotor 2E70  
        __end_of_MenuLedCon 1CA6                 __lcd_params 055F       __end_of___fpclassifyf 3E3A  
     __end_of__write_nibble 447C                 vfprintf@fmt 058E                    ??___flge 0522  
                  ??___fleq 0509                    ??___wmul 0505         __end_of_lcd_command 4AF6  
                  ??_efgtoa 0535                 __pdataBANK5 05A7                    ??_floorf 051E  
                  ??_memcpy 0507                    ??_strcpy 0505                   ___fladd@a 0505  
                 ___fladd@b 0501                   ___fldiv@a 0505                   ___fldiv@b 0501  
                 ___flmul@a 0505                   ___flmul@b 0501                 __pbssCOMRAM 055F  
                 ___flsub@a 051E                   ___flsub@b 051A               __pcstackBANK5 0560  
          ___aodiv@dividend 0501                  ?_MenuMotor 0501                    ?_Sec1Est 0501  
                  ?_Sec2Est 0501                    ?_Sec3Est 0501                    ?_MenuLed 0501  
               _efgtoa$1510 0566                   _dtoa$1479 052E               __pmediumconst FEF6  
                  ?___aodiv 0501                    ?___fladd 0501                    ?___aomod 0501  
                  ?___fldiv 0501            ___aodiv@quotient 0513                    ?___flneg 0501  
                  ?___flmul 0501                    ?___flsub 051A                    ?___fltol 0501  
                 _lcd_clear 4A88       __end_of_MenuPrincipal 2926                   _distancia 05DD  
                 _lcd_write 4ADA                    ?_lcd_out 050C                    ?_isdigit 0501  
                  _ADC_Init 4A52                    _ADC_Read 49AA                    ?_isspace 0501  
                  ?_sprintf 0592             __send_byte@mode 0503              ___wmul@product 0505  
               _lcd_command 4AE8             _lcd_custom_char 45B2           ?_MenuPrincipalCon 0501  
              ??__send_byte 0504          _lcd_disable_cursor 4A9E          ??_MenuPrincipalCon 0510  
                ?_lcd_clear 0501                   _vfpfcnvrt 0A64                  _ADCON0bits 0003F3  
                _ADCON2bits 0003F5         ?_lcd_disable_cursor 0501                  ?_lcd_write 0501  
         ___wmul@multiplier 0501               ?_Advertencia2 0501                    _WPUBbits 000409  
                  _WPUDbits 000419                _isspace$1590 0505                 ??_MenuMotor 0510  
                vfpfcnvrt@c 0552                   copy_data0 4906          __end_of__send_byte 4798  
      ??_lcd_disable_cursor 0508                    __Hrparam 0000                   memcpy@tmp 050B  
                vfprintf@ap 0590                    __Lrparam 0000                  vfprintf@fp 058C  
                ?_vfpfcnvrt 053F             ___aodiv@divisor 0509              ??_Advertencia2 0510  
           ___aodiv@counter 0511                  _ANSELBbits 000408                  _ANSELCbits 000410  
                _ANSELDbits 000418                  _ANSELEbits 000420          ___fpclassifyf@F465 05D1  
                _ANSELFbits 000428                  sprintf@fmt 0594                    ___xxtofl 3534  
                  __ptext10 0A64                    __ptext11 0000                    __ptext20 4972  
                  __ptext12 486A                    __ptext21 1494                    __ptext13 46AC  
                  __ptext30 3870                    __ptext22 408A                    __ptext14 44EA  
                  __ptext31 36E8                    __ptext23 1CA6                    __ptext15 3322  
                  __ptext40 430E                    __ptext32 39D4                    __ptext24 23C6  
                  __ptext16 3D3C                    __ptext41 2040                    __ptext33 47DE  
                  __ptext25 3FDC                    __ptext17 3B32                    __ptext50 447C  
                  __ptext42 4134                    __ptext34 49DA                    __ptext26 48AE  
                  __ptext18 4798                    __ptext51 4ADA                    __ptext43 41DA  
                  __ptext35 4A2C                    __ptext27 3F12                    __ptext19 0FD4  
                  __ptext52 4398                    __ptext44 2926                    __ptext36 2BCC  
                  __ptext28 4AF6                    __ptext53 4AE8                    __ptext45 4A88  
                  __ptext37 267E                    __ptext29 4932                    __ptext54 474A  
                  __ptext46 4AC6                    __ptext38 2E70                    __ptext55 440A  
                  __ptext47 4A70                    __ptext39 18BE                    __ptext56 3C38  
                  __ptext48 4824                    __ptext57 49AA                    __ptext49 4550  
                  __ptext58 4A52                    _lcd_char 4AC6                    _lcd_init 4280  
               _OSCCON1bits 0000AD     __end_of_lcd_custom_char 4606                  strcpy@dest 0501  
                  efgtoa@fp 052E                    efgtoa@ne 0560                    efgtoa@pp 0568  
                  efgtoa@ou 0573                    isa$xinst 000000                    _vfprintf 4606  
               ??_lcd_clear 0508                 ??_lcd_write 0507            ___aomod@dividend 0501  
                  memcpy@d1 0501                    memcpy@s1 0503                    isdigit@c 0501  
             ??_Advertencia 0526        __write_nibble@nibble 0502              _lcd_set_cursor 4398  
         lcd_set_cursor@col 0508                   sprintf@ap 059A           lcd_set_cursor@row 050B  
                  isspace@c 0501                   strcpy@src 0503            getdistancia@cont 0503  
                _OSCFRQbits 0000B1                 efgtoa@nmode 056A             ___aomod@divisor 0509  
               ??_vfpfcnvrt 0545             ___aomod@counter 0511                    sprintf@f 059C  
                  sprintf@s 0592      __end_of_lcd_set_cursor 440A               ___fladd@signs 050D  
              ___aodiv@sign 0512            ?_lcd_custom_char 0508                ___fladd@aexp 050E  
              ___fladd@bexp 050F        __end_of_Advertencia2 486A                ?_lcd_command 0501  
              ___aomod@sign 0512         __end_of_Advertencia 45B2  
